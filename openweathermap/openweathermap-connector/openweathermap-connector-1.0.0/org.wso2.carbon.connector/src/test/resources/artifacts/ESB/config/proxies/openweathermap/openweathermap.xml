<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="openweathermap"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence onError="faultHandlerSeq">
            <property name="apiUrl" expression="//apiUrl/text()"/>
            <property name="apiKey" expression="//apiKey/text()"/>
            <property name="apiVersion" expression="//apiVersion/text()"/>
            <property name="cityName" expression="//cityName/text()"/>
            <property name="countryCode" expression="//countryCode/text()"/>
            <property name="cityID" expression="//cityID/text()"/>
            <property name="lon" expression="//lon/text()"/>
            <property name="lat" expression="//lat/text()"/>
            <property name="zipCode" expression="//zipCode/text()"/>
            <property name="cnt" expression="//cnt/text()"/>
            <property name="lang" expression="//lang/text()"/>
            <property name="cluster" expression="//cluster/text()"/>
            <property name="bbox" expression="//bbox/text()"/>
            <property name="cityIDs" expression="//cityIDs/text()"/>
            <property name="units" expression="//units/text()"/>
            <property name="type" expression="//type/text()"/>
            <property name="count" expression="//count/text()"/>
            <property name="mode" expression="//mode/text()"/>
            <property name="start" expression="//start/text()"/>
            <property name="end" expression="//end/text()"/>
            <property name="types" expression="//types/text()"/>
            <property name="stationID" expression="//stationID/text()"/>
            <property name="frequencyType" expression="//frequencyType/text()"/>
            <property name="callback" expression="//callback/text()"/>


            <openweathermap.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiKey>{$ctx:apiKey}</apiKey>
                <apiVersion>{$ctx:apiVersion}</apiVersion>
            </openweathermap.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:getCurrentWeatherForOneLocByCityName">
                    <openweathermap.getCurrentWeatherForOneLocByCityName>
                        <cityName>{$ctx:cityName}</cityName>
                        <countryCode>{$ctx:countryCode}</countryCode>
                    </openweathermap.getCurrentWeatherForOneLocByCityName>
                </case>
                <case regex="urn:getCurrentWeatherForOneLocByCityID">
                    <openweathermap.getCurrentWeatherForOneLocByCityID>
                        <cityID>{$ctx:cityID}</cityID>
                    </openweathermap.getCurrentWeatherForOneLocByCityID>
                </case>
                <case regex="urn:getCurrentWeatherForOneLocByGeoCoordinates">
                    <openweathermap.getCurrentWeatherForOneLocByGeoCoordinates>
                        <lon>{$ctx:lon}</lon>
                        <lat>{$ctx:lat}</lat>
                    </openweathermap.getCurrentWeatherForOneLocByGeoCoordinates>
                </case>
                <case regex="urn:getCurrentWeatherForOneLocByZipCode">
                    <openweathermap.getCurrentWeatherForOneLocByZipCode>
                        <zipCode>{$ctx:zipCode}</zipCode>
                        <countryCode>{$ctx:countryCode}</countryCode>
                    </openweathermap.getCurrentWeatherForOneLocByZipCode>
                </case>
                <case regex="urn:getCurrentWeatherForSeveralCitiesWithinCycle">
                    <openweathermap.getCurrentWeatherForSeveralCitiesWithinCycle>
                        <lat>{$ctx:lat}</lat>
                        <lon>{$ctx:lon}</lon>
                        <cnt>{$ctx:cnt}</cnt>
                        <lang>{$ctx:lang}</lang>
                        <cluster>{$ctx:cluster}</cluster>
                        <callback>{$ctx:callback}</callback>
                    </openweathermap.getCurrentWeatherForSeveralCitiesWithinCycle>
                </case>
                <case regex="urn:getCurrentWeatherForSeveralCitiesWithinRectangle">
                    <openweathermap.getCurrentWeatherForSeveralCitiesWithinRectangle>
                        <bbox>{$ctx:bbox}</bbox>
                        <lang>{$ctx:lang}</lang>
                        <cluster>{$ctx:cluster}</cluster>
                        <callback>{$ctx:callback}</callback>
                    </openweathermap.getCurrentWeatherForSeveralCitiesWithinRectangle>
                </case>
                <case regex="urn:getCurrentWeatherForSeveralCityIDs">
                    <openweathermap.getCurrentWeatherForSeveralCityIDs>
                        <cityIDs>{$ctx:cityIDs}</cityIDs>
                        <units>{$ctx:units}</units>
                    </openweathermap.getCurrentWeatherForSeveralCityIDs>
                </case>
                <case regex="urn:search">
                    <openweathermap.search>
                        <cityName>{$ctx:cityName}</cityName>
                        <type>{$ctx:type}</type>
                        <mode>{$ctx:mode}</mode>
                    </openweathermap.search>
                </case>
                <case regex="urn:searchWeatherForcastFor5daysByCityName">
                    <openweathermap.searchWeatherForcastFor5daysByCityName>
                        <cityName>{$ctx:cityName}</cityName>
                        <countryCode>{$ctx:countryCode}</countryCode>
                    </openweathermap.searchWeatherForcastFor5daysByCityName>
                </case>
                <case regex="urn:searchWeatherForcastFor5daysByCityID">
                    <openweathermap.searchWeatherForcastFor5daysByCityID>
                        <cityID>{$ctx:cityID}</cityID>
                    </openweathermap.searchWeatherForcastFor5daysByCityID>
                </case>
                <case regex="urn:searchWeatherForcastFor5daysByGeoCoordinates">
                    <openweathermap.searchWeatherForcastFor5daysByGeoCoordinates>
                        <lon>{$ctx:lon}</lon>
                        <lat>{$ctx:lat}</lat>
                    </openweathermap.searchWeatherForcastFor5daysByGeoCoordinates>
                </case>
                <case regex="urn:searchWeatherForcastFor16daysByCityID">
                    <openweathermap.searchWeatherForcastFor16daysByCityID>
                        <cityID>{$ctx:cityID}</cityID>
                        <count>{$ctx:count}</count>
                    </openweathermap.searchWeatherForcastFor16daysByCityID>
                </case>
                <case regex="urn:searchWeatherForcastFor16daysByCityName">
                    <openweathermap.searchWeatherForcastFor16daysByCityName>
                        <cityName>{$ctx:cityName}</cityName>
                        <countryCode>{$ctx:countryCode}</countryCode>
                        <mode>{$ctx:mode}</mode>
                        <units>{$ctx:units}</units>
                        <count>{$ctx:count}</count>
                    </openweathermap.searchWeatherForcastFor16daysByCityName>
                </case>
                <case regex="urn:searchWeatherForcastFor16daysByGeoCoordinates">
                    <openweathermap.searchWeatherForcastFor16daysByGeoCoordinates>
                        <lon>{$ctx:lon}</lon>
                        <lat>{$ctx:lat}</lat>
                        <count>{$ctx:count}</count>
                    </openweathermap.searchWeatherForcastFor16daysByGeoCoordinates>
                </case>
                <case regex="urn:getHoulryHistoricalDataByCityID">
                    <openweathermap.getHoulryHistoricalDataByCityID>
                        <cityID>{$ctx:cityID}</cityID>
                        <types>{$ctx:types}</types>
                        <start>{$ctx:start}</start>
                        <end>{$ctx:end}</end>
                        <cnt>{$ctx:cnt}</cnt>
                    </openweathermap.getHoulryHistoricalDataByCityID>
                </case>
                <case regex="urn:getHoulryHistoricalDataByCityName">
                    <openweathermap.getHoulryHistoricalDataByCityName>
                        <cityName>{$ctx:cityName}</cityName>
                        <countryCode>{$ctx:countryCode}</countryCode>
                        <types>{$ctx:types}</types>
                        <start>{$ctx:start}</start>
                        <end>{$ctx:end}</end>
                        <cnt>{$ctx:cnt}</cnt>
                    </openweathermap.getHoulryHistoricalDataByCityName>
                </case>
                <case regex="urn:getHoulryHistoricalDataByGeoCoordinates">
                    <openweathermap.getHoulryHistoricalDataByGeoCoordinates>
                        <lon>{$ctx:lon}</lon>
                        <lat>{$ctx:lat}</lat>
                        <types>{$ctx:types}</types>
                        <start>{$ctx:start}</start>
                        <end>{$ctx:end}</end>
                        <cnt>{$ctx:cnt}</cnt>
                    </openweathermap.getHoulryHistoricalDataByGeoCoordinates>
                </case>
                <case regex="urn:getHistoricalDataFromWeatherStation">
                    <openweathermap.getHistoricalDataFromWeatherStation>
                        <stationID>{$ctx:stationID}</stationID>
                        <frequencyType>{$ctx:frequencyType}</frequencyType>
                    </openweathermap.getHistoricalDataFromWeatherStation>
                </case>
                <case regex="urn:getCurrentWeatherFromOneStation">
                    <openweathermap.getCurrentWeatherFromOneStation>
                        <stationID>{$ctx:stationID}</stationID>
                    </openweathermap.getCurrentWeatherFromOneStation>
                </case>
                <case regex="urn:getCurrentWeatherFromSeveralStationArroundGeoPoint">
                    <openweathermap.getCurrentWeatherFromSeveralStationArroundGeoPoint>
                        <lon>{$ctx:lon}</lon>
                        <lat>{$ctx:lat}</lat>
                        <cnt>{$ctx:cnt}</cnt>
                    </openweathermap.getCurrentWeatherFromSeveralStationArroundGeoPoint>
                </case>
                <case regex="urn:getCurrentWeatherFromSeveralStationWithinRecZone">
                    <openweathermap.getCurrentWeatherFromSeveralStationWithinRecZone>
                        <bbox>{$ctx:bbox}</bbox>
                        <cluster>{$ctx:cluster}</cluster>
                        <cnt>{$ctx:cnt}</cnt>
                        <callback>{$ctx:callback}</callback>
                    </openweathermap.getCurrentWeatherFromSeveralStationWithinRecZone>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                