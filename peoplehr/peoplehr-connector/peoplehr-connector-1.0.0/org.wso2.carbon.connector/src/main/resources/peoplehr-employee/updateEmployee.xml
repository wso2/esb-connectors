<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="updateEmployee" xmlns="http://ws.apache.org/ns/synapse">

    <parameter name="reasonForChange" description="The reason for updating the employee details."/>
    <parameter name="title" description="The title of the employee."/>
    <parameter name="firstName" description="The first name of the employee."/>
    <parameter name="lastName" description="The last name of the employee."/>
    <parameter name="email" description="The email address of the employee."/>
    <parameter name="gender" description="The gender of the employee."/>
    <parameter name="startDate" description="The joining date of the employee."/>
    <parameter name="dateOfBirth" description="The date of birth."/>
    <parameter name="jobRole" description="The job role in the company."/>
    <parameter name="location" description="The work location of the employee."/>
    <parameter name="department" description="The department the employee is working."/>
    <parameter name="reportsTo" description="The person who the employee should reports to."/>
    <parameter name="nationalInsuranceNumber"
               description="The national insurance number of the employee."/>
    <parameter name="nationality" description="The nationality of the employee."/>
    <parameter name="employmentType" description="The employment type of the employee."/>
    <parameter name="entitlementThisYear"
               description="The flag containing whether the employee is entitled this year."/>
    <parameter name="entitlementNextYear"
               description="The flag containing whether the employee is entitled next year."/>
    <parameter name="address" description="The address of the employee."/>
    <parameter name="personalPhoneNumber" description="The personal phone number of the employee."/>
    <parameter name="apiColumn1" description="A custom api column for custom data."/>
    <parameter name="apiColumn2" description="A custom api column for custom data."/>
    <parameter name="apiColumn3" description="A custom api column for custom data."/>
    <parameter name="apiColumn4" description="A custom api column for custom data."/>
    <parameter name="apiColumn5" description="A custom api column for custom data."/>

    <sequence>
        <property name="uri.var.reasonForChange" expression="$func:reasonForChange"/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.gender" expression="$func:gender"/>
        <property name="uri.var.startDate" expression="$func:startDate"/>
        <property name="uri.var.dateOfBirth" expression="$func:dateOfBirth"/>
        <property name="uri.var.jobRole" expression="$func:jobRole"/>
        <property name="uri.var.location" expression="$func:location"/>
        <property name="uri.var.department" expression="$func:department"/>
        <property name="uri.var.reportsTo" expression="$func:reportsTo"/>
        <property name="uri.var.nationalInsuranceNumber"
                  expression="$func:nationalInsuranceNumber"/>
        <property name="uri.var.nationality" expression="$func:nationality"/>
        <property name="uri.var.employmentType" expression="$func:employmentType"/>
        <property name="uri.var.entitlementThisYear" expression="$func:entitlementThisYear"/>
        <property name="uri.var.entitlementNextYear" expression="$func:entitlementNextYear"/>
        <property name="uri.var.address" expression="$func:address"/>
        <property name="uri.var.personalPhoneNumber" expression="$func:personalPhoneNumber"/>
        <property name="uri.var.apiColumn1" expression="$func:apiColumn1"/>
        <property name="uri.var.apiColumn2" expression="$func:apiColumn2"/>
        <property name="uri.var.apiColumn3" expression="$func:apiColumn3"/>
        <property name="uri.var.apiColumn4" expression="$func:apiColumn4"/>
        <property name="uri.var.apiColumn5" expression="$func:apiColumn5"/>

        <payloadFactory media-type="json">
            <format>
                {
                "APIKey": "$1",
                "Action": "UpdateEmployeeDetail",
                "EmployeeId": "$2",
                "ReasonForChange": "$3"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.apiKey')"/>
                <arg expression="get-property('uri.var.employeeId')"/>
                <arg expression="get-property('uri.var.reasonForChange')"/>
            </args>
        </payloadFactory>

        <script language="js">
            <![CDATA[
                    
	            // Set optional parameters
	            var payload = mc.getPayloadJSON();
	                
	            var title = mc.getProperty('uri.var.title');
	            var firstName = mc.getProperty('uri.var.firstName');
	            var lastName = mc.getProperty('uri.var.lastName');
	            var email = mc.getProperty('uri.var.email');
	            var gender = mc.getProperty('uri.var.gender');
	            var startDate = mc.getProperty('uri.var.startDate');
	            var dateOfBirth = mc.getProperty('uri.var.dateOfBirth');
	            var jobRole = mc.getProperty('uri.var.jobRole');
	            var location = mc.getProperty('uri.var.location');
	            var department = mc.getProperty('uri.var.department');
	            var reportsTo = mc.getProperty('uri.var.reportsTo');
	            var nationalInsuranceNumber = mc.getProperty('uri.var.nationalInsuranceNumber');
	            var nationality = mc.getProperty('uri.var.nationality');
	            var employmentType = mc.getProperty('uri.var.employmentType');
	            var entitlementThisYear = mc.getProperty('uri.var.entitlementThisYear');
	            var entitlementNextYear = mc.getProperty('uri.var.entitlementNextYear');
	            var address = mc.getProperty('uri.var.address');
	            var personalPhoneNumber = mc.getProperty('uri.var.personalPhoneNumber');
	            var apiColumn1 = mc.getProperty('uri.var.apiColumn1');
	            var apiColumn2 = mc.getProperty('uri.var.apiColumn2');
	            var apiColumn3 = mc.getProperty('uri.var.apiColumn3');
	            var apiColumn4 = mc.getProperty('uri.var.apiColumn4');
	            var apiColumn5 = mc.getProperty('uri.var.apiColumn5');
	           
	            if(title != null && title != "") {
	            	if(title==" "){
						payload.Title="";
					}else{
					payload.Title = title;
					}
	            }
	            
	            if(firstName != null && firstName != "") {
	            	if(firstName==" "){
						payload.FirstName="";
					}else{
					payload.FirstName = firstName;
					}
	            }	           
	           
	            if(lastName != null && lastName != "") {
	            	if(lastName==" "){
						payload.LastName="";
					}else{
					payload.LastName = lastName;
					}
	            }	                                 
 
	            if(email != null && email != "") {
	            	if(email==" "){
						payload.Email="";
					}else{
					payload.Email = email;
					}
	            }		            
	            
	            if(gender != null && gender != "") {
	            	if(gender==" "){
						payload.Gender="";
					}else{
					payload.Gender = gender;
					}
	            }	      
	            
	            if(startDate != null && startDate != "") {
	            	if(startDate==" "){
						payload.StartDate="";
					}else{
					payload.StartDate = startDate;
					}
	            }
	            
	            if(dateOfBirth != null && dateOfBirth != "") {
	            	if(dateOfBirth==" "){
						payload.DateOfBirth="";
					}else{
					payload.DateOfBirth = dateOfBirth;
					}
	            }
	            
	            if(jobRole != null && jobRole != "") {
	            	if(jobRole==" "){
						payload.JobRole="";
					}else{
					payload.JobRole = jobRole;
					}
	            }
	            
	            if(location != null && location != "") {
	            	if(location==" "){
						payload.Location="";
					}else{
					payload.Location = location;
					}
	            }
	            
	            if(department != null && department != "") {
	            	if(department==" "){
						payload.Department="";
					}else{
					payload.Department = department;
					}
	            }
	            
	            if(reportsTo != null && reportsTo != "") {
	            	if(reportsTo==" "){
						payload.ReportsTo="";
					}else{
					payload.ReportsTo = reportsTo;
					}
	            }
	            
	            if(nationalInsuranceNumber != null && nationalInsuranceNumber != "") {
	            	if(nationalInsuranceNumber==" "){
						payload.NationalInsuranceNumber="";
					}else{
					payload.NationalInsuranceNumber = nationalInsuranceNumber;
					}
	            }
	            
	            if(nationality != null && nationality != "") {
	            	if(nationality==" "){
						payload.Nationality="";
					}else{
					payload.Nationality = nationality;
					}
	            }	            

	            if(employmentType != null && employmentType != "") {
	            	if(employmentType==" "){
						payload.EmploymentType="";
					}else{
					payload.EmploymentType = employmentType;
					}
	            }
	            
	            if(entitlementThisYear != null && entitlementThisYear != "") {
	            	if(entitlementThisYear==" "){
						payload.EntitlementThisYear="";
					}else{
					payload.EntitlementThisYear = entitlementThisYear;
					}
	            }	            

	            if(entitlementNextYear != null && entitlementNextYear != "") {
	            	if(entitlementNextYear==" "){
						payload.EntitlementNextYear="";
					}else{
					payload.EntitlementNextYear = entitlementNextYear;
					}
	            }	            

	            if(address != null && address != "") {
	            	if(address==" "){
						payload.Address="";
					}else{
					payload.Address = address;
					}
	            }	            

	            if(personalPhoneNumber != null && personalPhoneNumber != "") {
	            	if(personalPhoneNumber==" "){
						payload.PersonalPhoneNumber="";
					}else{
					payload.PersonalPhoneNumber = personalPhoneNumber;
					}
	            }	
	            
	            if(apiColumn1 != null && apiColumn1 != "") {
	            	if(apiColumn1==" "){
						payload.APIColumn1="";
					}else{
					payload.APIColumn1 = apiColumn1;
					}
	            }	                        

	            if(apiColumn2 != null && apiColumn2 != "") {
	            	if(apiColumn2==" "){
						payload.APIColumn2="";
					}else{
					payload.APIColumn2 = apiColumn2;
					}
	            }	        	            

	            if(apiColumn3 != null && apiColumn3 != "") {
	            	if(apiColumn3==" "){
						payload.APIColumn3="";
					}else{
					payload.APIColumn3 = apiColumn3;
					}
	            }	            

	            if(apiColumn4 != null && apiColumn4 != "") {
	            	if(apiColumn4==" "){
						payload.APIColumn4="";
					}else{
					payload.APIColumn4 = apiColumn4;
					}
	            }		            

	            if(apiColumn5 != null && apiColumn5 != "") {
	            	if(apiColumn5==" "){
						payload.APIColumn5="";
					}else{
					payload.APIColumn5 = apiColumn5;
					}
	            }		                                 
	                                                                                                    
	            mc.setPayloadJSON(payload); 
                      
        	]]>
        </script>

        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/Employee"/>
            </endpoint>
        </call>

        <!-- Remove custom header information in response -->
        <header name="X-AspNet-Version" scope="transport" action="remove"/>
        <header name="X-Powered-By" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Headers" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Methods" scope="transport" action="remove"/>
        <header name="Cache-Control" scope="transport" action="remove"/>

    </sequence>
</template>