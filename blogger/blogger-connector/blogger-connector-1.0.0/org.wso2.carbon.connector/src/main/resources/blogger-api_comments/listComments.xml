<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="listComments">
    <parameter name="blogID"/>
    <parameter name="postID"/>
    <parameter name="endDate"/>
    <parameter name="labels"/>
    <parameter name="fetchBodies"/>
    <parameter name="fetchImages"/>
    <parameter name="maxResults"/>
    <parameter name="pageToken"/>
    <parameter name="startDate"/>
    <parameter name="status"/>
    <parameter name="view"/>
    <parameter name="fields"/>
    <sequence>
        <property expression="$func:blogID" name="uri.var.blog_id"
                  scope="default" type="STRING"/>
        <property expression="$func:postID" name="uri.var.post_id"
                  scope="default" type="STRING"/>
        <property expression="$func:endDate" name="uri.var.end_date"
                  scope="default" type="STRING"/>
        <property expression="$func:labels" name="uri.var.labels"
                  scope="default" type="STRING"/>
        <property expression="$func:fetchBodies" name="uri.var.fetch_bodies"
                  scope="default" type="STRING"/>
        <property expression="$func:fetchImages" name="uri.var.fetch_images"
                  scope="default" type="STRING"/>
        <property expression="$func:maxResults" name="uri.var.max_results"
                  scope="default" type="STRING"/>
        <property expression="$func:pageToken" name="uri.var.page_token"
                  scope="default" type="STRING"/>
        <property expression="$func:startDate" name="uri.var.start_date"
                  scope="default" type="STRING"/>
        <property expression="$func:status" name="uri.var.status"
                  scope="default" type="STRING"/>
        <property expression="$func:view" name="uri.var.view" scope="default"
                  type="STRING"/>
        <property expression="$func:fields" name="uri.var.fields"
                  scope="default" type="STRING"/>
        <property value="" name="uri.var.options" scope="default"
                  type="STRING"/>
        <script language="js"><![CDATA[
            var start_date = mc.getProperty('uri.var.start_date');
            var end_date = mc.getProperty('uri.var.end_date');
            if(start_date != "")
            {
            var encodedStartDate = encodeURIComponent(start_date);
            mc.setProperty('uri.var.start_date', encodedStartDate);
            }if(end_date != "")
            {
            var encodedEndDate = encodeURIComponent(end_date);
            mc.setProperty('uri.var.end_date', encodedEndDate);
            }
        ]]>
        </script>
        <filter
                xpath="get-property('uri.var.fetch_bodies') = 'true' or get-property('uri.var.fetch_bodies') = 'false'">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;fetchBodies&#61;',get-property('uri.var.fetch_bodies')) "/>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.fetch_images') = 'true' or get-property('uri.var.fetch_images') = 'false'">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;fetchImages&#61;',get-property('uri.var.fetch_images')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.fields') = '') and  string(get-property('uri.var.fields'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;fields&#61;',get-property('uri.var.fields')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.end_date') = '') and string(get-property('uri.var.end_date'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;endDate&#61;',get-property('uri.var.end_date')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.labels') = '') and string(get-property('uri.var.labels'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;labels&#61;',get-property('uri.var.labels')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.max_results') = '') and string(get-property('uri.var.max_results'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;maxResults&#61;',string(get-property('uri.var.max_results'))) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.order_by') = '') and string(get-property('uri.order_by'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;orderBy&#61;',get-property('uri.order_by')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.page_token') = '') and  string(get-property('uri.var.page_token'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;pageToken&#61;',get-property('uri.var.page_token')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.start_date') = '') and string(get-property('uri.var.start_date'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;startDate&#61;',get-property('uri.var.start_date')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.status') = '') and  string(get-property('uri.var.status'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;status&#61;',get-property('uri.var.status')) "/>
            </then>
        </filter>
        <filter
                xpath="not(get-property('uri.var.view') = '') and  string(get-property('uri.var.view'))">
            <then>
                <property name="uri.var.options"
                          expression="concat(get-property('uri.var.options'),'&amp;view&#61;',get-property('uri.var.view')) "/>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.access_token') = '' or  (not(string(get-property('uri.var.access_token'))))">
            <then>
                <property name="uri.var.access_s"
                          expression="concat('key&#61;',get-property('uri.var.api_key'))"/>
            </then>
            <else>
                <property name="uri.var.access_s"
                          expression="concat('access_token&#61;',get-property('uri.var.access_token')) "/>
            </else>
        </filter>
        <property action="remove" name="Accept-Encoding" scope="transport"/>
        <property name="messageType" scope="axis2" value="application/json"/>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="legacy-encoding:https://www.googleapis.com/blogger/v{uri.var.api_version}/blogs/{uri.var.blog_id}/posts/{uri.var.post_id}/comments?{uri.var.access_s}{uri.var.options}"></http>
            </endpoint>
        </call>
        <header name="etag" scope="transport" action="remove"/>
    </sequence>
</template>
