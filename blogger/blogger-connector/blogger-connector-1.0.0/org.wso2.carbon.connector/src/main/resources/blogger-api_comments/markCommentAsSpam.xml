<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="markCommentAsSpam">
    <parameter name="blogID"/>
    <parameter name="postID"/>
    <parameter name="commentID"/>
    <parameter name="fields"/>
    <sequence>
        <property expression="$func:blogID" name="uri.var.blog_id"
                  scope="default" type="STRING"/>
        <property expression="$func:postID" name="uri.var.post_id"
                  scope="default" type="STRING"/>
        <property expression="$func:commentID" name="uri.var.comment_id"
                  scope="default" type="STRING"/>
        <property expression="$func:fields" name="uri.var.fields"
                  scope="default" type="STRING"/>
        <filter
                xpath="not(get-property('uri.var.fields') = '' ) and string(get-property('uri.var.fields'))">
            <then>
                <property name="uri.var.fields"
                          expression="concat('&amp;fields&#61;',get-property('uri.var.fields')) "/>
            </then>
        </filter>
        <property action="remove" name="Accept-Encoding" scope="transport"/>
        <payloadFactory media-type="json">
            <format>
                { }
            </format>
            <args/>
        </payloadFactory>
        <property name="messageType" scope="axis2" value="application/json"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="https://www.googleapis.com/blogger/v{uri.var.api_version}/blogs/{uri.var.blog_id}/posts/{uri.var.post_id}/comments/{uri.var.comment_id}/spam?access_token&#61;{uri.var.access_token}{+uri.var.fields}"></http>
            </endpoint>
        </call>
        <header name="etag" scope="transport" action="remove"/>
    </sequence>
</template>
