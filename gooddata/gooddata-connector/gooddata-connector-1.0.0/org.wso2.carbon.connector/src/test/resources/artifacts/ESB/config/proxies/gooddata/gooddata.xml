<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="gooddata"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="username" expression="json-eval($.username)"/>
            <property name="password" expression="json-eval($.password)"/>
            <property name="remember" expression="json-eval($.remember)"/>
            <property name="projectId" expression="json-eval($.projectId)"/>
            <property name="content" expression="json-eval($.content)"/>
            <property name="meta" expression="json-eval($.meta)"/>
            <property name="taskId" expression="json-eval($.taskId)"/>
            <property name="reportUri" expression="json-eval($.reportUri)"/>
            <property name="maql" expression="json-eval($.maql)"/>
            <property name="pullIntegration" expression="json-eval($.pullIntegration)"/>
            <property name="taskId" expression="json-eval($.taskId)"/>
            <property name="action" expression="get-property('transport', 'Action')"/>
            <gooddata.init>
                <remember>{$ctx:remember}</remember>
                <username>{$ctx:username}</username>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <password>{$ctx:password}</password>
            </gooddata.init>
            <switch source="get-property('action')">
                <case regex="urn:saveReport">
                    <gooddata.saveReport>
                        <content>{$ctx:content}</content>
                        <projectId>{$ctx:projectId}</projectId>
                        <meta>{$ctx:meta}</meta>
                    </gooddata.saveReport>
                </case>
                <case regex="urn:createReport">
                    <gooddata.createReport>
                        <content>{$ctx:content}</content>
                        <projectId>{$ctx:projectId}</projectId>
                        <meta>{$ctx:meta}</meta>
                    </gooddata.createReport>
                </case>
                <case regex="urn:listReports">
                    <gooddata.listReports>
                        <projectId>{$ctx:projectId}</projectId>
                    </gooddata.listReports>
                </case>
                <case regex="urn:getDataset">
                    <gooddata.getDataset>
                        <projectId>{$ctx:projectId}</projectId>
                    </gooddata.getDataset>
                </case>
                <case regex="urn:getTaskStatus">
                    <gooddata.getTaskStatus>
                        <taskId>{$ctx:taskId}</taskId>
                        <projectId>{$ctx:projectId}</projectId>
                    </gooddata.getTaskStatus>
                </case>
                <case regex="urn:executeReport">
                    <gooddata.executeReport>
                        <reportUri>{$ctx:reportUri}</reportUri>
                    </gooddata.executeReport>
                </case>
                <case regex="urn:uploadData">
                    <gooddata.uploadData>
                        <pullIntegration>{$ctx:pullIntegration}</pullIntegration>
                        <projectId>{$ctx:projectId}</projectId>
                    </gooddata.uploadData>
                </case>
                <case regex="urn:getUploadStatus">
                    <gooddata.getUploadStatus>
                        <taskId>{$ctx:taskId}</taskId>
                        <projectId>{$ctx:projectId}</projectId>
                    </gooddata.getUploadStatus>
                </case>
                <case regex="urn:createProjectModel">
                    <gooddata.createProjectModel>
                        <projectId>{$ctx:projectId}</projectId>
                        <maql>{$ctx:maql}</maql>
                    </gooddata.createProjectModel>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
                                