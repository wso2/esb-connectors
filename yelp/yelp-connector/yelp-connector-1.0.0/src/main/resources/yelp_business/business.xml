<?xml version="1.0" encoding="utf-8"?>
<!--
 ~ Copyright (c) 2014-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="business">
    <parameter name="id" description="Lookup business information by id."/>
    <parameter name="country_code"
               description="Default country to use when parsing the location field. United States = US."/>
    <parameter name="lang"
               description="Reviews and snippets written in the specified language will be shown(default=en)."/>
    <parameter name="lang_filter" description="Whether to filter business reviews by the specified lang."/>
    <sequence>
        <property name="yelp.id" expression="$func:id"/>
        <property name="yelp.cc" expression="$func:country_code"/>
        <property name="yelp.lang" expression="$func:lang"/>
        <property name="yelp.lang_filter" expression="$func:lang_filter"/>
        <property name="yelp.apiUri"
                  expression="fn:concat(get-property('yelp.apiUri'),'business/',get-property('yelp.id'))"/>
        <property name="yelp.parameters" value=""/>
        <filter xpath="(get-property('yelp.cc')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'cc=', get-property('yelp.cc'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.lang')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'lang=', get-property('yelp.lang'),'&amp;'
                )"/>
            </then>
        </filter>
        <filter xpath="(get-property('yelp.lang_filter')!='')">
            <then>
                <property name="yelp.parameters" expression="fn:concat(
                get-property('yelp.parameters'),
                'lang_filter=', get-property('yelp.lang_filter'),'&amp;'
                )"/>
            </then>
        </filter>
        <property name="yelp.parameters" expression="fn:concat(
        get-property('yelp.parameters'),
        'oauth_consumer_key=', get-property('yelp.oauth.consumerKey'),
        '&amp;oauth_nonce=', get-property('yelp.oauth.nonce'),
        '&amp;oauth_signature_method=HMAC-SHA1',
        '&amp;oauth_timestamp=', get-property('yelp.oauth.timestamp'),
        '&amp;oauth_token=', get-property('yelp.oauth.accessToken'),
        '&amp;oauth_version=1.0'
        )"/>
        <class name="org.wso2.carbon.connector.GenerateSignature"/>
        <property name="uri.var.apiUri" expression="get-property('yelp.apiUri')"/>
        <property name="uri.var.signature" expression="get-property('yelp.oauth.signature')"/>
        <property name="uri.var.parameters" expression="get-property('yelp.parameters')"/>
        <script language="js">
            <![CDATA[
                   var query = mc.getProperty('uri.var.signature');
					var encodedQuery = encodeURIComponent(query);
					mc.setProperty('uri.var.signature', encodedQuery);
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="GET"
                      uri-template="legacy-encoding:{uri.var.apiUri}?{uri.var.parameters}&amp;oauth_signature={uri.var.signature}"/>
            </endpoint>
        </call>
    </sequence>
</template>