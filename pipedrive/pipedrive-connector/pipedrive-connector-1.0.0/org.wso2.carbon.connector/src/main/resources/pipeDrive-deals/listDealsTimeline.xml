<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Document URL https://developers.pipedrive.com/v1 -->
<template name="listDealsTimeline" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="startDate"
               description="The date where first interval starts. Format: YYYY-MM-DD"/>
    <parameter name="amount"
               description="The number of given intervals, starting from start_date, to fetch, E.g.3 (months)"/>
    <parameter name="fieldKey" description="The name of the date field by which to get deals by."/>
    <parameter name="prettyOutput"
               description="If the prettyOutput is specified as 1, will return an indented response of the output."/>
    <parameter name="fields" description="The array of fileds to be returned in the output."/>
    <parameter name="interval"
               description="The type of interval.Can only contain one of the following values: day, week, month,quarter)."/>
    <parameter name="userId"
               description="The unique Identifier of the user. If supplied only the deals matching the given user will be returned."/>
    <parameter name="pipelineId"
               description="The unique Identifier of the pipeline. If supplied only the deals matching the given pipeline will be returned."/>
    <parameter name="filterId"
               description="The unique Identifier of the filter. If supplied only the deals matching the given filter will be returned."/>
    <parameter name="excludeDeals"
               description="The boolean value to indicate whether to exclude deals list or not."/>
    <parameter name="currencyCode"
               description="The three letter currency code of any of the supported currencies (for default currency set the value as 'default_currency')."/>
    <sequence>
        <property name="uri.var.startDate" expression="$func:startDate"/>
        <property name="uri.var.amount" expression="$func:amount"/>
        <property name="uri.var.fieldKey" expression="$func:fieldKey"/>
        <property name="uri.var.prettyOutput" expression="$func:prettyOutput"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="uri.var.interval" expression="$func:interval"/>
        <property name="uri.var.userId" expression="$func:userId"/>
        <property name="uri.var.pipelineId" expression="$func:pipelineId"/>
        <property name="uri.var.filterId" expression="$func:filterId"/>
        <property name="uri.var.excludeDeals" expression="$func:excludeDeals"/>
        <property name="uri.var.currencyCode" expression="$func:currencyCode"/>
        <script language="js">
            <![CDATA[
            var urlQuery = mc.getProperty('uri.var.urlQuery');
            var startDate = mc.getProperty('uri.var.startDate');
            var amount = mc.getProperty('uri.var.amount');
            var fieldKey =  mc.getProperty('uri.var.fieldKey');
            var prettyOutPut = mc.getProperty('uri.var.prettyOutput');
            var filterId = mc.getProperty('uri.var.filterId');
            var interval = mc.getProperty('uri.var.interval');
            var userId = mc.getProperty('uri.var.userId');
            var pipelineId = mc.getProperty('uri.var.pipelineId');
            var excludeDeals = mc.getProperty('uri.var.excludeDeals');
            var currencyCode = mc.getProperty('uri.var.currencyCode');
            var fields = mc.getProperty('uri.var.fields');
            //Setting required parameters to the url
            urlQuery += '&start_date=' + startDate + '&amount=' + amount + '&field_key=' + fieldKey;
            //Setting optional parameters to the url
            if (prettyOutPut != null && prettyOutPut != '') {
               urlQuery += '&pretty_output=' + prettyOutPut;
            }
            if (filterId != null && filterId != '') {
               urlQuery += '&filter_id=' + filterId;
            }
            if (interval != null && interval != '') {
               urlQuery += '&interval=' + interval;
            }
            if (userId != null && userId != '') {
               urlQuery += '&user_id=' + userId;
            }
            if (pipelineId != null && pipelineId != '') {
               urlQuery += '&pipeline_id=' + pipelineId;
            }
            if (excludeDeals != null && excludeDeals != '') {
               urlQuery += '&exclude_deals=' + excludeDeals;
            }
            if (currencyCode != null && currencyCode != '') {
               urlQuery += '&totals_convert_currency=' + currencyCode;
            }
            mc.setProperty('uri.var.urlQuery', urlQuery);
            if (fields != null && fields != "") {
               var fieldsList = '';
               var fieldsArray = eval('(' + fields + ')');
               for (var i = 0; i < fieldsArray.length; i++) {
                  fieldsList += fieldsArray[i] + ',';
               }
               if (fieldsList != '') {
                  //Remove unwanted comma at the end
                  fieldsList = ':(' + fieldsList.substring(0, fieldsList.length - 1) + ')';
                  mc.setProperty('uri.var.filter', fieldsList);
               }
            }
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}deals{+uri.var.filter}/timeline{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="X-Frame-Options" scope="transport" action="remove"/>
        <header name="Vary" scope="transport" action="remove"/>
        <header name="X-XSS-Protection" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove"/>
    </sequence>
</template>