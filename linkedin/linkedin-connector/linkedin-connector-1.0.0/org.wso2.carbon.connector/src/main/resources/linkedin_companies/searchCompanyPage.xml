<!--
   Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="searchCompanyPage" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="refineResults" description="Fields that are required to be retrieved from the search result"/>
    <parameter name="keywords" description="Keywords to search"/>
    <parameter name="isHqOnly"
               description="Matching companies by the headquarters location. When this is set to true and a location facet is used, this restricts returned companies to only those whose headquarters resides in the specified location"/>
    <parameter name="facet" description="A specific facet to search"/>
    <parameter name="facets" description="Facets to search"/>
    <parameter name="start" description="Start point"/>
    <parameter name="count" description="Results count"/>
    <parameter name="sort" description="Whether to sort results"/>
    <sequence>
        <property name="uri.var.refineResults" expression="$func:refineResults"/>
        <property name="uri.var.keywords" expression="$func:keywords"/>
        <property name="uri.var.isHqOnly" expression="$func:isHqOnly"/>
        <property name="uri.var.facet" expression="$func:facet"/>
        <property name="uri.var.facets" expression="$func:facets"/>
        <property name="uri.var.start" expression="$func:start"/>
        <property name="uri.var.count" expression="$func:count"/>
        <property name="uri.var.sort" expression="$func:sort"/>
        <property name="uri.var.query" value=""/>
        <script language="js">
            <![CDATA[
			
			var keywords = mc.getProperty('uri.var.keywords');
			var isHqOnly = mc.getProperty('uri.var.isHqOnly');
			var facet = mc.getProperty('uri.var.facet');
			var facets = mc.getProperty('uri.var.facets');
			var start = mc.getProperty('uri.var.start');
			var count = mc.getProperty('uri.var.count');
			var sort = mc.getProperty('uri.var.sort');
			var query = mc.getProperty('uri.var.query');
			
			if (keywords != null && keywords != "") {
				var encoded_keywords = mc.getProperty('uri.var.keywords');
				if (encoded_keywords) {
					query = query + '&keywords=' + encoded_keywords;
				}
			}

			if (isHqOnly != null && isHqOnly != "") {
				query = query + '&hq-only=' + isHqOnly;
			}
			
			if(facet !=null && facet != "") {
				query = query + '&facet=' + facet;
			}
			
			if (facets != null && facets != "") {
				query = query + '&facets=' + facets;
			}
			
			if (start != null && start != "") {
				query = query + '&start=' + start;
			}
			
			if(count != null && count != "") {
				query = query + '&count=' + count;
			}
			
			if (sort != null && sort != "") {
				query = query + '&sort=' + sort;
			}
															
			mc.setProperty('uri.var.query', query);

	 		]]>
        </script>
        <filter xpath="get-property('uri.var.refineResults') = '' or not(string(get-property('uri.var.refineResults')))">
            <then>
                <property name="uri.var.refineResults" value=""/>
            </then>
            <else>
                <property name="uri.var.refineResults"
                          expression="fn:concat(':(', get-property('uri.var.refineResults'), ')')"/>
            </else>
        </filter>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}/v1/company-search{+uri.var.refineResults}?oauth2_access_token={+uri.var.accessToken}{+uri.var.query}&amp;format=json"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-li-format" scope="transport" action="remove"/>
        <header name="X-LI-UUID" scope="transport" action="remove"/>
        <header name="X-Li-Pop" scope="transport" action="remove"/>
        <header name="X-Li-Fabric" scope="transport" action="remove"/>
        <header name="x-li-request-id" scope="transport" action="remove"/>
        <header name="Set-Cookie" scope="transport" action="remove"/>
    </sequence>
</template>