<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="accessOutOfNetworkProfiles" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="standardProfileHeader"
               description="http header value that is used to retrieve the profile details that are over three degrees"/>
    <parameter name="memberId"
               description="id of the person of whose third degree's details are required"/>
    <parameter name="fieldSelectors" description="To retrieve the specific fields."/>
    <sequence>
        <property name="uri.var.standardProfileHeader" expression="$func:standardProfileHeader"/>
        <property name="uri.var.memberId" expression="$func:memberId"/>
        <property name="uri.var.fieldSelectors" expression="$func:fieldSelectors"/>
        <!-- Adding additional header To request profile information for a member
            that has a degree distance greater than three for the currently logged in
            member. -->
        <filter
                xpath="not(get-property('uri.var.standardProfileHeader') = '') and string(get-property('uri.var.standardProfileHeader'))">
            <then>
                <property name="x-li-auth-token"
                          expression="get-property('uri.var.standardProfileHeader')" scope="transport"
                          type="STRING"/>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.fieldSelectors') = '' or not(string(get-property('uri.var.fieldSelectors')))">
            <then>
                <property name="uri.var.fieldSelectors" value=""/>
            </then>
            <else>
                <property name="uri.var.fieldSelectors"
                          expression="fn:concat(':(', get-property('uri.var.fieldSelectors'), ')')"/>
            </else>
        </filter>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}/v1/people/{+uri.var.memberId}{+uri.var.fieldSelectors}?oauth2_access_token={+uri.var.accessToken}&amp;format=json"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-li-format" scope="transport" action="remove"/>
        <header name="X-LI-UUID" scope="transport" action="remove"/>
        <header name="X-Li-Pop" scope="transport" action="remove"/>
        <header name="X-Li-Fabric" scope="transport" action="remove"/>
        <header name="x-li-request-id" scope="transport" action="remove"/>
        <header name="Set-Cookie" scope="transport" action="remove"/>
    </sequence>
</template>