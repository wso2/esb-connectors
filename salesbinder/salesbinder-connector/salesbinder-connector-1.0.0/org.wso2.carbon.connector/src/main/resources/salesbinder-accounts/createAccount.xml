<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Documentation URL - http://www.salesbinder.com/kb/api-functions/create-new-account -->
<template name="createAccount" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="contextId" description="The value to determine what type of account you want to create." />
   <parameter name="name" description="Business Name of the customer." />
   <parameter name="officeEmail" description="Office Email Address of the customer." />
   <parameter name="officeNumber" description="Office Phone Number of the customer." />
   <parameter name="officeFax" description="Office Fax of the customer." />
   <parameter name="url" description="Company Website Address of the customer." />
   <parameter name="billingAddress1" description="Billing Address Line 1 of the customer." />
   <parameter name="billingAddress2" description="Billing Address Line 2 of the customer." />
   <parameter name="billingCity" description="Billing City of the customer." />
   <parameter name="billingRegion" description="Billing Region (Province or State)." />
   <parameter name="billingCountry" description="Billing Country of the customer." />
   <parameter name="billingPostalCode" description="Billing Postal Code or Zip Code of the customer." />
   <parameter name="shippingAddress1" description="Shipping Address Line 1." />
   <parameter name="shippingAddress2" description="Shipping Address Line 2." />
   <parameter name="shippingCity" description="Shipping City for the customer." />
   <parameter name="shippingRegion" description="Shipping Region (Province or State) of the customer." />
   <parameter name="shippingCountry" description="Shipping Country of the customer." />
   <parameter name="shippingPostalCode" description="Shipping Postal Code or Zip Code of the customer." />
   <parameter name="customerLabelId" description="Id of the customer label." />
   <sequence>
      <property name="uri.var.contextId" expression="$func:contextId" />
      <property name="uri.var.name" expression="$func:name" />
      <property name="uri.var.officeEmail" expression="$func:officeEmail" />
      <property name="uri.var.officeNumber" expression="$func:officeNumber" />
      <property name="uri.var.officeFax" expression="$func:officeFax" />
      <property name="uri.var.url" expression="$func:url" />
      <property name="uri.var.billingAddress1" expression="$func:billingAddress1" />
      <property name="uri.var.billingAddress2" expression="$func:billingAddress2" />
      <property name="uri.var.billingCity" expression="$func:billingCity" />
      <property name="uri.var.billingRegion" expression="$func:billingRegion" />
      <property name="uri.var.billingCountry" expression="$func:billingCountry" />
      <property name="uri.var.billingPostalCode" expression="$func:billingPostalCode" />
      <property name="uri.var.shippingAddress1" expression="$func:shippingAddress1" />
      <property name="uri.var.shippingAddress2" expression="$func:shippingAddress2" />
      <property name="uri.var.shippingCity" expression="$func:shippingCity" />
      <property name="uri.var.shippingRegion" expression="$func:shippingRegion" />
      <property name="uri.var.shippingCountry" expression="$func:shippingCountry" />
      <property name="uri.var.shippingPostalCode" expression="$func:shippingPostalCode" />
      <property name="uri.var.customerLabelId" expression="$func:customerLabelId" />
      <payloadFactory media-type="json">
         <format>
            {
            "Customer":
               {
                  "context_id":"$1"
               }
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.contextId')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            var name = mc.getProperty('uri.var.name');
            var officeEmail = mc.getProperty('uri.var.officeEmail');
            var officeNumber = mc.getProperty('uri.var.officeNumber');
            var officeFax = mc.getProperty('uri.var.officeFax');
            var url = mc.getProperty('uri.var.url');
            var billingAddress1 = mc.getProperty('uri.var.billingAddress1');
            var billingAddress2 = mc.getProperty('uri.var.billingAddress2');
            var billingCity = mc.getProperty('uri.var.billingCity');
            var billingRegion = mc.getProperty('uri.var.billingRegion');
            var billingCountry = mc.getProperty('uri.var.billingCountry');
            var billingPostalCode = mc.getProperty('uri.var.billingPostalCode');
            var shippingAddress1 = mc.getProperty('uri.var.shippingAddress1');
            var shippingAddress2 = mc.getProperty('uri.var.shippingAddress2');
            var shippingCity = mc.getProperty('uri.var.shippingCity');
            var shippingRegion = mc.getProperty('uri.var.shippingRegion');
            var shippingCountry = mc.getProperty('uri.var.shippingCountry');
            var shippingPostalCode = mc.getProperty('uri.var.shippingPostalCode');
            var customerLabelId = mc.getProperty('uri.var.customerLabelId');  
            payload = mc.getPayloadJSON();   
            if (name != null && name!= ""){
               payload.Customer.name = name;
            }
            if (officeEmail != null && officeEmail!= ""){
              payload.Customer.office_email = officeEmail;
            }
            if (officeNumber != null && officeNumber!= ""){
               payload.Customer.office_phone = officeNumber;
            }
            if (officeFax != null && officeFax!= ""){
               payload.Customer.office_fax = officeFax;
            }
            if (url != null && url!= ""){
               payload.Customer.url = url;
            }
            if (billingAddress1 != null && billingAddress1!= ""){
               payload.Customer.billing_address_1 = billingAddress1;
            }
            if (billingAddress2 != null && billingAddress2!= ""){
               payload.Customer.billing_address_2 = billingAddress2;
            }
            if (billingCity != null && billingCity!= ""){
               payload.Customer.billing_city = billingCity;
            }
            if (billingRegion != null && billingRegion!= ""){
               payload.Customer.billing_region = billingRegion;
            }
            if (billingCountry != null && billingCountry!= ""){
               payload.Customer.billing_country = billingCountry;
            }
            if (billingPostalCode != null && billingPostalCode!= ""){
               payload.Customer.billing_postal_code = billingPostalCode;
            }
            if (shippingAddress1 != null && shippingAddress1!= ""){
               payload.Customer.shipping_address_1 = shippingAddress1;
            }
            if (shippingAddress2 != null && shippingAddress2!= ""){
               payload.Customer.shipping_address_2 = shippingAddress2;
            }
            if (shippingCity != null && shippingCity!= ""){
               payload.Customer.shipping_city = shippingCity;
            }
            if (shippingRegion != null && shippingRegion!= ""){
               payload.Customer.shipping_region = shippingRegion;
            }
            if (shippingCountry != null && shippingCountry!= ""){
               payload.Customer.shipping_country = shippingCountry;
            }
            if (shippingPostalCode != null && shippingPostalCode!= ""){
               payload.Customer.shipping_postal_code = shippingPostalCode;
            }
            if (customerLabelId != null && customerLabelId!= ""){
               payload.Customer.customer_label_id = customerLabelId;
            }
            mc.setPayloadJSON(payload);   
          ]]>
      </script>
      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/customers.json" />
         </endpoint>
      </call>
      <!-- Remove custom Headers from the API Response -->
      <header name="X-Powered-By" action="remove" scope="transport" />
      <header name="P3P" action="remove" scope="transport" />
      <header name="Via" action="remove" scope="transport" />
      <header name="Server" action="remove" scope="transport" />
   </sequence>
</template>