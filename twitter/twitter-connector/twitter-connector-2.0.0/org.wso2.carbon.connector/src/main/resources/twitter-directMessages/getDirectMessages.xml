<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->

<template xmlns="http://ws.apache.org/ns/synapse" name="getDirectMessages">
    <parameter name="sinceId" description="Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available."/>
    <parameter name="maxId" description="Returns results with an ID less than (that is, older than) or equal to the specified ID."/>
    <parameter name="count" description="Specifies the number of direct messages to try and retrieve, up to a maximum of 200. The value of count is best thought of as a limit to the number of Tweets to return because suspended or deleted content is removed after the count has been applied."/>
    <parameter name="includeEntities" description="The entities node will not be included when set to false."/>
    <parameter name="skipStatus" description="When set to either true, t or 1 statuses will not be included in the returned user objects."/>
    <sequence>

        <class name="org.wso2.carbon.connector.twitter.RemoveTwitterContext"/>

        <property name="uri.var.sinceId" expression="$func:sinceId" />
        <property name="uri.var.maxId" expression="$func:maxId" />
        <property name="uri.var.count" expression="$func:count" />
        <property name="uri.var.includeEntities" expression="$func:includeEntities" />
        <property name="uni.var.skipStatus" expression="$func:skipStatus" />

        <script language="js">
            <![CDATA[
				// optional url param variables
				var sinceId = mc.getProperty('uri.var.sinceId');
				var maxId = mc.getProperty('uri.var.maxId');
				var count  = mc.getProperty('uri.var.count');
			    var includeEntities  = mc.getProperty('uri.var.includeEntities');
			    var skipStatus  = mc.getProperty('uni.var.skipStatus');

				var uriParams = '';

				if (sinceId != null && sinceId != "") {
					uriParams = 'since_id=' + sinceId + '&';
					sinceId='since_id=' + encodeURIComponent(sinceId);
                    mc.setProperty('uri.var.sinceId',sinceId)
				}
				if (maxId != null && maxId != "") {
					uriParams += 'max_id=' + maxId + '&';
					maxId='max_id=' + encodeURIComponent(maxId);
                    mc.setProperty('uri.var.maxId',maxId)
				}
				if (count != null && count != "") {
					uriParams += 'count=' + count + '&';
					count='count=' + encodeURIComponent(count);
                    mc.setProperty('uri.var.count',count)
				}
				if (includeEntities != null && includeEntities != "") {
					uriParams += 'include_entities=' + includeEntities + '&';
					includeEntities='include_entities=' + encodeURIComponent(includeEntities);
                    mc.setProperty('uri.var.includeEntities',includeEntities)
				}
				if (skipStatus != null && skipStatus != "") {
					uriParams += 'skip_status=' + skipStatus + '&';
					skipStatus='skip_status=' + encodeURIComponent(skipStatus);
                    mc.setProperty('uri.var.skipStatus',skipStatus)
				}

				if(uriParams != ''){
					mc.setProperty('uri.var.uriParams' , uriParams.substring(0, uriParams.length-1));
				}
			]]>
        </script>

        <property name="uri.var.apiUrl.final"
                  expression="fn:concat(get-property('uri.var.apiUrl'),'/1.1/direct_messages.json')"/>

        <property name="uri.var.httpMethod"
                  value="GET"/>

        <class name="org.wso2.carbon.connector.twitter.TwitterSignatureGeneration"/>

        <header name="Authorization" expression="get-property('uri.var.signature')"
                scope="transport"/>

        <call>
            <endpoint>
                <http method="get"
                      uri-template="legacy-encoding:{uri.var.apiUrl}/1.1/direct_messages.json?{uri.var.uriParams}"/>
            </endpoint>
        </call>

        <!-- Remove custom header information in response -->
        <header name="x-access-level" scope="transport" action="remove"/>
        <header name="x-twitter-response-tags" scope="transport" action="remove"/>
        <header name="x-transaction" scope="transport" action="remove"/>
        <header name="x-response-time" scope="transport" action="remove"/>
        <header name="x-connection-hash" scope="transport" action="remove"/>
        <header name="x-content-type-options" scope="transport" action="remove"/>
        <header name="x-frame-options" scope="transport" action="remove"/>
        <header name="x-rate-limit-limit" scope="transport" action="remove"/>
        <header name="x-rate-limit-remaining" scope="transport" action="remove"/>
        <header name="x-rate-limit-reset" scope="transport" action="remove"/>
        <header name="x-xss-protection" scope="transport" action="remove"/>

    </sequence>
</template>