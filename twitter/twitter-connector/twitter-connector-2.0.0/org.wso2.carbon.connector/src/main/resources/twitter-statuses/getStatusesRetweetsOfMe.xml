<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->

<template xmlns="http://ws.apache.org/ns/synapse" name="getStatusesRetweetsOfMe">
    <parameter name="sinceId" description="Returns results with an ID greater than (that is, more recent than) the specified ID."/>
    <parameter name="count" description="Specifies the number of tweets to try and retrieve"/>
    <parameter name="maxId" description="Returns results with an ID less than (that is, older than) or equal to the specified ID."/>
    <parameter name="trimUser" description="When set to either true, t or 1, each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object."/>
    <parameter name="includeEntities" description="The entities node will be disincluded when set to false."/>
    <parameter name="includeUserEntities " description="The user entities node will not be included when set to false."/>
    <sequence>
        <property name="uri.var.sinceId" expression="$func:sinceId" />
        <property name="uri.var.count" expression="$func:count" />
        <property name="uni.var.maxId" expression="$func:maxId" />
        <property name="uri.var.trimUser" expression="$func:trimUser" />
        <property name="uri.var.includeEntities" expression="$func:includeEntities" />
        <property name="uri.var.includeUserEntities" expression="$func:includeUserEntities" />

        <script language="js">
            <![CDATA[
				// optional url param variables

				var sinceId  = mc.getProperty('uri.var.sinceId');
			    var count  = mc.getProperty('uri.var.count');
			    var maxId  = mc.getProperty('uni.var.maxId');
			    var trimUser = mc.getProperty('uri.var.trimUser');
				var includeEntities  = mc.getProperty('uri.var.includeEntities');
			    var includeUserEntities  = mc.getProperty('uri.var.includeUserEntities');

				var uriParams = '';

               	if (sinceId != null && sinceId != "") {
					uriParams += 'since_id=' + sinceId + '&';
					sinceId = 'since_id=' + encodeURIComponent(sinceId);
					mc.setProperty('uri.var.sinceId', sinceId)
				}
				if (count != null && count != "") {
					uriParams += 'count=' + count + '&';
					count = 'count=' + encodeURIComponent(count);
					mc.setProperty('uri.var.count', count)

				}
				if (maxId != null && maxId != "") {
					uriParams += 'max_id=' + maxId + '&';
					maxId = 'max_id=' + encodeURIComponent(maxId);
					mc.setProperty('uri.var.maxId', maxId)
				}
				if (trimUser != null && trimUser != "") {
					uriParams += 'trim_user=' + trimUser + '&';
					trimUser = 'trim_user=' + encodeURIComponent(trimUser);
					mc.setProperty('uri.var.trimUser', trimUser)
				}
				if (includeEntities != null && includeEntities != "") {
					uriParams += 'include_entities=' + includeEntities + '&';
					includeEntities = 'include_entities=' + encodeURIComponent(includeEntities);
					mc.setProperty('uri.var.includeEntities', includeEntities)
				}
				if (includeUserEntities != null && includeUserEntities != "") {
					uriParams += 'include_user_entities=' + includeUserEntities + '&';
					includeUserEntities = 'include_user_entities=' + encodeURIComponent(includeUserEntities);
					mc.setProperty('uri.var.includeUserEntities', includeUserEntities)
				}

				if(uriParams != ''){
					mc.setProperty('uri.var.uriParams' , uriParams.substring(0, uriParams.length-1));
				}
			]]>
        </script>

        <property name="uri.var.apiUrl.final"
                  expression="fn:concat(get-property('uri.var.apiUrl'),'/1.1/statuses/retweets_of_me.json')"/>

        <property name="uri.var.httpMethod"
                  value="GET"/>

        <class name="org.wso2.carbon.connector.twitter.TwitterSignatureGeneration"/>

        <header name="Authorization" expression="get-property('uri.var.signature')"
                scope="transport"/>

        <call>
            <endpoint>
                <http method="get"
                      uri-template="legacy-encoding:{uri.var.apiUrl}/1.1/statuses/retweets_of_me.json?{uri.var.uriParams}"/>
            </endpoint>
        </call>

        <!-- Remove custom header information in response -->
        <header name="x-access-level" scope="transport" action="remove"/>
        <header name="x-twitter-response-tags" scope="transport" action="remove"/>
        <header name="x-transaction" scope="transport" action="remove"/>
        <header name="x-response-time" scope="transport" action="remove"/>
        <header name="x-connection-hash" scope="transport" action="remove"/>
        <header name="x-content-type-options" scope="transport" action="remove"/>
        <header name="x-frame-options" scope="transport" action="remove"/>
        <header name="x-rate-limit-limit" scope="transport" action="remove"/>
        <header name="x-rate-limit-remaining" scope="transport" action="remove"/>
        <header name="x-rate-limit-reset" scope="transport" action="remove"/>
        <header name="x-xss-protection" scope="transport" action="remove"/>

    </sequence>
</template>