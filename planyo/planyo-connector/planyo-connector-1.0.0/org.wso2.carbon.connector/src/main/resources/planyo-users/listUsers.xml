<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Method URL: http://www.planyo.com/api.php?topic=list_users -->
<template name="listUsers" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="page" description="Page number to return. Default is 0."/>
    <parameter name="pageSize" description="Results per page. Default 100. Maximum 1000."/>
    <parameter name="siteId" description="Unique site ID."/>
    <parameter name="detailLevel"
               description="Indicator to return all user information without custom properties. Values 1 or 4. Default 1."/>
    <parameter name="userFilterName" description="Custom user property filter name. Return a subset of users."/>
    <parameter name="userFilterValue"
               description="Exact value of the custom user property to be used together with userFilterName as the user filter."/>
    <parameter name="userFilterValueInc"
               description="To looks for values of the custom user property which include the requested text."/>
    <parameter name="firstName"
               description="Filter the results by user's first name. Use the star(*) to match multiple values."/>
    <parameter name="lastName"
               description="Filter the results by user's last name. Use the star(*) to match multiple values."/>
    <parameter name="email"
               description="Filter the results by user's email address. Use the star(*) to match multiple values."/>
    <parameter name="country" description="Filter the results by user's 2-letter country code."/>
    <parameter name="address"
               description="Filter the results by user's address. Use the star(*) to match multiple values."/>
    <parameter name="city" description="Filter the results by user's city. Use the star(*) to match multiple values."/>
    <parameter name="zip"
               description="Filter the results by user's zip code/postal address. Use the star(*) to match multiple values."/>
    <parameter name="phoneNumber"
               description="Filter the results by user's phone number excluding the country code. Use the star(*) to match multiple values."/>
    <parameter name="phoneCountryCode"
               description="Filter the results by user's phone country code. As example 1 for US."/>
    <parameter name="mobileNumber"
               description="Filter the results by user's mobile number excluding the country code. Use the star(*) to match multiple values."/>
    <parameter name="mobileCountryCode"
               description="Filter the results by user's mobile country code. As example 41 for Switzerland."/>
    <parameter name="isListUnconfirmed"
               description="If true list users without any confirmed reservations. Default only users with confirmed reservations will be returned."/>
    <sequence>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.pageSize" expression="$func:pageSize"/>
        <property name="uri.var.siteId" expression="$func:siteId"/>
        <property name="uri.var.detailLevel" expression="$func:detailLevel"/>
        <property name="uri.var.userFilterName" expression="$func:userFilterName"/>
        <property name="uri.var.userFilterValue" expression="$func:userFilterValue"/>
        <property name="uri.var.userFilterValueInc" expression="$func:userFilterValueInc"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.address" expression="$func:address"/>
        <property name="uri.var.city" expression="$func:city"/>
        <property name="uri.var.zip" expression="$func:zip"/>
        <property name="uri.var.phoneNumber" expression="$func:phoneNumber"/>
        <property name="uri.var.phoneCountryCode" expression="$func:phoneCountryCode"/>
        <property name="uri.var.mobileNumber" expression="$func:mobileNumber"/>
        <property name="uri.var.mobileCountryCode" expression="$func:mobileCountryCode"/>
        <property name="uri.var.isListUnconfirmed" expression="$func:isListUnconfirmed"/>
        <script language="js">
            <![CDATA[
            var apiKey = mc.getProperty('uri.var.apiKey');
            var version = mc.getProperty('uri.var.version');
            var language = mc.getProperty('uri.var.language');
            var page = mc.getProperty('uri.var.page');
            var pageSize = mc.getProperty('uri.var.pageSize');
            var siteId = mc.getProperty('uri.var.siteId');
            var detailLevel = mc.getProperty('uri.var.detailLevel');
            var userFilterName = mc.getProperty('uri.var.userFilterName');
            var userFilterValue = mc.getProperty('uri.var.userFilterValue');
            var userFilterValueInc = mc.getProperty('uri.var.userFilterValueInc');
            var firstName = mc.getProperty('uri.var.firstName');
            var lastName = mc.getProperty('uri.var.lastName');
            var email = mc.getProperty('uri.var.email');
            var country = mc.getProperty('uri.var.country');
            var address = mc.getProperty('uri.var.address');
            var city = mc.getProperty('uri.var.city');
            var zip = mc.getProperty('uri.var.zip');
            var phoneNumber = mc.getProperty('uri.var.phoneNumber');
            var phoneCountryCode = mc.getProperty('uri.var.phoneCountryCode');
            var mobileNumber = mc.getProperty('uri.var.mobileNumber');
            var mobileCountryCode = mc.getProperty('uri.var.mobileCountryCode');
            var isListUnconfirmed = mc.getProperty('uri.var.isListUnconfirmed');
            var urlQuery = '?api_key=' + encodeURIComponent(apiKey) + '&method=list_users';
            if (version != null && version != '') {
               urlQuery += '&version=' + version;
            }
            if (language != null && language != '') {
               urlQuery += '&language=' + language;
            }
            if (page != null && page != '') {
               urlQuery += '&page=' + page;
            }
            if (pageSize != null && pageSize != '') {
               urlQuery += '&page_size=' + pageSize;
            }
            if (siteId != null && siteId != '') {
               urlQuery += '&site_id=' + siteId;
            }
            if (detailLevel != null && detailLevel != '') {
               urlQuery += '&detail_level=' + detailLevel;
            }
            if (userFilterName != null && userFilterName != '') {
               urlQuery += '&user_filter_name=' + encodeURIComponent(userFilterName);
            }
            if (userFilterValue != null && userFilterValue != '') {
               urlQuery += '&user_filter_value=' + encodeURIComponent(userFilterValue);
            }
            if (userFilterValueInc != null && userFilterValueInc != '') {
               urlQuery += '&user_filter_value_inc=' + encodeURIComponent(userFilterValueInc);
            }
            if (firstName != null && firstName != '') {
               urlQuery += '&first_name=' + encodeURIComponent(firstName);
            }
            if (lastName != null && lastName != '') {
               urlQuery += '&last_name=' + encodeURIComponent(lastName);
            }
            if (email != null && email != '') {
               urlQuery += '&email=' + email;
            }
            if (country != null && country != '') {
               urlQuery += '&country=' + encodeURIComponent(country);
            }
            if (address != null && address != '') {
               urlQuery += '&address=' + encodeURIComponent(address);
            }
            if (city != null && city != '') {
               urlQuery += '&city=' + encodeURIComponent(city);
            }
            if (zip != null && zip != '') {
               urlQuery += '&zip=' + encodeURIComponent(zip);
            }
            if (phoneNumber != null && phoneNumber != '') {
               urlQuery += '&phone_number=' + encodeURIComponent(phoneNumber);
            }
            if (phoneCountryCode != null && phoneCountryCode != '') {
               urlQuery += '&phone_country_code=' + encodeURIComponent(phoneCountryCode);
            }
            if (mobileNumber != null && mobileNumber != '') {
               urlQuery += '&mobile_number=' + encodeURIComponent(mobileNumber);
            }
            if (mobileCountryCode != null && mobileCountryCode != '') {
               urlQuery += '&mobile_country_code=' + encodeURIComponent(mobileCountryCode);
            }
            if (isListUnconfirmed != null && isListUnconfirmed != '') {
               urlQuery += '&list_unconfirmed=' + isListUnconfirmed;
            }
            mc.setProperty('uri.var.urlQuery', urlQuery);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{uri.var.apiUrl}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="X-Powered-By" scope="transport" action="remove"/>
        <header name="Via" scope="transport" action="remove"/>
    </sequence>
</template>