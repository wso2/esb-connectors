<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Method URL: http://www.planyo.com/api.php?topic=list_resources -->
<template name="listResources" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="detailLevel"
               description="Indicator to return all resource information without resource specific properties. Values 1 or 2 or 4 or 8. Default 1."/>
    <parameter name="page" description="Page number to return. Default is 0."/>
    <parameter name="pageSize" description="Results per page. Default 100. Maximum 300."/>
    <parameter name="isListPublishedOnly" description="If true return only published resources. Default false."/>
    <parameter name="adminId"
               description="Filter the resources by providing ID of the resource administrator, isn't provided return all."/>
    <parameter name="resourceFilterName"
               description="Custom resource property filter name. Return a subset of resources."/>
    <parameter name="resourceFilterValue"
               description="Exact value of the custom resource property to be used together with resourceFilterName as the resource filter."/>
    <parameter name="resourceFilterValueInc"
               description="To looks for values of the custom resource property which include the requested text."/>
    <sequence>
        <property name="uri.var.detailLevel" expression="$func:detailLevel"/>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.pageSize" expression="$func:pageSize"/>
        <property name="uri.var.isListPublishedOnly" expression="$func:isListPublishedOnly"/>
        <property name="uri.var.adminId" expression="$func:adminId"/>
        <property name="uri.var.resourceFilterName" expression="$func:resourceFilterName"/>
        <property name="uri.var.resourceFilterValue" expression="$func:resourceFilterValue"/>
        <property name="uri.var.resourceFilterValueInc" expression="$func:resourceFilterValueInc"/>
        <script language="js">
            <![CDATA[
            var apiKey = mc.getProperty('uri.var.apiKey');
            var version = mc.getProperty('uri.var.version');
            var language = mc.getProperty('uri.var.language');
            var detailLevel = mc.getProperty('uri.var.detailLevel');
            var page = mc.getProperty('uri.var.page');
            var pageSize = mc.getProperty('uri.var.pageSize');
            var isListPublishedOnly = mc.getProperty('uri.var.isListPublishedOnly');
            var adminId = mc.getProperty('uri.var.adminId');
            var resourceFilterName = mc.getProperty('uri.var.resourceFilterName');
            var resourceFilterValue = mc.getProperty('uri.var.resourceFilterValue');
            var resourceFilterValueInc = mc.getProperty('uri.var.resourceFilterValueInc');
            var urlQuery = '?api_key=' + encodeURIComponent(apiKey) + '&method=list_resources';
            if (version != null && version != '') {
               urlQuery += '&version=' + version;
            }
            if (language != null && language != '') {
               urlQuery += '&language=' + encodeURIComponent(language);
            }
            if (detailLevel != null && detailLevel != '') {
               urlQuery += '&detail_level=' + detailLevel;
            }
            if (page != null && page != '') {
               urlQuery += '&page=' + page;
            }
            if (pageSize != null && pageSize != '') {
               urlQuery += '&page_size=' + pageSize;
            }
            if (isListPublishedOnly != null && isListPublishedOnly != '') {
               urlQuery += '&list_published_only=' + isListPublishedOnly;
            }
            if (adminId != null && adminId != '') {
               urlQuery += '&admin_id=' + adminId;
            }
            if (resourceFilterName != null && resourceFilterName != '') {
               urlQuery += '&res_filter_name=' + encodeURIComponent(resourceFilterName);
            }
            if (resourceFilterValue != null && resourceFilterValue != '') {
               urlQuery += '&res_filter_value=' + encodeURIComponent(resourceFilterValue);
            }
            if (resourceFilterValueInc != null && resourceFilterValueInc != '') {
               urlQuery += '&res_filter_value_inc=' + encodeURIComponent(resourceFilterValueInc);
            }
            mc.setProperty('uri.var.urlQuery', urlQuery);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{uri.var.apiUrl}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="X-Powered-By" scope="transport" action="remove"/>
        <header name="Via" scope="transport" action="remove"/>
    </sequence>
</template>