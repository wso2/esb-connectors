<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="eloquaStandardAPI"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="siteName" expression="json-eval($.siteName)"/>
            <property name="username" expression="json-eval($.username)"/>
            <property name="password" expression="json-eval($.password)"/>
            <property name="startAt" expression="json-eval($.startAt)"/>
            <property name="endAt" expression="json-eval($.endAt)"/>
            <property name="budgetedCost" expression="json-eval($.budgetedCost)"/>
            <property name="actualCost" expression="json-eval($.actualCost)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="isMemberAllowedReEntry" expression="json-eval($.isMemberAllowedReEntry)"/>
            <property name="fieldValues" expression="json-eval($.fieldValues)"/>
            <property name="elements" expression="json-eval($.elements)"/>
            <property name="isReadOnly" expression="json-eval($.isReadOnly)"/>
            <property name="campaignType" expression="json-eval($.campaignType)"/>
            <property name="product" expression="json-eval($.product)"/>
            <property name="region" expression="json-eval($.region)"/>
            <property name="crmId" expression="json-eval($.crmId)"/>
            <property name="isSyncedWithCRM" expression="json-eval($.isSyncedWithCRM)"/>
            <property name="isIncludedInROI" expression="json-eval($.isIncludedInROI)"/>
            <property name="firstName" expression="json-eval($.firstName)"/>
            <property name="lastName" expression="json-eval($.lastName)"/>
            <property name="emailAddress" expression="json-eval($.emailAddress)"/>
            <property name="emailFormatPreference"
                      expression="json-eval($.emailFormatPreference)"/>
            <property name="isSubscribed" expression="json-eval($.isSubscribed)"/>
            <property name="isBounceback" expression="json-eval($.isBounceback)"/>
            <property name="accountName" expression="json-eval($.accountName)"/>
            <property name="accountId" expression="json-eval($.accountId)"/>
            <property name="title" expression="json-eval($.title)"/>
            <property name="subscriptionDate" expression="json-eval($.subscriptionDate)"/>
            <property name="unsubscriptionDate" expression="json-eval($.unsubscriptionDate)"/>
            <property name="bouncebackDate" expression="json-eval($.bouncebackDate)"/>
            <property name="mobilePhone" expression="json-eval($.mobilePhone)"/>
            <property name="fax" expression="json-eval($.fax)"/>
            <property name="salesPerson" expression="json-eval($.salesPerson)"/>
            <property name="address1" expression="json-eval($.address1)"/>
            <property name="address2" expression="json-eval($.address2)"/>
            <property name="address3" expression="json-eval($.address3)"/>
            <property name="city" expression="json-eval($.city)"/>
            <property name="province" expression="json-eval($.province)"/>
            <property name="postalCode" expression="json-eval($.postalCode)"/>
            <property name="country" expression="json-eval($.country)"/>
            <property name="businessPhone" expression="json-eval($.businessPhone)"/>
            <property name="siteName" expression="json-eval($.siteName)"/>
            <property name="username" expression="json-eval($.username)"/>
            <property name="password" expression="json-eval($.password)"/>
            <property name="scope" expression="json-eval($.scope)"/>
            <property name="count" expression="json-eval($.count)"/>
            <property name="membershipAdditions" expression="json-eval($.membershipAdditions)"/>
            <property name="membershipDeletions" expression="json-eval($.membershipDeletions)"/>
            <property name="dataLookupId" expression="json-eval($.dataLookupId)"/>
            <property name="address1" expression="json-eval($.address1)"/>
            <property name="address2" expression="json-eval($.address2)"/>
            <property name="address3" expression="json-eval($.address3)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="city" expression="json-eval($.city)"/>
            <property name="province" expression="json-eval($.province)"/>
            <property name="postalCode" expression="json-eval($.postalCode)"/>
            <property name="country" expression="json-eval($.country)"/>
            <property name="businessPhone" expression="json-eval($.businessPhone)"/>
            <property name="emailHeaderId" expression="json-eval($.emailHeaderId)"/>
            <property name="emailFooterId" expression="json-eval($.emailFooterId)"/>
            <property name="subscriptionLandingPageId" expression="json-eval($.subscriptionLandingPageId)"/>
            <property name="unsubscriptionLandingPageId" expression="json-eval($.unsubscriptionLandingPageId)"/>
            <property name="emailIds" expression="json-eval($.emailIds)"/>
            <property name="isVisibleInPublicSubscriptionList"
                      expression="json-eval($.isVisibleInPublicSubscriptionList)"/>
            <property name="isVisibleInOutlookPlugin" expression="json-eval($.isVisibleInOutlookPlugin)"/>
            <property name="displayName" expression="json-eval($.displayName)"/>
            <property name="subscriptionListId" expression="json-eval($.subscriptionListId)"/>
            <property name="unSubscriptionListId" expression="json-eval($.unSubscriptionListId)"/>
            <property name="subscriptionListDataLookupId" expression="json-eval($.subscriptionListDataLookupId)"/>
            <property name="unSubscriptionListDataLookupId" expression="json-eval($.unSubscriptionListDataLookupId)"/>
            <property name="externalAssetTypeId" expression="json-eval($.externalAssetTypeId)"/>
            <property name="userId" expression="json-eval($.userId)"/>
            <property name="isEnabled" expression="json-eval($.isEnabled)"/>
            <property name="emailAddress" expression="json-eval($.emailAddress)"/>
            <property name="isRestrictedToSchedule" expression="json-eval($.isRestrictedToSchedule)"/>
            <property name="ruleLogicType" expression="json-eval($.ruleLogicType)"/>
            <property name="visitorMustBeMappedToContact" expression="json-eval($.visitorMustBeMappedToContact)"/>
            <property name="ruleIds" expression="json-eval($.ruleIds)"/>
            <property name="campaignId" expression="json-eval($.campaignId)"/>
            <property name="contactId" expression="json-eval($.contactId)"/>
            <property name="newContactId" expression="json-eval($.newContactId)"/>
            <property name="contactListId" expression="json-eval($.contactListId)"/>
            <property name="accountId" expression="json-eval($.accountId)"/>
            <property name="emailGroupId" expression="json-eval($.emailGroupId)"/>
            <property name="externalAssetId" expression="json-eval($.externalAssetId)"/>
            <property name="visitorId" expression="json-eval($.visitorId)"/>
            <property name="count" expression="json-eval($.count)"/>
            <property name="depth" expression="json-eval($.depth)"/>
            <property name="search" expression="json-eval($.search)"/>
            <property name="page" expression="json-eval($.page)"/>
            <property name="orderBy" expression="json-eval($.orderBy)"/>
            <property name="lastUpdatedAt" expression="json-eval($.lastUpdatedAt)"/>
            <property name="extensions" expression="json-eval($.extensions)"/>
            <property name="viewId" expression="json-eval($.viewId)"/>
            <property name="startDate" expression="json-eval($.startDate)"/>
            <property name="endDate" expression="json-eval($.endDate)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="transportAction" expression="$trp:Action"/>
            <eloquaStandardAPI.init>
                <siteName>{$ctx:siteName}</siteName>
                <username>{$ctx:username}</username>
                <password>{$ctx:password}</password>
            </eloquaStandardAPI.init>
            <switch source="get-property('transportAction')">
                <case regex="createACampaign">
                    <eloquaStandardAPI.createACampaign>
                        <startAt>{$ctx:startAt}</startAt>
                        <endAt>{$ctx:endAt}</endAt>
                        <budgetedCost>{$ctx:budgetedCost}</budgetedCost>
                        <actualCost>{$ctx:actualCost}</actualCost>
                        <name>{$ctx:name}</name>
                        <isMemberAllowedReEntry>{$ctx:isMemberAllowedReEntry}</isMemberAllowedReEntry>
                        <fieldValues>{$ctx:fieldValues}</fieldValues>
                        <elements>{$ctx:elements}</elements>
                        <isReadOnly>{$ctx:isReadOnly}</isReadOnly>
                        <campaignType>{$ctx:campaignType}</campaignType>
                        <product>{$ctx:product}</product>
                        <region>{$ctx:region}</region>
                        <crmId>{$ctx:crmId}</crmId>
                        <isSyncedWithCRM>{$ctx:isSyncedWithCRM}</isSyncedWithCRM>
                        <isIncludedInROI>{$ctx:isIncludedInROI}</isIncludedInROI>
                    </eloquaStandardAPI.createACampaign>
                </case>
                <case regex="createAContact">
                    <eloquaStandardAPI.createAContact>
                        <firstName>{$ctx:firstName}</firstName>
                        <lastName>{$ctx:lastName}</lastName>
                        <emailAddress>{$ctx:emailAddress}</emailAddress>
                        <isSubscribed>{$ctx:isSubscribed}</isSubscribed>
                        <fieldValues>{$ctx:fieldValues}</fieldValues>
                        <emailFormatPreference>{$ctx:emailFormatPreference}</emailFormatPreference>
                        <isBounceback>{$ctx:isBounceback}</isBounceback>
                        <accountName>{$ctx:accountName}</accountName>
                        <accountId>{$ctx:accountId}</accountId>
                        <title>{$ctx:title}</title>
                        <subscriptionDate>{$ctx:subscriptionDate}</subscriptionDate>
                        <unsubscriptionDate>{$ctx:unsubscriptionDate}</unsubscriptionDate>
                        <bouncebackDate>{$ctx:bouncebackDate}</bouncebackDate>
                        <mobilePhone>{$ctx:mobilePhone}</mobilePhone>
                        <fax>{$ctx:fax}</fax>
                        <salesPerson>{$ctx:salesPerson}</salesPerson>
                        <address1>{$ctx:address1}</address1>
                        <address2>{$ctx:address2}</address2>
                        <address3>{$ctx:address3}</address3>
                        <city>{$ctx:city}</city>
                        <province>{$ctx:province}</province>
                        <postalCode>{$ctx:postalCode}</postalCode>
                        <country>{$ctx:country}</country>
                        <businessPhone>{$ctx:businessPhone}</businessPhone>
                    </eloquaStandardAPI.createAContact>
                </case>
                <case regex="createAContactList">
                    <eloquaStandardAPI.createAContactList>
                        <scope>{$ctx:scope}</scope>
                        <count>{$ctx:count}</count>
                        <membershipAdditions>{$ctx:membershipAdditions}</membershipAdditions>
                        <name>{$ctx:name}</name>
                        <dataLookupId>{$ctx:dataLookupId}</dataLookupId>
                        <membershipDeletions>{$ctx:membershipDeletions}</membershipDeletions>
                    </eloquaStandardAPI.createAContactList>
                </case>
                <case regex="createAnAccount">
                    <eloquaStandardAPI.createAnAccount>
                        <address1>{$ctx:address1}</address1>
                        <address2>{$ctx:address2}</address2>
                        <address3>{$ctx:address3}</address3>
                        <name>{$ctx:name}</name>
                        <city>{$ctx:city}</city>
                        <province>{$ctx:province}</province>
                        <postalCode>{$ctx:postalCode}</postalCode>
                        <country>{$ctx:country}</country>
                        <businessPhone>{$ctx:businessPhone}</businessPhone>
                        <fieldValues>{$ctx:fieldValues}</fieldValues>
                    </eloquaStandardAPI.createAnAccount>
                </case>
                <case regex="createAnEmailGroup">
                    <eloquaStandardAPI.createAnEmailGroup>
                        <emailHeaderId>{$ctx:emailHeaderId}</emailHeaderId>
                        <emailFooterId>{$ctx:emailFooterId}</emailFooterId>
                        <subscriptionLandingPageId>{$ctx:subscriptionLandingPageId}</subscriptionLandingPageId>
                        <unsubscriptionLandingPageId>{$ctx:unsubscriptionLandingPageId}</unsubscriptionLandingPageId>
                        <emailIds>{$ctx:emailIds}</emailIds>
                        <name>{$ctx:name}</name>
                        <isVisibleInPublicSubscriptionList>{$ctx:isVisibleInPublicSubscriptionList}
                        </isVisibleInPublicSubscriptionList>
                        <isVisibleInOutlookPlugin>{$ctx:isVisibleInOutlookPlugin}</isVisibleInOutlookPlugin>
                        <displayName>{$ctx:displayName}</displayName>
                        <subscriptionListId>{$ctx:subscriptionListId}</subscriptionListId>
                        <unSubscriptionListId>{$ctx:unSubscriptionListId}</unSubscriptionListId>
                        <subscriptionListDataLookupId>{$ctx:subscriptionListDataLookupId}</subscriptionListDataLookupId>
                        <unSubscriptionListDataLookupId>{$ctx:unSubscriptionListDataLookupId}
                        </unSubscriptionListDataLookupId>
                    </eloquaStandardAPI.createAnEmailGroup>
                </case>
                <case regex="createAnExternalAsset">
                    <eloquaStandardAPI.createAnExternalAsset>
                        <externalAssetTypeId>{$ctx:externalAssetTypeId}</externalAssetTypeId>
                        <name>{$ctx:name}</name>
                    </eloquaStandardAPI.createAnExternalAsset>
                </case>
                <case regex="createAVisitorNotification">
                    <eloquaStandardAPI.createAVisitorNotification>
                        <userId>{$ctx:userId}</userId>
                        <isEnabled>{$ctx:isEnabled}</isEnabled>
                        <emailAddress>{$ctx:emailAddress}</emailAddress>
                        <isRestrictedToSchedule>{$ctx:isRestrictedToSchedule}</isRestrictedToSchedule>
                        <name>{$ctx:name}</name>
                        <ruleLogicType>{$ctx:ruleLogicType}</ruleLogicType>
                        <visitorMustBeMappedToContact>{$ctx:visitorMustBeMappedToContact}</visitorMustBeMappedToContact>
                        <ruleIds>{$ctx:ruleIds}</ruleIds>
                    </eloquaStandardAPI.createAVisitorNotification>
                </case>
                <case regex="deleteACampaign">
                    <eloquaStandardAPI.deleteACampaign>
                        <campaignId>{$ctx:campaignId}</campaignId>
                    </eloquaStandardAPI.deleteACampaign>
                </case>
                <case regex="deleteAContact">
                    <eloquaStandardAPI.deleteAContact>
                        <contactId>{$ctx:contactId}</contactId>
                    </eloquaStandardAPI.deleteAContact>
                </case>
                <case regex="deleteAContactList">
                    <eloquaStandardAPI.deleteAContactList>
                        <contactListId>{$ctx:contactListId}</contactListId>
                    </eloquaStandardAPI.deleteAContactList>
                </case>
                <case regex="deleteAnAccount">
                    <eloquaStandardAPI.deleteAnAccount>
                        <accountId>{$ctx:accountId}</accountId>
                    </eloquaStandardAPI.deleteAnAccount>
                </case>
                <case regex="deleteAnEmailGroup">
                    <eloquaStandardAPI.deleteAnEmailGroup>
                        <emailGroupId>{$ctx:emailGroupId}</emailGroupId>
                    </eloquaStandardAPI.deleteAnEmailGroup>
                </case>
                <case regex="deleteAnExternalAsset">
                    <eloquaStandardAPI.deleteAnExternalAsset>
                        <externalAssetId>{$ctx:externalAssetId}</externalAssetId>
                    </eloquaStandardAPI.deleteAnExternalAsset>
                </case>
                <case regex="deleteAVisitorNotification">
                    <eloquaStandardAPI.deleteAVisitorNotification>
                        <visitorId>{$ctx:visitorId}</visitorId>
                    </eloquaStandardAPI.deleteAVisitorNotification>
                </case>
                <case regex="getAllCampaigns">
                    <eloquaStandardAPI.getAllCampaigns>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAllCampaigns>
                </case>
                <case regex="getAListOfAccounts">
                    <eloquaStandardAPI.getAListOfAccounts>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <viewId>{$ctx:viewId}</viewId>
                    </eloquaStandardAPI.getAListOfAccounts>
                </case>
                <case regex="getActivitiesOfAContact">
                    <eloquaStandardAPI.getActivitiesOfAContact>
                        <contactId>{$ctx:contactId}</contactId>
                        <startDate>{$ctx:startDate}</startDate>
                        <endDate>{$ctx:endDate}</endDate>
                        <type>{$ctx:type}</type>
                        <count>{$ctx:count}</count>
                    </eloquaStandardAPI.getActivitiesOfAContact>
                </case>
                <case regex="getAContactList">
                    <eloquaStandardAPI.getAContactList>
                        <contactListId>{$ctx:contactListId}</contactListId>
                        <depth>{$ctx:depth}</depth>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAContactList>
                </case>
                <case regex="getAContact">
                    <eloquaStandardAPI.getAContact>
                        <contactId>{$ctx:contactId}</contactId>
                        <depth>{$ctx:depth}</depth>
                        <viewId>{$ctx:viewId}</viewId>
                    </eloquaStandardAPI.getAContact>
                </case>
                <case regex="getACampaign">
                    <eloquaStandardAPI.getACampaign>
                        <campaignId>{$ctx:campaignId}</campaignId>
                        <depth>{$ctx:depth}</depth>
                    </eloquaStandardAPI.getACampaign>
                </case>
                <case regex="getAllExternalAssets">
                    <eloquaStandardAPI.getAllExternalAssets>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAllExternalAssets>
                </case>
                <case regex="getAllEmailGroups">
                    <eloquaStandardAPI.getAllEmailGroups>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAllEmailGroups>
                </case>
                <case regex="getAllContacts">
                    <eloquaStandardAPI.getAllContacts>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <viewId>{$ctx:viewId}</viewId>
                    </eloquaStandardAPI.getAllContacts>
                </case>
                <case regex="getAllContactLists">
                    <eloquaStandardAPI.getAllContactLists>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAllContactLists>
                </case>
                <case regex="getAllVisitors">
                    <eloquaStandardAPI.getAllVisitors>
                        <count>{$ctx:count}</count>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                    </eloquaStandardAPI.getAllVisitors>
                </case>
                <case regex="getAllVisitorNotifications">
                    <eloquaStandardAPI.getAllVisitorNotifications>
                        <userId>{$ctx:userId}</userId>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAllVisitorNotifications>
                </case>
                <case regex="getAllUsers">
                    <eloquaStandardAPI.getAllUsers>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAllUsers>
                </case>
                <case regex="getAllExternalAssetTypes">
                    <eloquaStandardAPI.getAllExternalAssetTypes>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAllExternalAssetTypes>
                </case>
                <case regex="getAVisitorNotification">
                    <eloquaStandardAPI.getAVisitorNotification>
                        <visitorId>{$ctx:visitorId}</visitorId>
                        <depth>{$ctx:depth}</depth>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAVisitorNotification>
                </case>
                <case regex="getAUser">
                    <eloquaStandardAPI.getAUser>
                        <userId>{$ctx:userId}</userId>
                        <depth>{$ctx:depth}</depth>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAUser>
                </case>
                <case regex="getAnExternalAsset">
                    <eloquaStandardAPI.getAnExternalAsset>
                        <externalAssetId>{$ctx:externalAssetId}</externalAssetId>
                        <depth>{$ctx:depth}</depth>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAnExternalAsset>
                </case>
                <case regex="getAnExternalActivity">
                    <eloquaStandardAPI.getAnExternalActivity>
                        <externalActivityId>{$ctx:externalActivityId}</externalActivityId>
                    </eloquaStandardAPI.getAnExternalActivity>
                </case>
                <case regex="getAnEmailGroup">
                    <eloquaStandardAPI.getAnEmailGroup>
                        <emailGroupId>{$ctx:emailGroupId}</emailGroupId>
                        <depth>{$ctx:depth}</depth>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getAnEmailGroup>
                </case>
                <case regex="getAnAccount">
                    <eloquaStandardAPI.getAnAccount>
                        <accountId>{$ctx:accountId}</accountId>
                        <depth>{$ctx:depth}</depth>
                        <viewId>{$ctx:viewId}</viewId>
                    </eloquaStandardAPI.getAnAccount>
                </case>
                <case regex="getSubscribedEmailGroups">
                    <eloquaStandardAPI.getSubscribedEmailGroups>
                        <count>{$ctx:count}</count>
                        <search>{$ctx:search}</search>
                        <page>{$ctx:page}</page>
                        <orderBy>{$ctx:orderBy}</orderBy>
                        <lastUpdatedAt>{$ctx:lastUpdatedAt}</lastUpdatedAt>
                        <contactId>{$ctx:contactId}</contactId>
                    </eloquaStandardAPI.getSubscribedEmailGroups>
                </case>
                <case regex="getRecentCampaigns">
                    <eloquaStandardAPI.getRecentCampaigns>
                        <count>{$ctx:count}</count>
                        <depth>{$ctx:depth}</depth>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getRecentCampaigns>
                </case>
                <case regex="getCurrentUser">
                    <eloquaStandardAPI.getCurrentUser>
                        <depth>{$ctx:depth}</depth>
                        <extensions>{$ctx:extensions}</extensions>
                    </eloquaStandardAPI.getCurrentUser>
                </case>
                <case regex="updateACampaign">
                    <eloquaStandardAPI.updateACampaign>
                        <campaignId>{$ctx:campaignId}</campaignId>
                        <startAt>{$ctx:startAt}</startAt>
                        <endAt>{$ctx:endAt}</endAt>
                        <budgetedCostactualCost>{$ctx:budgetedCostactualCost}</budgetedCostactualCost>
                        <name>{$ctx:name}</name>
                        <isMemberAllowedReEntry>{$ctx:isMemberAllowedReEntry}</isMemberAllowedReEntry>
                        <fieldValuesValue>{$ctx:fieldValuesValue}</fieldValuesValue>
                        <fieldValuesId>{$ctx:fieldValuesId}</fieldValuesId>
                        <actualCost>{$ctx:actualCost}</actualCost>
                        <campaignElementPosition>{$ctx:campaignElementPosition}</campaignElementPosition>
                        <campaignElementOutputTerminals>{$ctx:campaignElementOutputTerminals}
                        </campaignElementOutputTerminals>
                        <campaignElementContactCount>{$ctx:campaignElementContactCount}</campaignElementContactCount>
                        <isReadOnly>{$ctx:isReadOnly}</isReadOnly>
                        <campaignType>{$ctx:campaignType}</campaignType>
                        <product>{$ctx:product}</product>
                        <region>{$ctx:region}</region>
                        <crmId>{$ctx:crmId}</crmId>
                        <isSyncedWithCRM>{$ctx:isSyncedWithCRM}</isSyncedWithCRM>
                        <isIncludedInROI>{$ctx:isIncludedInROI}</isIncludedInROI>
                    </eloquaStandardAPI.updateACampaign>
                </case>
                <case regex="updateAContact">
                    <eloquaStandardAPI.updateAContact>
                        <firstName>{$ctx:firstName}</firstName>
                        <contactId>{$ctx:contactId}</contactId>
                        <lastName>{$ctx:lastName}</lastName>
                        <emailAddress>{$ctx:emailAddress}</emailAddress>
                        <name>{$ctx:name}</name>
                        <isSubscribed>{$ctx:isSubscribed}</isSubscribed>
                        <fieldValues>{$ctx:fieldValues}</fieldValues>
                        <emailFormatPreference>{$ctx:emailFormatPreference}</emailFormatPreference>
                        <isBounceback>{$ctx:isBounceback}</isBounceback>
                        <accountName>{$ctx:accountName}</accountName>
                        <accountId>{$ctx:accountId}</accountId>
                        <title>{$ctx:title}</title>
                        <subscriptionDate>{$ctx:subscriptionDate}</subscriptionDate>
                        <unsubscriptionDate>{$ctx:unsubscriptionDate}</unsubscriptionDate>
                        <bouncebackDate>{$ctx:bouncebackDate}</bouncebackDate>
                        <fieldValues>{$ctx:fieldValues}</fieldValues>
                        <mobilePhone>{$ctx:mobilePhone}</mobilePhone>
                        <fax>{$ctx:fax}</fax>
                        <salesPerson>{$ctx:salesPerson}</salesPerson>
                        <address1>{$ctx:address1}</address1>
                        <address2>{$ctx:address2}</address2>
                        <address3>{$ctx:address3}</address3>
                        <name>{$ctx:name}</name>
                        <city>{$ctx:city}</city>
                        <province>{$ctx:province}</province>
                        <postalCode>{$ctx:postalCode}</postalCode>
                        <country>{$ctx:country}</country>
                        <businessPhone>{$ctx:businessPhone}</businessPhone>
                    </eloquaStandardAPI.updateAContact>
                </case>
                <case regex="updateAContactList">
                    <eloquaStandardAPI.updateAContactList>
                        <scope>{$ctx:scope}</scope>
                        <count>{$ctx:count}</count>
                        <membershipAdditions>{$ctx:membershipAdditions}</membershipAdditions>
                        <name>{$ctx:name}</name>
                        <contactListId>{$ctx:contactListId}</contactListId>
                        <dataLookupId>{$ctx:dataLookupId}</dataLookupId>
                        <membershipDeletions>{$ctx:membershipDeletions}</membershipDeletions>
                    </eloquaStandardAPI.updateAContactList>
                </case>
                <case regex="updateAnAccount">
                    <eloquaStandardAPI.updateAnAccount>
                        <accountId>{$ctx:accountId}</accountId>
                        <address1>{$ctx:address1}</address1>
                        <address2>{$ctx:address2}</address2>
                        <address3>{$ctx:address3}</address3>
                        <name>{$ctx:name}</name>
                        <city>{$ctx:city}</city>
                        <province>{$ctx:province}</province>
                        <postalCode>{$ctx:postalCode}</postalCode>
                        <country>{$ctx:country}</country>
                        <businessPhone>{$ctx:businessPhone}</businessPhone>
                        <fieldValues>{$ctx:fieldValues}</fieldValues>
                    </eloquaStandardAPI.updateAnAccount>
                </case>
                <case regex="updateAnEmailGroup">
                    <eloquaStandardAPI.updateAnEmailGroup>
                        <emailGroupId>{$ctx:emailGroupId}</emailGroupId>
                        <emailHeaderId>{$ctx:emailHeaderId}</emailHeaderId>
                        <emailFooterId>{$ctx:emailFooterId}</emailFooterId>
                        <subscriptionLandingPageId>{$ctx:subscriptionLandingPageId}</subscriptionLandingPageId>
                        <unsubscriptionLandingPageId>{$ctx:unsubscriptionLandingPageId}</unsubscriptionLandingPageId>
                        <emailIds>{$ctx:emailIds}</emailIds>
                        <name>{$ctx:name}</name>
                        <isVisibleInPublicSubscriptionList>{$ctx:isVisibleInPublicSubscriptionList}
                        </isVisibleInPublicSubscriptionList>
                        <isVisibleInOutlookPlugin>{$ctx:isVisibleInOutlookPlugin}</isVisibleInOutlookPlugin>
                        <emailIds>{$ctx:emailIds}</emailIds>
                        <displayName>{$ctx:displayName}</displayName>
                        <subscriptionListId>{$ctx:subscriptionListId}</subscriptionListId>
                        <unSubscriptionListId>{$ctx:unSubscriptionListId}</unSubscriptionListId>
                        <subscriptionListDataLookupId>{$ctx:subscriptionListDataLookupId}</subscriptionListDataLookupId>
                        <unSubscriptionListDataLookupId>{$ctx:unSubscriptionListDataLookupId}
                        </unSubscriptionListDataLookupId>
                    </eloquaStandardAPI.updateAnEmailGroup>
                </case>
                <case regex="updateASubscribedEmailGroupOfAContact">
                    <eloquaStandardAPI.updateASubscribedEmailGroupOfAContact>
                        <emailGroupId>{$ctx:emailGroupId}</emailGroupId>
                        <contactId>{$ctx:contactId}</contactId>
                        <newContactId>{$ctx:newContactId}</newContactId>
                        <isSubscribed>{$ctx:isSubscribed}</isSubscribed>
                        <updatedAt>{$ctx:updatedAt}</updatedAt>
                        <name>{$ctx:name}</name>
                        <isVisibleInOutlookPlugin>{$ctx:isVisibleInOutlookPlugin}</isVisibleInOutlookPlugin>
                        <emailIds>{$ctx:emailIds}</emailIds>
                        <displayName>{$ctx:displayName}</displayName>
                        <subscriptionListId>{$ctx:subscriptionListId}</subscriptionListId>
                        <unSubscriptionListId>{$ctx:unSubscriptionListId}</unSubscriptionListId>
                        <subscriptionListDataLookupId>{$ctx:subscriptionListDataLookupId}</subscriptionListDataLookupId>
                        <unSubscriptionListDataLookupId>{$ctx:unSubscriptionListDataLookupId}
                        </unSubscriptionListDataLookupId>
                        <emailHeaderId>{$ctx:emailHeaderId}</emailHeaderId>
                        <emailFooterId>{$ctx:emailFooterId}</emailFooterId>
                        <subscriptionLandingPageId>{$ctx:subscriptionLandingPageId}</subscriptionLandingPageId>
                        <unsubscriptionLandingPageId>{$ctx:unsubscriptionLandingPageId}</unsubscriptionLandingPageId>
                        <isVisibleInPublicSubscriptionList>{$ctx:isVisibleInPublicSubscriptionList}
                        </isVisibleInPublicSubscriptionList>
                    </eloquaStandardAPI.updateASubscribedEmailGroupOfAContact>
                </case>
                <case regex="updateAnExternalAsset">
                    <eloquaStandardAPI.updateAnExternalAsset>
                        <externalAssetId>{$ctx:externalAssetId}</externalAssetId>
                        <externalAssetTypeId>{$ctx:externalAssetTypeId}</externalAssetTypeId>
                        <name>{$ctx:name}</name>
                    </eloquaStandardAPI.updateAnExternalAsset>
                </case>
                <case regex="updateAVisitorNotification">
                    <eloquaStandardAPI.updateAVisitorNotification>
                        <visitorId>{$ctx:visitorId}</visitorId>
                        <userId>{$ctx:userId}</userId>
                        <isEnabled>{$ctx:isEnabled}</isEnabled>
                        <emailAddress>{$ctx:emailAddress}</emailAddress>
                        <isRestrictedToSchedule>{$ctx:isRestrictedToSchedule}</isRestrictedToSchedule>
                        <name>{$ctx:name}</name>
                        <ruleLogicType>{$ctx:ruleLogicType}</ruleLogicType>
                        <visitorMustBeMappedToContact>{$ctx:visitorMustBeMappedToContact}</visitorMustBeMappedToContact>
                        <isRestrictedToSchedule>{$ctx:isRestrictedToSchedule}</isRestrictedToSchedule>
                        <ruleIds>{$ctx:ruleIds}</ruleIds>
                    </eloquaStandardAPI.updateAVisitorNotification>
                </case>
                <case regex="updateAUser">
                    <eloquaStandardAPI.updateAUser>
                        <name>{$ctx:name}</name>
                        <userId>{$ctx:userId}</userId>
                        <loginName>{$ctx:loginName}</loginName>
                        <company>{$ctx:company}</company>
                        <emailAddress>{$ctx:emailAddress}</emailAddress>
                        <preferences>{$ctx:preferences}</preferences>
                        <typePermissions>{$ctx:typePermissions}</typePermissions>
                        <capabilities>{$ctx:capabilities}</capabilities>
                        <betaAccess>{$ctx:betaAccess}</betaAccess>
                        <loggedInAt>{$ctx:loggedInAt}</loggedInAt>
                        <defaultContactViewId>{$ctx:defaultContactViewId}</defaultContactViewId>
                        <defaultAccountViewId>{$ctx:defaultAccountViewId}</defaultAccountViewId>
                        <interfacePermissions>{$ctx:interfacePermissions}</interfacePermissions>
                        <productPermissions>{$ctx:productPermissions}</productPermissions>
                    </eloquaStandardAPI.updateAUser>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </target>
    <description/>
</proxy>
                                