<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<template name="getAllContactLists" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="count"
               description="The number of results in a page to display. This must me in between 1 and 1000."/>
    <parameter name="depth"
               description="The RequestDepth. It can be 'complete' or 'Reference' or 'Minimal' or 'Partial'."/>
    <parameter name="search" description="The search field, to search for that field."/>
    <parameter name="page" description="The page number to display. This must be greater than 1."/>
    <parameter name="orderBy" description="The order by string property to order the fields."/>
    <parameter name="lastUpdatedAt" description="The date time of the last update."/>
    <parameter name="extensions" description="The extensions to filter. Must follow the pattern : ^[A-Za-z0-9]+$."/>
    <sequence>
        <property name="uri.var.count" expression="$func:count"/>
        <property name="uri.var.depth" expression="$func:depth"/>
        <property name="uri.var.search" expression="$func:search"/>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.orderBy" expression="$func:orderBy"/>
        <property name="uri.var.lastUpdatedAt" expression="$func:lastUpdatedAt"/>
        <property name="uri.var.extensions" expression="$func:extensions"/>
        <script language="js">
            <![CDATA[
            var search = mc.getProperty('uri.var.search');
            var encodedValue = encodeURIComponent(search);
            mc.setProperty('uri.var.search', encodedValue);
            ]]>
        </script>
        <filter xpath="(not(get-property('uri.var.depth') = '' or (not(string(get-property('uri.var.depth'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'depth=',get-property('uri.var.depth'),'&amp;')"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.count') = '' or (not(string(get-property('uri.var.count'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'count=',get-property('uri.var.count'),'&amp;')"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.search') = '' or (not(string(get-property('uri.var.search'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'search=',get-property('uri.var.search'),'&amp;')"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.page') = '' or (not(string(get-property('uri.var.page'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'page=',get-property('uri.var.page'),'&amp;')"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.orderBy') = '' or (not(string(get-property('uri.var.orderBy'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'orderBy=',get-property('uri.var.orderBy'),'&amp;')"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.lastUpdatedAt') = '' or (not(string(get-property('uri.var.lastUpdatedAt'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'lastUpdatedAt=',get-property('uri.var.lastUpdatedAt'),'&amp;')"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.extensions') = '' or (not(string(get-property('uri.var.extensions'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'extensions=',get-property('uri.var.extensions'))"/>
            </then>
        </filter>
        <call>
            <endpoint>
                <http method="GET"
                      uri-template="{uri.var.apiUrl}assets/contact/lists?{uri.var.optionalParameters}"/>
            </endpoint>
        </call>
    </sequence>
</template>