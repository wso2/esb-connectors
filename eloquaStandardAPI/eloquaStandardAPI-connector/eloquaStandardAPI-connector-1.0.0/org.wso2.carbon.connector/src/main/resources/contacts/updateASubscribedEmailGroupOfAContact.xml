<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<template name="updateASubscribedEmailGroupOfAContact" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="name"
               description="The name of the email group."/>
    <parameter name="emailGroupId"
               description="The unique identifier of the email group."/>
    <parameter name="contactId"
               description="The unique identifier of the contact."/>
    <parameter name="newContactId"
               description="The unique identifier of the contact to update the contact id as it is."/>
    <parameter name="isSubscribed"
               description="Boolean value."/>
    <parameter name="updatedAt"
               description="The date time of updation."/>
    <parameter name="emailHeaderId" description="Id of the email header."/>
    <parameter name="emailFooterId" description="Id of the email footer."/>
    <parameter name="subscriptionLandingPageId"
               description="Integer value."/>
    <parameter name="unsubscriptionLandingPageId"
               description="Integer value."/>
    <parameter name="isVisibleInPublicSubscriptionList"
               description="Boolean value, to indicate the visibility to public subscription list."/>
    <parameter name="isVisibleInOutlookPlugin"
               description="Boolean value, to indicate the visibility to outlook plugin."/>
    <parameter name="emailIds" description="List of email ids."/>
    <parameter name="displayName" description="The name of the group visible for others."/>
    <parameter name="subscriptionListId" description="Id of the subscription list."/>
    <parameter name="unSubscriptionListId" description="Id of the unsubscription list."/>
    <parameter name="subscriptionListDataLookupId" description="Data lookup id of the subscription list."/>
    <parameter name="unSubscriptionListDataLookupId"
               description="Unsubscription Data lookup id."/>
    <sequence>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.emailGroupId" expression="$func:emailGroupId"/>
        <property name="uri.var.contactId" expression="$func:contactId"/>
        <property name="uri.var.newContactId" expression="$func:newContactId"/>
        <property name="uri.var.isSubscribed" expression="$func:isSubscribed"/>
        <property name="uri.var.updatedAt" expression="$func:updatedAt"/>
        <property name="uri.var.emailHeaderId" expression="$func:emailHeaderId"/>
        <property name="uri.var.emailFooterId" expression="$func:emailFooterId"/>
        <property name="uri.var.unsubscriptionLandingPageId" expression="$func:unsubscriptionLandingPageId"/>
        <property name="uri.var.subscriptionLandingPageId" expression="$func:subscriptionLandingPageId"/>
        <property name="uri.var.isVisibleInPublicSubscriptionList"
                  expression="$func:isVisibleInPublicSubscriptionList"/>
        <property name="uri.var.isVisibleInOutlookPlugin" expression="$func:isVisibleInOutlookPlugin"/>
        <property name="uri.var.displayName" expression="$func:displayName"/>
        <property name="uri.var.subscriptionListId" expression="$func:subscriptionListId"/>
        <property name="uri.var.unSubscriptionListId" expression="$func:unSubscriptionListId"/>
        <property name="uri.var.subscriptionListDataLookupId" expression="$func:subscriptionListDataLookupId"/>
        <property name="uri.var.unSubscriptionListDataLookupId" expression="$func:unSubscriptionListDataLookupId"/>
        <script language="js">
            <![CDATA[
            var name = mc.getProperty('uri.var.name');
            var encodedName = encodeURIComponent(name);
            mc.setProperty('uri.var.name', encodedName);
            ]]>
        </script>
        <payloadFactory media-type="json">
            <format>
                {
                "contactId":"$1",
                "isSubscribed":"$2",
                "emailGroup":
                {
                "name":"$3",
                "subscriptionLandingPageId":"$4",
                "unsubscriptionLandingPageId":"$5"
                }
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.newContactId')"/>
                <arg expression="get-property('uri.var.isSubscribed')"/>
                <arg expression="get-property('uri.var.name')"/>
                <arg expression="get-property('uri.var.subscriptionLandingPageId')"/>
                <arg expression="get-property('uri.var.unsubscriptionLandingPageId')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            var payload = mc.getPayloadJSON();
            var updatedAt = mc.getProperty('uri.var.updatedAt');
            var emailHeaderId = mc.getProperty('uri.var.emailHeaderId');
            var emailFooterId = mc.getProperty('uri.var.emailFooterId');
            var isVisibleInPublicSubscriptionList = mc.getProperty('uri.var.isVisibleInPublicSubscriptionList');
            var isVisibleInOutlookPlugin = mc.getProperty('uri.var.isVisibleInOutlookPlugin');
            var emailIds = mc.getProperty('uri.var.emailIds');
            var displayName = mc.getProperty('uri.var.displayName');
            var subscriptionListId = mc.getProperty('uri.var.subscriptionListId');
            var unSubscriptionListId = mc.getProperty('uri.var.unSubscriptionListId');
            var subscriptionListDataLookupId = mc.getProperty('uri.var.subscriptionListDataLookupId');
            var unSubscriptionListDataLookupId = mc.getProperty('uri.var.unSubscriptionListDataLookupId');

            if(emailHeaderId != null && emailHeaderId!="")
            {
            payload["emailGroup"]["emailHeaderId"] = emailHeaderId;
            }
            if(emailFooterId != null && emailFooterId!="")
            {
            payload["emailGroup"]["emailFooterId"] = emailFooterId;
            }
            if(isVisibleInPublicSubscriptionList != null && isVisibleInPublicSubscriptionList!="")
            {
            payload["emailGroup"]["isVisibleInPublicSubscriptionList"] = isVisibleInPublicSubscriptionList;
            }
            if(isVisibleInOutlookPlugin != null && isVisibleInOutlookPlugin!="")
            {
            payload["emailGroup"]["isVisibleInOutlookPlugin"] = isVisibleInOutlookPlugin;
            }
            if(emailIds != null && emailIds!="")
            {
            payload["emailGroup"]["emailIds"] = emailIds;
            }
            if(displayName != null && displayName!="")
            {
            payload["emailGroup"]["displayName"] = displayName;
            }
            if(subscriptionListId != null && subscriptionListId!="")
            {
            payload["emailGroup"]["subscriptionListId"] = subscriptionListId;
            }
            if(unSubscriptionListId != null && unSubscriptionListId!="")
            {
            payload["emailGroup"]["unSubscriptionListId"] = unSubscriptionListId;
            }
            if(subscriptionListDataLookupId != null && subscriptionListDataLookupId!="")
            {
            payload["emailGroup"]["subscriptionListDataLookupId"] = subscriptionListDataLookupId;
            }
            if(unSubscriptionListDataLookupId != null && unSubscriptionListDataLookupId!="")
            {
            payload["emailGroup"]["unSubscriptionListDataLookupId"] = unSubscriptionListDataLookupId;
            }
            if(updatedAt != null && updatedAt!="")
            {
            payload["updatedAt"] = updatedAt;
            }
            mc.setPayloadJSON(payload);
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="PUT"
                      uri-template="{uri.var.apiUrl}data/contact/{uri.var.contactId}/email/group/{uri.var.emailGroupId}/subscription"/>
            </endpoint>
        </call>
    </sequence>
</template>