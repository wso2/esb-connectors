<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<template name="updateAContact" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="contactId" description="Unique identifier of the contact."/>
    <parameter name="firstName"
               description="First name field of the contact to update a contact's first name as it is."/>
    <parameter name="lastName"
               description="Last name field of the account to update a contact's last name as it is."/>
    <parameter name="emailAddress" description="Email Id of the person of the contact."/>
    <parameter name="emailFormatPreference"
               description="The accepted values for Email Format Preference are :html, text and unspecified."/>
    <parameter name="isSubscribed"
               description="Boolean value. This identifies whether the contact is set to accept emails."/>
    <parameter name="isBounceback"
               description="When an email cannot be delivered, a non-deliverable message is created and the contact cannot be sent email once they are marked as having bounced."/>
    <parameter name="accountName" description="Name of the account associated to the contact record."/>
    <parameter name="accountId" description="The Identifier of the account associated to the contact record."/>
    <parameter name="title" description="The title related to the contact."/>
    <parameter name="subscriptionDate" description="Value of the subscription date in integer."/>
    <parameter name="unsubscriptionDate"
               description="The date in integer, on which the Contact subscription status is set to not accept emails."/>
    <parameter name="bouncebackDate" description="Value of the bounce back date in integer."/>
    <parameter name="fieldValues" description="A list of custom fields and their associated values."/>
    <parameter name="address1" description="This field will contain Street Number, Street Name, or maybe PO Box."/>
    <parameter name="address2"
               description="This field will contain Apartment, Floor, Suite, Bldg # or more specific information within Address1."/>
    <parameter name="address3" description="The will contain specific office/room in a building or apartment."/>
    <parameter name="city" description="The city, in which the address 1 is located."/>
    <parameter name="province" description="The province, in which the city is located."/>
    <parameter name="postalCode" description="The postal code of the province."/>
    <parameter name="country" description="The country of the address."/>
    <parameter name="businessPhone" description="The business contact phone number."/>
    <parameter name="mobilePhone" description="The mobile contact number."/>
    <parameter name="fax" description="The fax number."/>
    <parameter name="salesPerson" description="The sales person."/>
    <sequence>
        <property name="uri.var.contactId" expression="$func:contactId"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.emailAddress" expression="$func:emailAddress"/>
        <property name="uri.var.emailFormatPreference" expression="$func:emailFormatPreference"/>
        <property name="uri.var.isSubscribed" expression="$func:isSubscribed"/>
        <property name="uri.var.isBounceback" expression="$func:isBounceback"/>
        <property name="uri.var.accountName" expression="$func:accountName"/>
        <property name="uri.var.accountId" expression="$func:accountId"/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.subscriptionDate" expression="$func:subscriptionDate"/>
        <property name="uri.var.unsubscriptionDate" expression="$func:unsubscriptionDate"/>
        <property name="uri.var.bouncebackDate" expression="$func:bouncebackDate"/>
        <property name="uri.var.fieldValues" expression="$func:fieldValues"/>
        <property name="uri.var.address1" expression="$func:address1"/>
        <property name="uri.var.address2" expression="$func:address2"/>
        <property name="uri.var.address3" expression="$func:address3"/>
        <property name="uri.var.city" expression="$func:city"/>
        <property name="uri.var.province" expression="$func:province"/>
        <property name="uri.var.postalCode" expression="$func:postalCode"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.businessPhone" expression="$func:businessPhone"/>
        <property name="uri.var.mobilePhone" expression="$func:mobilePhone"/>
        <property name="uri.var.fax" expression="$func:fax"/>
        <property name="uri.var.salesPerson" expression="$func:salesPerson"/>
        <payloadFactory media-type="json">
            <format>
                {
                "emailAddress":"$1"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.emailAddress')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            var payload = mc.getPayloadJSON();
            var firstName = mc.getProperty('uri.var.firstName');
            var lastName = mc.getProperty('uri.var.lastName');
            var emailFormatPreference = mc.getProperty('uri.var.emailFormatPreference');
            var isSubscribed = mc.getProperty('uri.var.isSubscribed');
            var isBounceback = mc.getProperty('uri.var.isBounceback');
            var accountId = mc.getProperty('uri.var.accountId');
            var title = mc.getProperty('uri.var.title');
            var subscriptionDate = mc.getProperty('uri.var.subscriptionDate');
            var unsubscriptionDate = mc.getProperty('uri.var.unsubscriptionDate');
            var bouncebackDate = mc.getProperty('uri.var.bouncebackDate');
            var mobilePhone = mc.getProperty('uri.var.mobilePhone');
            var fax = mc.getProperty('uri.var.fax');
            var salesPerson = mc.getProperty('uri.var.salesPerson');
            var accountName = mc.getProperty('uri.var.accountName');
            var address1 = mc.getProperty('uri.var.address1');
            var address2 = mc.getProperty('uri.var.address2');
            var address3 = mc.getProperty('uri.var.address3');
            var city = mc.getProperty('uri.var.city');
            var province = mc.getProperty('uri.var.province');
            var postalCode = mc.getProperty('uri.var.postalCode');
            var country = mc.getProperty('uri.var.country');
            var businessPhone = mc.getProperty('uri.var.businessPhone');
            var fieldValues = mc.getProperty('uri.var.fieldValues');

            if(fieldValues != null && fieldValues!="" && fieldValues!="[]")
            {
            var testedFieldValues = new Array();
            var txt = '{"fieldValuesList":'+fieldValues+"}";
            var obj = eval("("+txt+")");
            for (i = 0; i < obj.fieldValuesList.length; ++i) {
                fieldObject = new Object();
                fieldValueObject = new Object();
                fieldObject = obj.fieldValuesList[i];
                for(var key in fieldObject) {
                    if(key == "id" && (fieldObject[key] == null || fieldObject[key]==""))
                    {
                    break;
                    }
                    if(fieldObject[key] != null && fieldObject[key]!="")
                    {
                    fieldValueObject[key] = fieldObject[key];
                    }
                }
                testedFieldValues[i] = fieldValueObject;
            }
            payload["fieldValues"] = testedFieldValues;
            }
            if(address1 != null && address1!="")
            {
            payload["address1"] = address1;
            }
            if(address2 != null && address2!="")
            {
            payload["address2"] = address2;
            }
            if(address3 != null && address3!="")
            {
            payload["address3"] = address3;
            }
            if(city != null && city!="")
            {
            payload["city"] = city;
            }
            if(province != null && province!="")
            {
            payload["province"] = province;
            }
            if(postalCode != null && postalCode!="")
            {
            payload["postalCode"] = postalCode;
            }
            if(country != null && country!="")
            {
            payload["country"] = country;
            }
            if(businessPhone != null && businessPhone!="")
            {
            payload["businessPhone"] = businessPhone;
            }
            if(firstName != null && firstName!="")
            {
            payload["firstName"] = firstName;
            }
            if(lastName != null && lastName!="")
            {
            payload["lastName"] = lastName;
            }
            if(emailFormatPreference != null && emailFormatPreference!="")
            {
            payload["emailFormatPreference"] = emailFormatPreference;
            }
            if(isSubscribed != null && isSubscribed!="")
            {
            payload["isSubscribed"] = isSubscribed;
            }
            if(isBounceback != null && isBounceback!="")
            {
            payload["isBounceback"] = isBounceback;
            }
            if(subscriptionDate != null && subscriptionDate!="")
            {
            payload["subscriptionDate"] = subscriptionDate;
            }
            if(unsubscriptionDate != null && unsubscriptionDate!="")
            {
            payload["unsubscriptionDate"] = unsubscriptionDate;
            }
            if(bouncebackDate != null && bouncebackDate!="")
            {
            payload["bouncebackDate"] = bouncebackDate;
            }
            if(mobilePhone != null && mobilePhone!="")
            {
            payload["mobilePhone"] = mobilePhone;
            }
            if(fax != null && fax!="")
            {
            payload["fax"] = fax;
            }
            if(title != null && title!="")
            {
            payload["title"] = title;
            }
            if(accountId != null && accountId!="")
            {
            payload["accountId"] = accountId;
            }
            mc.setPayloadJSON(payload);
            ]]>
        </script>
        <property name="Content-Type" value="application/json" scope="transport"/>
        <call>
            <endpoint>
                <http method="PUT"
                      uri-template="{uri.var.apiUrl}data/contact/{uri.var.contactId}"/>
            </endpoint>
        </call>
    </sequence>
</template>