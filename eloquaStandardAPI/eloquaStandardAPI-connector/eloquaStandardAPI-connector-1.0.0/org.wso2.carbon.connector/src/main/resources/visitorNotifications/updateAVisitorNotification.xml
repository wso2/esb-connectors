<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<template name="updateAVisitorNotification" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="visitorId" description="Unique identifier of the visitor."/>
    <parameter name="name" description="The name of the visitor to update the name as it is."/>
    <parameter name="userId" description="Unique identifier of the user."/>
    <parameter name="isEnabled" description="Boolean value, to enable the visitor."/>
    <parameter name="emailAddress" description="Email address of the visitor."/>
    <parameter name="isRestrictedToSchedule" description="Boolean value, to set the permission to schedule."/>
    <parameter name="ruleLogicType"
               description="It can be 'multipleComparisonAnd' or 'multipleComparisonOr' or 'advancedLogicComparison'."/>
    <parameter name="visitorMustBeMappedToContact"
               description="Boolean value, to indicate the status of contact mapping."/>
    <parameter name="ruleIds" description="List of identifiers of rules."/>
    <sequence>
        <property name="uri.var.visitorId" expression="$func:visitorId"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.userId" expression="$func:userId"/>
        <property name="uri.var.isEnabled" expression="$func:isEnabled"/>
        <property name="uri.var.emailAddress" expression="$func:emailAddress"/>
        <property name="uri.var.isRestrictedToSchedule" expression="$func:isRestrictedToSchedule"/>
        <property name="uri.var.ruleLogicType" expression="$func:ruleLogicType"/>
        <property name="uri.var.visitorMustBeMappedToContact" expression="$func:visitorMustBeMappedToContact"/>
        <property name="uri.var.ruleIds" expression="$func:ruleIds"/>
        <script language="js">
            <![CDATA[
            var name = mc.getProperty('uri.var.name');
            var encodedName = encodeURIComponent(name);
            mc.setProperty('uri.var.name', encodedName);
            ]]>
        </script>
        <payloadFactory media-type="json">
            <format>
                {
                "name":"$1",
                "userId":"$2"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.name')"/>
                <arg expression="get-property('uri.var.userId')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            var payload = mc.getPayloadJSON();
            var isEnabled = mc.getProperty('uri.var.isEnabled');
            var emailAddress = mc.getProperty('uri.var.emailAddress');
            var isRestrictedToSchedule = mc.getProperty('uri.var.isRestrictedToSchedule');
            var ruleLogicType = mc.getProperty('uri.var.ruleLogicType');
            var visitorMustBeMappedToContact = mc.getProperty('uri.var.visitorMustBeMappedToContact');
            var ruleIds = mc.getProperty('uri.var.ruleIds');

            if(isEnabled != null && isEnabled!="")
            {
            payload["isEnabled"] = isEnabled;
            }
            if(emailAddress != null && emailAddress!="")
            {
            payload["emailAddress"] = emailAddress;
            }
            if(isRestrictedToSchedule != null && isRestrictedToSchedule!="")
            {
            payload["isRestrictedToSchedule"] = isRestrictedToSchedule;
            }
            if(ruleLogicType != null && ruleLogicType!="")
            {
            payload["ruleLogicType"] = ruleLogicType;
            }
            if(visitorMustBeMappedToContact != null && visitorMustBeMappedToContact!="")
            {
            payload["visitorMustBeMappedToContact"] = visitorMustBeMappedToContact;
            }
            if(ruleIds != null && ruleIds!="")
            {
            var ruleIdArray = ruleIds.replace("[","").replace("]","").replace("\"","").split(",");
            var testedRuleIds = new Array();
            for (i = 0; i < ruleIdArray.length; ++i) {
                if(ruleIdArray[i] != null && ruleIdArray[i]!="")
                    {
                        testedRuleIds[i] = ruleIdArray[i];
                    }
            }
            payload["ruleIds"] = testedRuleIds;
            }
            mc.setPayloadJSON(payload);
            ]]>
        </script>
        <property name="Content-Type" value="application/json" scope="transport"/>
        <call>
            <endpoint>
                <http method="PUT"
                      uri-template="{uri.var.apiUrl}settings/notification/visitor/{uri.var.visitorId}"/>
            </endpoint>
        </call>
    </sequence>
</template>