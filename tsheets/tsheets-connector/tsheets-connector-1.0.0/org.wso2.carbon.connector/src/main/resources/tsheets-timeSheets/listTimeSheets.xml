<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="listTimeSheets" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="ids" description="Integer.Only timesheets with an id set to one of these values will be returned." />
   <parameter name="startDate" description="String. Any timesheets with a date falling on or after this date will be returned." />
   <parameter name="endDate" description="String. Any timesheets with a date falling on or before this date will be returned." />
   <parameter name="jobCodeIds"
      description="Integer. A comma-separated string of jobcode ids. Only time recorded against these jobcodes or one of their children will be returned." />
   <parameter name="userIds"
      description="Integer. A comma-separated list of user ids. Only timesheets linked to these users will be returned." />
   <parameter name="groupIds"
      description="Integer. A comma-separated list of group ids. Only timesheets linked to users from these groups will be returned." />
   <parameter name="onTheClock" description="String.Whether user is currently working on the timesheets or not." />
   <parameter name="jobCodeType" description="String. Only timesheets linked to a jobcode of the given type are returned." />
   <parameter name="modifiedBefore" description="String. Only timesheets modified before this date/time will be returned." />
   <parameter name="modifiedSince" description="String. Only timesheets modified since this date/time will be returned. " />
   <parameter name="perPage" description="Integer. Represents how many results you'd like to retrieve per request. " />
   <parameter name="page" description="Integer.Represents the page of results you'd like to retrieve. " />
   <sequence>
      <property name="uri.var.ids" expression="$func:ids" />
      <property name="uri.var.startDate" expression="$func:startDate" />
      <property name="uri.var.endDate" expression="$func:endDate" />
      <property name="uri.var.jobCodeIds" expression="$func:jobCodeIds" />
      <property name="uri.var.userIds" expression="$func:userIds" />
      <property name="uri.var.groupIds" expression="$func:groupIds" />
      <property name="uri.var.onTheClock" expression="$func:onTheClock" />
      <property name="uri.var.jobCodeType" expression="$func:jobCodeType" />
      <property name="uri.var.modifiedBefore" expression="$func:modifiedBefore" />
      <property name="uri.var.modifiedSince" expression="$func:modifiedSince" />
      <property name="uri.var.perPage" expression="$func:perPage" />
      <property name="uri.var.page" expression="$func:page" />
      <!--Construct endpoint with optional url parameters -->
      <script language="js">
      <![CDATA[
        var urlQuery="";
        var ids = mc.getProperty("uri.var.ids");
        var startDate = mc.getProperty("uri.var.startDate");
        var endDate = mc.getProperty("uri.var.endDate");
        var jobCodeIds = mc.getProperty("uri.var.jobCodeIds");
        var onTheClock = mc.getProperty("uri.var.onTheClock");
        var jobCodeType = mc.getProperty("uri.var.jobCodeType");
        var groupIds = mc.getProperty("uri.var.groupIds");
        var modifiedBefore = mc.getProperty("uri.var.modifiedBefore");
        var modifiedSince = mc.getProperty("uri.var.modifiedSince");
        var perPage = mc.getProperty("uri.var.perPage");
        var page = mc.getProperty("uri.var.page");
        var userIds = mc.getProperty("uri.var.userIds");     
        if (ids != null && ids != ""){
           urlQuery += 'ids=' + encodeURIComponent(ids) + '&';
        }
        if (startDate != null && startDate != ""){
           urlQuery += 'start_date=' + startDate + '&';
        }     
        if (endDate != null && endDate != ""){
           urlQuery += 'end_date=' + endDate + '&';
        }
        
        if (jobCodeIds != null && jobCodeIds != ""){
           urlQuery += 'jobcode_ids=' + encodeURIComponent(jobCodeIds) + '&';
        }
        if (groupIds != null && groupIds != ""){
           urlQuery += 'group_ids=' + encodeURIComponent(groupIds) + '&';
        }
        if (onTheClock != null && onTheClock != ""){
           urlQuery += 'on_the_clock=' + onTheClock + '&';
        }
        if (jobCodeType != null && jobCodeType != ""){
           urlQuery += 'jobcode_type=' + jobCodeType + '&';
        }
        if (modifiedBefore != null && modifiedBefore != ""){
           urlQuery += 'modified_before=' + encodeURIComponent(modifiedBefore) + '&';
        }
        if (modifiedSince != null && modifiedSince != ""){
           urlQuery += 'modified_since=' + encodeURIComponent(modifiedSince) + '&';
        }
        if (perPage != null && perPage != ""){
           urlQuery += 'per_page=' + perPage + '&';
        }
        if (page != null && page != ""){
           urlQuery += 'page=' + page + '&';
        }
        if (userIds != null && userIds != ""){
           urlQuery += 'user_ids=' + encodeURIComponent(userIds) + '&';
        }      
        // Prefix the urlQuery with '?' and remove the trailing '&'
        if (urlQuery != "") {
           urlQuery = '?' + urlQuery.substring(0, urlQuery.length-1);
           mc.setProperty('uri.var.urlQuery', urlQuery);    
        } 
      ]]>
      </script>
      <call>
         <endpoint>
            <http method="get" uri-template="{uri.var.apiUrl}/timesheets{uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!-- Remove custom Headers from the API Response -->
      <header name="Vary" action="remove" scope="transport" />
   </sequence>
</template>