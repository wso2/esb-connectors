<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="createRegistrant" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="webinarKey" description="Unique numeric key to webinar"/>
    <parameter name="firstName" description="First name of the registrant."/>
    <parameter name="lastName" description="Last name of the registrant."/>
    <parameter name="email" description="Email of the registrant."/>
    <parameter name="address" description="Address of the registrant."/>
    <parameter name="city" description="City of the registrant."/>
    <parameter name="state" description="State of the registrant."/>
    <parameter name="zipCode" description="Zipcode of the registrant."/>
    <parameter name="country" description="Country of the registrant."/>
    <parameter name="phone" description="Phone number of the registrant."/>
    <parameter name="timeZone" description="Registrant's timezone."/>
    <parameter name="industry" description="Registrant's work industry."/>
    <parameter name="organization" description="Registrant's work organization."/>
    <parameter name="jobTitle" description="Registrant's  job title."/>
    <parameter name="purchasingTimeFrame" description="Time frame for the purchasing."/>
    <parameter name="roleInPurchaseProcess" description="Role of the purchase process."/>
    <parameter name="numberOfEmployees" description="Number of employees in the registrant's organization."/>
    <parameter name="status" description="Status of the registrant."/>
    <parameter name="questionsAndComments" description="Questions and Comments for the registrant."/>
    <parameter name="responses" description="Responses for the quetions and comments."/>
    <sequence>
        <property name="uri.var.webinarKey" expression="$func:webinarKey"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.address" expression="$func:address"/>
        <property name="uri.var.city" expression="$func:city"/>
        <property name="uri.var.state" expression="$func:state"/>
        <property name="uri.var.zipCode" expression="$func:zipCode"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.phone" expression="$func:phone"/>
        <property name="uri.var.timeZone" expression="$func:timeZone"/>
        <property name="uri.var.industry" expression="$func:industry"/>
        <property name="uri.var.organization" expression="$func:organization"/>
        <property name="uri.var.jobTitle" expression="$func:jobTitle"/>
        <property name="uri.var.purchasingTimeFrame" expression="$func:purchasingTimeFrame"/>
        <property name="uri.var.roleInPurchaseProcess" expression="$func:roleInPurchaseProcess"/>
        <property name="uri.var.numberOfEmployees" expression="$func:numberOfEmployees"/>
        <property name="uri.var.status" expression="$func:status"/>
        <property name="uri.var.questionsAndComments" expression="$func:questionsAndComments"/>
        <property name="uri.var.responses" expression="$func:responses"/>
        <payloadFactory media-type="json">
            <format>
                {
                "firstName" : "$1",
                "lastName" : "$2",
                "email" : "$3"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.firstName')"/>
                <arg expression="get-property('uri.var.lastName')"/>
                <arg expression="get-property('uri.var.email')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
                var address = mc.getProperty('uri.var.address');
                var city = mc.getProperty('uri.var.city');
                var state = mc.getProperty('uri.var.state');
                var zipCode = mc.getProperty('uri.var.zipCode');
                var country = mc.getProperty('uri.var.country');
                var phone = mc.getProperty('uri.var.phone');
                var timeZone = mc.getProperty('uri.var.timeZone');
                var industry = mc.getProperty('uri.var.industry');
                var organization = mc.getProperty('uri.var.organization');
                var jobTitle = mc.getProperty('uri.var.jobTitle');
                var purchasingTimeFrame = mc.getProperty('uri.var.purchasingTimeFrame');
				var roleInPurchaseProcess = mc.getProperty('uri.var.roleInPurchaseProcess');
				var numberOfEmployees = mc.getProperty('uri.var.numberOfEmployees');
				var status = mc.getProperty('uri.var.status');
                var questionsAndComments = mc.getProperty('uri.var.questionsAndComments');
				var responses = mc.getProperty('uri.var.responses');                
                
                payload  = mc.getPayloadJSON();
                
                 if (address != null && address!= ""){
                	payload.address = address;
                }
                
                if (city != null && city!= ""){
                	payload.city = city;
                }
                
                 if (state != null && state!= ""){
                	payload.state = state;
                }
                
                 if (zipCode != null && zipCode!= ""){
                	payload.zipCode = zipCode;
                }
                
                if (country != null && country!= ""){
                	payload.country = country;
                }
                
                 if (phone != null && phone!= ""){
                	payload.phone = phone;
                }
                
                 if (timeZone != null && timeZone!= ""){
                	payload.timeZone = timeZone;
                }
                
                 if (industry != null && industry!= ""){
                	payload.industry = industry;
                }
                
                 if (organization != null && organization!= ""){
                	payload.organization = organization;
                }
                
                 if (jobTitle != null && jobTitle!= ""){
                	payload.jobTitle = jobTitle;
                }
                
                if (purchasingTimeFrame != null && purchasingTimeFrame!= ""){
                	payload.purchasingTimeFrame = purchasingTimeFrame;
                }
                
                if (roleInPurchaseProcess != null && roleInPurchaseProcess!= ""){
                	payload.roleInPurchaseProcess = roleInPurchaseProcess;
                }
                
                if (numberOfEmployees != null && numberOfEmployees!= ""){
                	payload.numberOfEmployees = numberOfEmployees;
                }
                
                if (status != null && status!= ""){
                	payload.status = status;
                }
                
                if (questionsAndComments != null && questionsAndComments!= ""){
                	payload.questionsAndComments = questionsAndComments;
                }
                
                if (responses != null && responses!= ""){
                	payload.responses = eval('(' + responses + ')');
                }
               	mc.setPayloadJSON(payload);
                
          ]]>
        </script>
        <property name="messageType" value="application/json" scope="axis2"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/organizers/{uri.var.organizerKey}/webinars/{uri.var.webinarKey}/registrants"/>
            </endpoint>
        </call>
        <!-- Removing custom headers -->
        <header name="Content-Language" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Headers" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Origin" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Access-Control-Max-Age" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Methods" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
    </sequence>
</template>