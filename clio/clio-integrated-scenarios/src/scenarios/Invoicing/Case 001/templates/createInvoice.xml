<?xml version="1.0" encoding="UTF-8"?>
<!-- This template sends emails and/or text messages to recipients. -->
<template xmlns="http://ws.apache.org/ns/synapse" name="createInvoice">

	<!-- ZohoBooks parameters -->
	<parameter name="zohobooks.apiUrl" description="Base endpoint URL of ZohoBooks API." />
    <parameter name="zohobooks.authToken" description="OAuth Token to read and manipulate data of ZohoBooks account." />
    <parameter name="zohobooks.organizationId" description="ID of the organization to which the ZohoBooks Account belongs." />
	<parameter name="zohobooks.customerId" description="ID of the customer the invoice has to be created." />
	<parameter name="zohobooks.contactPersons" description="Array of contact person(s) for whom invoice has to be sent." />
	<parameter name="zohobooks.billIssuedDate" description="Issued bill date." />
	<parameter name="zohobooks.billDueAt" description="Payment due date for the bill." />
	<parameter name="zohobooks.itemName" description="Payment due date for the bill." />
	<parameter name="zohobooks.itemDescription" description="Payment due date for the bill." />
	<parameter name="zohobooks.billTotal" description="Bill total." />
	
    <sequence>
        <!-- ZohoBooks properties. -->
		<property name="uri.var.zohobooks.apiUrl" expression="$func:zohobooks.apiUrl" />
        <property name="uri.var.zohobooks.authToken" expression="$func:zohobooks.authToken" />
        <property name="uri.var.zohobooks.organizationId" expression="$func:zohobooks.organizationId" />
		<property name="uri.var.zohobooks.customerId" expression="$func:zohobooks.customerId" />
		<property name="uri.var.zohobooks.contactPersons" expression="$func:zohobooks.contactPersons" />
		<property name="uri.var.zohobooks.billIssuedDate" expression="$func:zohobooks.billIssuedDate" />
		<property name="uri.var.zohobooks.billDueAt" expression="$func:zohobooks.billDueAt" />
		<property name="uri.var.zohobooks.itemName" expression="$func:zohobooks.itemName" />
		<property name="uri.var.zohobooks.itemDescription" expression="$func:zohobooks.itemDescription" />
		<property name="uri.var.zohobooks.billTotal" expression="$func:zohobooks.billTotal" />
		
        <!-- START: Create an item in ZohoBooks - Executed only if both authToken and organizationId of ZohoBooks is sent. -->
        <filter xpath="boolean(get-property('uri.var.zohobooks.authToken')) and boolean(get-property('uri.var.zohobooks.organizationId'))">
            <then>
				<!-- Create an item with the bill information. -->
				<zohobooks.init>
					<apiUrl>{$ctx:uri.var.zohobooks.apiUrl}</apiUrl>
					<authToken>{$ctx:uri.var.zohobooks.authToken}</authToken>
					<organizationId>{$ctx:uri.var.zohobooks.organizationId}</organizationId>
				</zohobooks.init>
				<zohobooks.createItem>
					<itemName>{$ctx:uri.var.zohobooks.itemName}</itemName>
					<description>{$ctx:uri.var.zohobooks.itemDescription}</description>
					<rate>{$ctx:uri.var.zohobooks.billTotal}</rate>
				</zohobooks.createItem>
                <sequence key="removeResponseHeaders" />
				
				<!-- Extract the item details. -->
                <property name="zohoBooks.itemId" expression="json-eval($.item.item_id)" />
				<property name="zohoBooks.itemName" expression="json-eval($.item.name)" />
				<property name="zohoBooks.itemDescription" expression="json-eval($.item.description)" />
				
				<!--Create the line items array to be passed to createInvoice method-->
				<property name="clio.invoiceItems" expression="fn:concat('[{&quot;item_id&quot;:&quot;',get-property('zohoBooks.itemId'),'&quot;,&quot;name&quot;:&quot;',get-property('zohoBooks.itemName'),'&quot;,&quot;description&quot;:&quot;',get-property('zohoBooks.itemDescription'),'&quot;,&quot;item_total&quot;:',get-property('clio.billTotal'),'}]')" />
				
                <!-- START: Proceed to create the invoice only if the item was successfully created. -->
                <filter source="boolean(get-property('zohoBooks.itemId'))" regex="false">
                    <then>
                        <!-- Failure case: Append an error message to be sent to the user. -->
                        <property name="id" expression="fn:concat('clio_matterDisplayId:', get-property('clio.matterDisplayId'))" />
						<property name="errorResponse" expression="json-eval($)" />
						<call-template target="responseHandlerTemplate">
							<with-param name="activity" value="zohobooks_createItem" />
							<with-param name="id" value="{$ctx:id}" />
							<with-param name="status" value="Failure" />
							<with-param name="message" value="{$ctx:errorResponse}" />
						</call-template>
                    </then>
                    <else>					
						<property name="uri.var.zohoBooks.contactPersonsId" expression="fn:concat('[&quot;',get-property('uri.var.zohobooks.contactPersons'),'&quot;]')" />
					
					    <!-- Create the invoice with the created item. -->
						<zohobooks.init>
							<apiUrl>{$ctx:uri.var.zohobooks.apiUrl}</apiUrl>
							<authToken>{$ctx:uri.var.zohobooks.authToken}</authToken>
							<organizationId>{$ctx:uri.var.zohobooks.organizationId}</organizationId>
						</zohobooks.init>
						<zohobooks.createInvoice>
							<customerId>{$ctx:uri.var.zohobooks.customerId}</customerId>
							<contactPersons>{$ctx:uri.var.zohoBooks.contactPersonsId}</contactPersons>
							<date>{$ctx:uri.var.zohobooks.billIssuedDate}</date>
							<dueDate>{$ctx:uri.var.zohobooks.billDueAt}</dueDate>
							<lineItems>{$ctx:clio.invoiceItems}</lineItems>
							<send>true</send>
							<ignoreAutoNumberGeneration>false</ignoreAutoNumberGeneration>
						</zohobooks.createInvoice>
                        <sequence key="removeResponseHeaders" />
                        
						<property name="zohoBooks.invoiceId" expression="json-eval($.invoice.invoice_id)" />
						<property name="zohoBooks.message" expression="json-eval($.message)" />
				  
						<property name="id" expression="fn:concat('zohobooks_invoiceId:', get-property('zohoBooks.invoiceId'))" />
				  			 
						<!-- START: If invoiceId doesn't exist, then send the descriptive message sent by the API itself to the user. -->
						<filter source="boolean(get-property('zohoBooks.invoiceId'))" regex="false">
							<then>
								<property name="message" expression="get-property('zohoBooks.message')" />
								<call-template target="responseHandlerTemplate">
									<with-param name="activity" value="zohobooks_createInvoice" />
									<with-param name="id" value="{$ctx:id}" />
									<with-param name="status" value="Failure" />
									<with-param name="message" value="{$ctx:message}" />
								</call-template>
							</then>
							<else>
								<call-template target="responseHandlerTemplate">
									<with-param name="activity" value="zohobooks_createInvoice" />
									<with-param name="id" value="{$ctx:id}" />
									<with-param name="status" value="Success" />
									<with-param name="message" value="The invoice has been generated successfully and emailed to the respective contact." />
								</call-template>		
							</else>
						</filter>
						<!-- END: If invoiceId doesn't exist, then send the descriptive message sent by the API itself to the user. -->
                    </else>
                </filter>
				<!-- END: Proceed to create the invoice only if the item was successfully created. -->
            </then>
        </filter>
        <!-- END: Create an item in ZohoBooks - Executed only if both authToken and organizationId of ZohoBooks is sent. -->
    </sequence>
</template>