<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse" name="clio_sendNotificationsToAssignersOnTasksCompletion"
   transports="https,http" statistics="disable" trace="disable" startOnLoad="true">
   <target>
      <inSequence onError="faultHandlerSeq">
         <!-- Clio parameters. -->
         <property name="clio.apiUrl" expression="json-eval($.clioApiUrl)" />
         <property name="clio.accessToken" expression="json-eval($.clioAccessToken)" />
         <property name="clio.complete" expression="json-eval($.clioTaskComplete)" />

         <!-- Gmail parameters. -->
         <property name="gmail.username" expression="json-eval($.gmailUsername)" />
         <property name="gmail.oAuthAccessToken" expression="json-eval($.gmailOauthAccessToken)" />

         <!-- Properties required by faultHandler. -->               
         <property name="activityName" value="clio_sendTaskNotificationViaGmail" scope="operation" />
         <property name="processName" value="clio_sendNotificationsToAssignersOnTasksCompletionByMail" scope="operation" />

         <!-- Operation Properties. -->
         <property name="taskIdsCount" expression="count(//clioTaskIds)" scope="operation" />
         <property name="taskIdsIndex" value="0" scope="operation" />

		 <filter source="get-property('operation', 'taskIdsCount')" regex="0.0">
            <then>
               <payloadFactory media-type="json">
                  <format>
					 {
						 "Response":{
							 "activity":"clio_sendInvoiceDetailsToClients",
							 "activityResponse":"clioTaskIds array is empty - No entries to process."
						 }
                     }
				  </format>
               </payloadFactory>
               <respond />
            </then>
		 </filter>
		 
         <!--FOR EACH clioTaskIds : BEGIN -->
         <iterate continueParent="true" id="taskIdsVal" expression="//clioTaskIds" sequential="true">
            <target>
               <sequence>
                  <property name="clio.taskId" expression="//clioTaskIds/text()" />

                  <!-- Check task as completed in Clio. -->
                  <clio.init>
                     <apiUrl>{$ctx:clio.apiUrl}</apiUrl>
                     <accessToken>{$ctx:clio.accessToken}</accessToken>
                  </clio.init>
                  <clio.getTask>
                     <taskId>{$ctx:clio.taskId}</taskId>
                  </clio.getTask>
                  <sequence key="removeResponseHeaders" />

                  <property name="clio.taskStatus" expression="json-eval($.task.complete)" />
                  <property name="clio.taskId" expression="json-eval($.task.id)" />
                  <property name="id" expression="fn:concat('clio_taskId:', get-property('clio.taskId'))" />

                  <!--START: Proceed to send the mail only if the task is completed in Clio. -->
                  <filter source="boolean(get-property('clio.taskId'))" regex="false">
                     <then>
                        <!-- Failure case: Append an error message to be sent to the user. -->
                        <call-template target="responseHandlerTemplate">
                           <with-param name="activity" value="clio_getTask" />
                           <with-param name="id" value="{$ctx:id}" />
                           <with-param name="status" value="Failure" />
                           <with-param name="message" value="Task details cannot be retrieved." />
                        </call-template>
                     </then>
                     <else>
                        <!-- START: Proceed to complete the task only if it is not completed yet. -->
                        <filter source="get-property('clio.taskStatus')" regex="true">
                           <then>
                              <!-- Failure case: Append an error message to be sent to the user. -->
                        <call-template target="responseHandlerTemplate">
                                 <with-param name="activity" value="clio_checkTaskStatus" />
                                 <with-param name="id" value="{$ctx:id}" />
                                 <with-param name="status" value="Failure" />
                                 <with-param name="message" value="Task is already completed in Clio." />
                              </call-template>
                           </then>
                           <else>
                              <!-- Update tasks as completed in Clio. -->
                              <clio.init>
                                 <apiUrl>{$ctx:clio.apiUrl}</apiUrl>
                                 <accessToken>{$ctx:clio.accessToken}</accessToken>
                              </clio.init>
                              <clio.updateTask>
                                 <taskId>{$ctx:clio.taskId}</taskId>
                                 <complete>true</complete>
                              </clio.updateTask>
                              <sequence key="removeResponseHeaders" />

                              <property name="clio.taskIdUpdatedStatus" expression="json-eval($.task.complete)" />
                              <property name="clio.updatedTaskId" expression="json-eval($.task.id)" />

                              <!-- START: Proceed to send the mail only if the update was successful -->
                              <filter source="get-property('clio.taskIdUpdatedStatus')" regex="false">
                                 <then>
                                    <!-- Failure case: Append an error message to be sent to the user. -->
                                    <property name="errorResponse" expression="json-eval($)" />
                                    <call-template target="responseHandlerTemplate">
                                       <with-param name="activity" value="clio_updateTask" />
                                       <with-param name="id" value="{$ctx:id}" />
                                       <with-param name="status" value="Failure" />
                                       <with-param name="message" value="{$ctx:errorResponse}" />
                                    </call-template>
                                 </then>
                                 <else>

                                    <!-- If complete status was updated as 'true', extract the task details. -->
                                    <property name="clio.taskAssignerEmail" expression="json-eval($.task.assigner.email)" />
                                    <property name="clio.taskAssigneeEmail" expression="json-eval($.task.assignee.email)" />
                                    <property name="clio.taskAssigneeName" expression="json-eval($.task.assignee.name)" />
                                    <property name="clio.taskAssignerName" expression="json-eval($.task.assigner.name)" />
                                    <property name="clio.taskId" expression="json-eval($.task.id)" />
                                    <property name="clio.taskName" expression="json-eval($.task.name)" />
                                    <property name="clio.description" expression="json-eval($.task.description)" />
                                    <property name="clio.priority" expression="json-eval($.task.priority)" />
                                    <property name="clio.matter" expression="json-eval($.task.matter)" />
                                    <filter source="get-property('clio.matter')" regex="null">
                                       <then>
                                          <property name="clio.matter" value="Not Specified" />
                                       </then>
                                    </filter>
                                    <property name="clio.completedAt" expression="json-eval($.task.completed_at)" />

                                    <!-- Call responseHandler template -->
                                    <call-template target="responseHandlerTemplate">
                                       <with-param name="activity" value="clio_updateTask" />
                                       <with-param name="id" value="{$ctx:clio.taskId}" />
                                       <with-param name="status" value="Success" />
                                       <with-param name="message" value="The task was completed successfully." />
                                    </call-template>

                                    <!-- Build the message body -->
                                    <payloadFactory media-type="json">
                                       <format>{
                                          "mailSubject": "Clio Task - $10",
                                          "mailContent": "Hi $1,\n\nPlease be informed that the following task has been completed in Clio.\n\nTask ID:      $2\nDescription:  $3\nPriority:     $4\nAssignee:     $5 ($6)\nMatter:       $7\nCompleted on: $8 at $9\n\nPlease do not respond to this mail as it was auto-generated by thesystem."
                                          }
                                       </format>
                                       <args>
                                          <arg expression="get-property('clio.taskAssignerName')" />
                                          <arg expression="get-property('clio.taskId')" />
                                          <arg expression="get-property('clio.description')" />
                                          <arg expression="get-property('clio.priority')" />
                                          <arg expression="get-property('clio.taskAssigneeName')" />
                                          <arg expression="get-property('clio.taskAssigneeEmail')" />
                                          <arg expression="get-property('clio.matter')" />
                                          <arg expression="fn:substring-before(get-property('clio.completedAt'), 'T')" />
                                          <arg
                                             expression="fn:substring-after(fn:substring-before(get-property('clio.completedAt'),'+'), 'T')" />
                                          <arg expression="get-property('clio.taskName')" />
                                       </args>
                                    </payloadFactory>

                                    <!-- Build the message body -->
                                    <property name="gmail.mailSubject" expression="json-eval($.mailSubject)" />
                                    <property name="gmail.mailContent" expression="json-eval($.mailContent)" />

                                    <property name="gmail.responseIds" expression="fn:concat('clio_taskId:', get-property('clio.taskId'))" />

                                    <!-- Send email notifications to responders. -->
                                    <call-template target="sendNotifications">
                                       <with-param name="gmail.username" value="{$ctx:gmail.username}" />
                                       <with-param name="gmail.oAuthAccessToken" value="{$ctx:gmail.oAuthAccessToken}" />
                                       <with-param name="gmail.subject" value="{$ctx:gmail.mailSubject}" />
                                       <with-param name="gmail.toRecipients" value="{$ctx:clio.taskAssignerEmail}" />
                                       <with-param name="gmail.textContent" value="{$ctx:gmail.mailContent}" />
                                       <with-param name="gmail.responseIds" value="{$ctx:gmail.responseIds}" />
                                    </call-template>

                                 </else>
                              </filter>
						      <!-- START: Proceed to send the mail only if the update was successful -->
                           </else>
                        </filter>
						<!-- END: Proceed to complete the task only if it is not completed yet. -->
                     </else>
                  </filter>
                  <!--END: Proceed to send the mail only if the task is completed in Clio. -->
				  
				  <!-- Increment the taskIdsIndex count -->
                  <property name="taskIdsIndex" expression="get-property('operation','taskIdsIndex') + 1"
                     scope="operation" />

				 <filter xpath="get-property('operation', 'taskIdsCount') = get-property('operation', 'taskIdsIndex')">
					<then>
					   <loopback />
					</then>
				 </filter>

               </sequence>
            </target>
         </iterate>

      </inSequence>
      <outSequence>
         <payloadFactory media-type="json">
            <format>
			   {
				   "Response":{
					   "process":"clio_sendNotificationsToAssignersOnTasksCompletion",
					   "activityResponse":[$1]
				   }
               }
            </format>
            <args>
               <arg expression="get-property('operation','responseString')" />
            </args>
         </payloadFactory>
         <property name="messageType" value="application/json" scope="axis2" />
         <send />
      </outSequence>
   </target>
   <description />
</proxy>