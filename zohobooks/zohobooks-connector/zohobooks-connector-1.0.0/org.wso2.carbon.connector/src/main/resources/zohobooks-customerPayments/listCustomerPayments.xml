<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="listCustomerPayments" xmlns="http://ws.apache.org/ns/synapse">
   <!-- API Documentation URL - https://www.zoho.com/books/api/v3/customerpayments/#List-customer-payments-->
   <parameter name="customerName" description="Search payments by the exact customer name." />
   <parameter name="customerNameStartswith" description="Search payments by a regex of the starting letter or letters of the customer name." />
   <parameter name="customerNameContains" description="Search payments by a regex containing any part of the customer name." />
   <parameter name="referenceNumber" description="Search payments by reference number." />
   <parameter name="referenceNumberStartswith" description="Search payments by a regex of the starting letter or letters of the reference number." />
   <parameter name="referenceNumberContains" description="Search payments by a regex containing the any part of the reference number." />
   <parameter name="date" description="Search payments by payment made date." />
   <parameter name="dateStart" description="Search payments by payment made date which falls on a date range." />
   <parameter name="dateEnd" description="Search payments by payment made date." />
   <parameter name="dateBefore" description="Search payments by payment made dates which falls before the date given." />
   <parameter name="dateAfter" description="Search payments by payment made dates which falls after the date given.." />
   <parameter name="amount" description="Search payments by payment amount." />
   <parameter name="amountLessThan" description="Search payments by payment amount which is less than the given amount." />
   <parameter name="amountLessEqual" description="Search payments by payment amount which is less than or equal the given amount." />
   <parameter name="amountGreaterThan" description="Search payments by payment amount which is greater than the given amount ." />
   <parameter name="amountGreaterEqual" description="Search payments by payment amount which is greater than or equal the given amount ." />
   <parameter name="paymentMode" description="Search payments by payment mode." />
   <parameter name="paymentModeStartsWith" description="Search payments by a regex of the starting letter or letters of the payment mode." />
   <parameter name="paymentModeContains" description="Search payments by a regex containing any part of the payment mode." />
   <parameter name="notes" description="Search payments by customer notes." />
   <parameter name="notesStartsWith" description="Search payments by regex of the starting letter or letters of the customer notes." />
   <parameter name="notesContains" description="Search payments by a regex containing any part of the customer notes." />
   <parameter name="customerId" description="Search payments by customer id." />
   <parameter name="filterBy" description="Filter payments by mode." />
   <parameter name="searchText" description="Search payments by reference number or customer name or payment description." />
   <parameter name="sortColumn" description="Sort the payment list." />
   <sequence>
      <property name="uri.var.customerName" expression="$func:customerName" />
      <property name="uri.var.customerNameStartswith" expression="$func:customerNameStartswith" />
      <property name="uri.var.customerNameContains" expression="$func:customerNameContains" />
      <property name="uri.var.referenceNumber" expression="$func:referenceNumber" />
      <property name="uri.var.referenceNumberStartswith" expression="$func:referenceNumberStartswith" />
      <property name="uri.var.referenceNumberContains" expression="$func:referenceNumberContains" />
      <property name="uri.var.date" expression="$func:date" />
      <property name="uri.var.dateStart" expression="$func:dateStart" />
      <property name="uri.var.dateEnd" expression="$func:dateEnd" />
      <property name="uri.var.dateBefore" expression="$func:dateBefore" />
      <property name="uri.var.dateAfter" expression="$func:dateAfter" />
      <property name="uri.var.amount" expression="$func:amount" />
      <property name="uri.var.amountLessThan" expression="$func:amountLessThan" />
      <property name="uri.var.amountLessEqual" expression="$func:amountLessEqual" />
      <property name="uri.var.amountGreaterThan" expression="$func:amountGreaterThan" />
      <property name="uri.var.amountGreaterEqual" expression="$func:amountGreaterEqual" />
      <property name="uri.var.paymentMode" expression="$func:paymentMode" />
      <property name="uri.var.paymentModeStartsWith" expression="$func:paymentModeStartsWith" />
      <property name="uri.var.paymentModeContains" expression="$func:paymentModeContains" />
      <property name="uri.var.notes" expression="$func:notes" />
      <property name="uri.var.notesStartsWith" expression="$func:notesStartsWith" />
      <property name="uri.var.notesContains" expression="$func:notesContains" />
      <property name="uri.var.customerId" expression="$func:customerId" />
      <property name="uri.var.filterBy" expression="$func:filterBy" />
      <property name="uri.var.searchText" expression="$func:searchText" />
      <property name="uri.var.sortColumn" expression="$func:sortColumn" />
      <script language="js">
         <![CDATA[
            var jsonPayload = mc.getPayloadJSON();
            var authToken = mc.getProperty('uri.var.authToken');
            var organizationId = mc.getProperty('uri.var.organizationId');
            var customerName = mc.getProperty('uri.var.customerName');
			var customerNameStartswith = mc.getProperty('uri.var.customerNameStartswith');
			var customerNameContains = mc.getProperty('uri.var.customerNameContains');
            var referenceNumber = mc.getProperty('uri.var.referenceNumber');
			var referenceNumberStartswith = mc.getProperty('uri.var.referenceNumberStartswith');
			var referenceNumberContains = mc.getProperty('uri.var.referenceNumberContains');
            var date = mc.getProperty('uri.var.date');
			var dateStart = mc.getProperty('uri.var.dateStart');
			var dateEnd = mc.getProperty('uri.var.dateEnd');
			var dateBefore = mc.getProperty('uri.var.dateBefore');
			var dateAfter = mc.getProperty('uri.var.dateAfter');
            var amount = mc.getProperty('uri.var.amount');
			var amountLessThan = mc.getProperty('uri.var.amountLessThan');
			var amountLessEqual = mc.getProperty('uri.var.amountLessEqual');
			var amountGreaterThan = mc.getProperty('uri.var.amountGreaterThan');
			var amountGreaterEqual = mc.getProperty('uri.var.amountGreaterEqual');
            var paymentMode = mc.getProperty('uri.var.paymentMode');
			var paymentModeStartsWith = mc.getProperty('uri.var.paymentModeStartsWith');
			var paymentModeContains = mc.getProperty('uri.var.paymentModeContains');
            var notes = mc.getProperty('uri.var.notes');
			var notesStartsWith = mc.getProperty('uri.var.notesStartsWith');
			var notesContains = mc.getProperty('uri.var.notesContains');
            var customerId = mc.getProperty('uri.var.customerId');
            var filterby = mc.getProperty('uri.var.filterBy');
            var searchText = mc.getProperty('uri.var.searchText');
            var sortColumn = mc.getProperty('uri.var.sortColumn');
            var urlQuery = '?authtoken=' + authToken + '&organization_id=' + organizationId + '&';
            
            if (customerName != null && customerName != ""){
               urlQuery += 'customer_name=' + customerName + '&';
            }
			if (customerNameStartswith != null && customerNameStartswith != ""){
               urlQuery += 'customer_name_startswith=' + customerNameStartswith + '&';
            }
			if (customerNameContains != null && customerNameContains != ""){
               urlQuery += 'customer_name_contains=' + customerNameContains + '&';
            }
            if (referenceNumber != null && referenceNumber != ""){
               urlQuery += 'reference_number=' + referenceNumber + '&';
            }
			if (referenceNumberStartswith != null && referenceNumberStartswith != ""){
               urlQuery += 'reference_number_startswith=' + referenceNumberStartswith + '&';
            }
			if (referenceNumberContains != null && referenceNumberContains != ""){
               urlQuery += 'reference_number_contains=' + referenceNumberContains + '&';
            }
            if (date != null && date != ""){
               urlQuery += 'date=' + date + '&';
            }
			if (dateStart != null && dateStart != ""){
               urlQuery += 'date_start=' + dateStart + '&';
            }
			if (dateEnd != null && dateEnd != ""){
               urlQuery += 'date_end=' + dateEnd + '&';
            }
			if (dateAfter != null && dateAfter != ""){
               urlQuery += 'date_after=' + dateAfter + '&';
            }
			if (dateBefore != null && dateBefore != ""){
               urlQuery += 'date_before=' + dateBefore + '&';
            }
            if (amount != null && amount != ""){
               urlQuery += 'amount=' + amount + '&';
            }
			if (amountLessThan != null && amountLessThan != ""){
               urlQuery += 'amount_less_than=' + amountLessThan + '&';
            }
			if (amountLessEqual != null && amountLessEqual != ""){
               urlQuery += 'amount_less_equals=' + amountLessEqual + '&';
            }
			if (amountGreaterThan != null && amountGreaterThan != ""){
               urlQuery += 'amount_greater_than=' + amountGreaterThan + '&';
            }
			if (amountGreaterEqual != null && amountGreaterEqual != ""){
               urlQuery += 'amount_greater_equals=' + amountGreaterEqual + '&';
            }
            if (paymentMode != null && paymentMode != ""){
               urlQuery += 'payment_mode=' + paymentMode + '&';
            }
			if (paymentModeStartsWith != null && paymentModeStartsWith != ""){
               urlQuery += 'payment_mode_startswith=' + paymentModeStartsWith + '&';
            }
			if (paymentModeContains != null && paymentModeContains != ""){
               urlQuery += 'payment_mode_contains=' + paymentModeContains + '&';
            }
            if (notes != null && notes != ""){
               urlQuery += 'notes=' + notes + '&';
            }
			if (notesStartsWith  != null && notesStartsWith  != ""){
               urlQuery += 'notes_startswith=' + notesStartsWith  + '&';
            }
			if (notesContains != null && notesContains != ""){
               urlQuery += 'notes_contains=' + notesContains + '&';
            }
            if (customerId != null && customerId != ""){
               urlQuery += 'customer_id=' + customerId + '&';
            }
            if (filterby != null && filterby != ""){
               urlQuery += 'filter_by=' + filterby + '&';
            }
            if (searchText != null && searchText != ""){
               urlQuery += 'search_text=' + searchText + '&';
            }
            if (sortColumn != null && sortColumn != ""){
               urlQuery += 'sort_column=' + sortColumn + '&';
            } 
            // Remove the trailing '&'
            urlQuery = urlQuery.substring(0, urlQuery.length - 1);
            mc.setProperty('uri.var.urlQuery', encodeURI(urlQuery));
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="get" uri-template="{uri.var.apiUrl}/customerpayments{uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!--Removing custom headers from the Response. -->
      <header name="X-Rate-Limit-Limit" action="remove" scope="transport" />
      <header name="X-XSS-Protection" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Remaining" action="remove" scope="transport" />
      <header name="Cache-Control" action="remove" scope="transport" />
      <header name="Pragma" action="remove" scope="transport" />
      <header name="X-Content-Type-Options" action="remove" scope="transport" />
      <header name="BUILD_VERSION" action="remove" scope="transport" />
      <header name="Strict-Transport-Security" action="remove" scope="transport" />
      <header name="Vary" action="remove" scope="transport" />
      <header name="Content-Disposition" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Reset" action="remove" scope="transport" />
      <header name="Status" action="remove" scope="transport" />
   </sequence>
</template>