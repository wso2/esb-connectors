<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<template name="createANewEstimate" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="authToken" description="API key"/>
    <parameter name="customerId" description="ID of the customer the estimate has to be created"/>
    <parameter name="contactPersons" description="Array of contact person(s) for whom estimate has to be sent"/>
    <parameter name="lineItems" description="Line items of an estimate"/>
    <parameter name="templateId" description="ID of the pdf template associated with the estimate"/>
    <parameter name="estimate_number" description="Mandatory if auto number generation is disabled"/>
    <parameter name="date" description="The date the estimate is created"/>
    <parameter name="expiryDate" description="Date the estimate is valid upto"/>
    <parameter name="exchangeRate" description="Exchange rate of the currency"/>
    <parameter name="discount"
               description="Discount applied to the invoice. It can be either in % or in amount. e.g. 12.5% or 190"/>
    <parameter name="isDiscountBeforeTax"
               description="Used to specify how the discount has to applied. Either before or after the calculation of tax"/>
    <parameter name="discountType"
               description="How the discount is specified. Allowed values are entity_level or item_level"/>
    <parameter name="salespersonName" description="Name of the sales person"/>
    <parameter name="shippingCharge" description="Shipping charges applied to the invoice"/>
    <parameter name="adjustment" description="Adjustments made to the invoice"/>
    <parameter name="adjustmentDescription" description="Customize the adjustment description. E.g. Rounding off"/>
    <parameter name="send" description="Print the exported pdf"/>
    <parameter name="ignore_auto_number_generation"
               description="Get the details of a particular estimate in formats such as json/ pdf/ html. Default format is json"/>
    <sequence>
        <property name="uri.var.authToken" expression="$func:authToken"/>
        <property name="uri.var.customerId" expression="$func:customerId"/>
        <property name="uri.var.lineItems" expression="$func:lineItems"/>
        <property name="uri.var.contactPersons" expression="$func:contactPersons"/>
        <property name="uri.var.templateId" expression="$func:templateId"/>
        <property name="uri.var.estimate_number" expression="$func:estimate_number"/>
        <property name="uri.var.date" expression="$func:date"/>
        <property name="uri.var.expiryDate" expression="$func:expiryDate"/>
        <property name="uri.var.exchangeRate" expression="$func:exchangeRate"/>
        <property name="uri.var.discount" expression="$func:discount"/>
        <property name="uri.var.isDiscountBeforeTax" expression="$func:isDiscountBeforeTax"/>
        <property name="uri.var.discountType" expression="$func:discountType"/>
        <property name="uri.var.salespersonName" expression="$func:salespersonName"/>
        <property name="uri.var.shippingCharge" expression="$func:shippingCharge"/>
        <property name="uri.var.adjustment" expression="$func:adjustment"/>
        <property name="uri.var.adjustmentDescription" expression="$func:adjustmentDescription"/>
        <property name="uri.var.send" expression="$func:send"/>
        <property name="uri.var.ignore_auto_number_generation" expression="$func:ignore_auto_number_generation"/>
        <property name="zohoParameters" value=""/>
        <property name="zohoAPIParameters" value=""/>
        <filter
                xpath="get-property('uri.var.send') = '' or  not(string(get-property('uri.var.send')))">
            <then>
                <property name="uri.var.send" value=""/>
            </then>
            <else>
                <property name="zohoAPIParameters" expression="fn:concat(get-property('zohoAPIParameters'),
               ',&amp;send=', get-property('uri.var.send'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.ignore_auto_number_generation') = '' or  not(string(get-property('uri.var.ignore_auto_number_generation')))">
            <then>
                <property name="uri.var.ignore_auto_number_generation" value=""/>
            </then>
            <else>
                <property name="zohoAPIParameters" expression="fn:concat(get-property('zohoAPIParameters'),
               ',&amp;ignore_auto_number_generation=', get-property('uri.var.ignore_auto_number_generation'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.contactPersons') = '' or  not(string(get-property('uri.var.contactPersons')))">
            <then>
                <property name="uri.var.contactPersons" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;contact_persons&quot;:', get-property('uri.var.contactPersons'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.templateId') = '' or  not(string(get-property('uri.var.templateId')))">
            <then>
                <property name="uri.var.templateId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;template_id&quot;:&quot;', get-property('uri.var.templateId'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.estimate_number') = '' or  not(string(get-property('uri.var.estimate_number')))">
            <then>
                <property name="uri.var.estimate_number" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;estimate_number&quot;:&quot;', get-property('uri.var.estimate_number'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.date') = '' or  not(string(get-property('uri.var.date')))">
            <then>
                <property name="uri.var.date" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;date&quot;:&quot;', get-property('uri.var.date'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.expiryDate') = '' or  not(string(get-property('uri.var.expiryDate')))">
            <then>
                <property name="uri.var.expiryDate" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;expiry_date&quot;:&quot;', get-property('uri.var.expiryDate'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.exchangeRate') = '' or  not(string(get-property('uri.var.exchangeRate')))">
            <then>
                <property name="uri.var.exchangeRate" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;exchange_rate&quot;:&quot;', get-property('uri.var.exchangeRate'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.discount') = '' or  not(string(get-property('uri.var.discount')))">
            <then>
                <property name="uri.var.discount" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;discount&quot;:&quot;', get-property('uri.var.discount'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.isDiscountBeforeTax') = '' or  not(string(get-property('uri.var.isDiscountBeforeTax')))">
            <then>
                <property name="uri.var.isDiscountBeforeTax" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;is_discount_before_tax&quot;:&quot;', get-property('uri.var.isDiscountBeforeTax'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.discountType') = '' or  not(string(get-property('uri.var.discountType')))">
            <then>
                <property name="uri.var.discountType" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;discount_type&quot;:&quot;', get-property('uri.var.discountType'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.salespersonName') = '' or  not(string(get-property('uri.var.salespersonName')))">
            <then>
                <property name="uri.var.salespersonName" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;salesperson_name&quot;:&quot;', get-property('uri.var.salespersonName'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.shippingCharge') = '' or  not(string(get-property('uri.var.shippingCharge')))">
            <then>
                <property name="uri.var.shippingCharge" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;shipping_charge&quot;:&quot;', get-property('uri.var.shippingCharge'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.adjustment') = '' or  not(string(get-property('uri.var.adjustment')))">
            <then>
                <property name="uri.var.adjustment" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;adjustment&quot;:&quot;', get-property('uri.var.adjustment'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.adjustmentDescription') = '' or  not(string(get-property('uri.var.adjustmentDescription')))">
            <then>
                <property name="uri.var.adjustmentDescription" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;adjustment_description&quot;:&quot;', get-property('uri.var.adjustmentDescription'),'&quot;')"/>
            </else>
        </filter>
        <property name="uri.var.parameters" expression="get-property('zohoParameters')"/>
        <property name="uri.var.APIParameters" expression="get-property('zohoAPIParameters')"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/estimates?authtoken={uri.var.authToken}{uri.var.APIParameters}&amp;JSONString={&quot;customer_id&quot;:&quot;{uri.var.customerId}&quot;,&quot;line_items&quot;:{uri.var.lineItems}{uri.var.parameters}}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-li-format" scope="transport" action="remove"/>
        <header name="X-LI-UUID" scope="transport" action="remove"/>
        <header name="X-Li-Pop" scope="transport" action="remove"/>
        <header name="X-Li-Fabric" scope="transport" action="remove"/>
        <header name="x-li-request-id" scope="transport" action="remove"/>
    </sequence>
</template>