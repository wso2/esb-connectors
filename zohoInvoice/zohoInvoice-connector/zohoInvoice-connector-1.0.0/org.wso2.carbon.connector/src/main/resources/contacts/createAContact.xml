<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<template name="createAContact" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="authToken" description="API key"/>
    <parameter name="contactName" description="Display Name of the contact"/>
    <parameter name="companyName" description="Company Name of the contact"/>
    <parameter name="website" description="Website of the contact"/>
    <parameter name="customFields" description="Custom fields of the contact"/>
    <parameter name="shippingAddress" description="Shipping address of the contact"/>
    <parameter name="billingAddress" description="Billing address of the contact"/>
    <parameter name="contactPersons" description="Contact persons of a contact"/>
    <parameter name="contactPersonId" description="ID of the contact person"/>
    <parameter name="email" description="Email address of the contact person"/>
    <parameter name="isPrimaryContact"
               description="To mark contact person as primary for contact. Allowed value is true only"/>
    <parameter name="invoiceTemplateId"
               description="Default invoice template id used for this contact while creating invoice."/>
    <parameter name="estimateTemplateId"
               description="Default estimate template id used for this contact while creating estimate"/>
    <parameter name="creditnoteTemplateId"
               description="Default credit note template id used for this contact while creating credit note"/>
    <parameter name="estimateEmailTemplateId"
               description="Default estimate email template id used for this contact while sending estimates"/>
    <parameter name="creditnoteEmailTemplateId"
               description="Default credit note email template id used for this contact while sending credit notes"/>
    <parameter name="invoiceImailTemplateId"
               description="Default invoice email template id used for this contact while sending invoices"/>
    <sequence>
        <property name="uri.var.authToken" expression="$func:authToken"/>
        <property name="uri.var.contactName" expression="$func:contactName"/>
        <property name="uri.var.companyName" expression="$func:companyName"/>
        <property name="uri.var.companyName" expression="$func:companyName"/>
        <property name="uri.var.website" expression="$func:website"/>
        <property name="uri.var.customFields" expression="$func:customFields"/>
        <property name="uri.var.shippingAddress" expression="$func:shippingAddress"/>
        <property name="uri.var.billingAddress" expression="$func:billingAddress"/>
        <property name="uri.var.contactPersons" expression="$func:contactPersons"/>
        <property name="uri.var.contactPersonId" expression="$func:contactPersonId"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.isPrimaryContact" expression="$func:isPrimaryContact"/>
        <property name="uri.var.invoiceTemplateId" expression="$func:invoiceTemplateId"/>
        <property name="uri.var.estimateTemplateId" expression="$func:estimateTemplateId"/>
        <property name="uri.var.creditnoteTemplateId" expression="$func:creditnoteTemplateId"/>
        <property name="uri.var.estimateEmailTemplateId" expression="$func:estimateEmailTemplateId"/>
        <property name="uri.var.creditnoteEmailTemplateId" expression="$func:creditnoteEmailTemplateId"/>
        <property name="uri.var.invoiceImailTemplateId" expression="$func:invoiceImailTemplateId"/>
        <property name="zohoParameters" value=""/>
        <filter
                xpath="get-property('uri.var.companyName') = '' or  not(string(get-property('uri.var.companyName')))">
            <then>
                <property name="uri.var.companyName" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;company_name&quot;:&quot;', get-property('uri.var.companyName'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.website') = '' or  not(string(get-property('uri.var.website')))">
            <then>
                <property name="uri.var.website" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;website&quot;:&quot;', get-property('uri.var.website'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.customFields') = '' or  not(string(get-property('uri.var.customFields')))">
            <then>
                <property name="uri.var.customFields" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;custom_fields&quot;:&quot;', get-property('uri.var.customFields'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.billingAddress') = '' or  not(string(get-property('uri.var.billingAddress')))">
            <then>
                <property name="uri.var.billingAddress" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;billing_address&quot;:', get-property('uri.var.billingAddress'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.shippingAddress') = '' or  not(string(get-property('uri.var.shippingAddress')))">
            <then>
                <property name="uri.var.shippingAddress" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;shipping_address&quot;:', get-property('uri.var.shippingAddress'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.contactPersons') = '' or  not(string(get-property('uri.var.contactPersons')))">
            <then>
                <property name="uri.var.contactPersons" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;contact_persons&quot;:&quot;', get-property('uri.var.contactPersons'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.contactPersonId') = '' or  not(string(get-property('uri.var.contactPersonId')))">
            <then>
                <property name="uri.var.contactPersonId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;contact_person_id&quot;:&quot;', get-property('uri.var.contactPersonId'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.email') = '' or  not(string(get-property('uri.var.email')))">
            <then>
                <property name="uri.var.email" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;email&quot;:&quot;', get-property('uri.var.email'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.isPrimaryContact') = '' or  not(string(get-property('uri.var.isPrimaryContact')))">
            <then>
                <property name="uri.var.isPrimaryContact" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;is_primary_contact&quot;:&quot;', get-property('uri.var.isPrimaryContact'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.invoiceTemplateId') = '' or  not(string(get-property('uri.var.invoiceTemplateId')))">
            <then>
                <property name="uri.var.invoiceTemplateId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;invoice_template_id&quot;:&quot;', get-property('uri.var.invoiceTemplateId'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.estimateTemplateId') = '' or  not(string(get-property('uri.var.estimateTemplateId')))">
            <then>
                <property name="uri.var.estimateTemplateId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;estimate_template_id&quot;:&quot;', get-property('uri.var.estimateTemplateId'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.creditnoteTemplateId') = '' or  not(string(get-property('uri.var.creditnoteTemplateId')))">
            <then>
                <property name="uri.var.creditnoteTemplateId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;creditnote_template_id&quot;:&quot;', get-property('uri.var.creditnoteTemplateId'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.estimateEmailTemplateId') = '' or  not(string(get-property('uri.var.estimateEmailTemplateId')))">
            <then>
                <property name="uri.var.estimateEmailTemplateId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;estimate_email_template_id&quot;:&quot;', get-property('uri.var.estimateEmailTemplateId'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.creditnoteEmailTemplateId') = '' or  not(string(get-property('uri.var.creditnoteEmailTemplateId')))">
            <then>
                <property name="uri.var.creditnoteEmailTemplateId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;creditnote_email_template_id&quot;:&quot;', get-property('uri.var.creditnoteEmailTemplateId'),'&quot;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.invoiceImailTemplateId') = '' or  not(string(get-property('uri.var.invoiceImailTemplateId')))">
            <then>
                <property name="uri.var.invoiceImailTemplateId" value=""/>
            </then>
            <else>
                <property name="zohoParameters" expression="fn:concat(get-property('zohoParameters'),
               ',&quot;invoice_email_template_id&quot;:&quot;', get-property('uri.var.invoiceImailTemplateId'),'&quot;')"/>
            </else>
        </filter>
        <property name="uri.var.parameters" expression="get-property('zohoParameters')"/>
        <header name="Content-Type" scope="transport" action="remove"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/contacts?authtoken={uri.var.authToken}&amp;JSONString={&quot;contact_name&quot;:&quot;{uri.var.contactName}&quot;{uri.var.parameters}}"/>
            </endpoint>
        </call>
        <header name="x-li-format" scope="transport" action="remove"/>
        <header name="X-LI-UUID" scope="transport" action="remove"/>
        <header name="X-Li-Pop" scope="transport" action="remove"/>
        <header name="X-Li-Fabric" scope="transport" action="remove"/>
        <header name="x-li-request-id" scope="transport" action="remove"/>
    </sequence>
</template>