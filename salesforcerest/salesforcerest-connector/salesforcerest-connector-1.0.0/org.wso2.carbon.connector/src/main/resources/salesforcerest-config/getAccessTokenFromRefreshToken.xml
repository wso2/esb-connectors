<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="getAccessTokenFromRefreshToken" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="refreshToken" description="value of the refresh token."/>
    <parameter name="clientSecret"
               description="Value of your secret key given when you registered your application with salesforce."/>
    <parameter name="clientId"
               description="Value of your API Key given when you registered your application with salesforce."/>
    <sequence>
        <property name="uri.var.refreshToken" expression="$func:refreshToken"/>
        <property name="uri.var.clientSecret" expression="$func:clientSecret"/>
        <property name="uri.var.clientId" expression="$func:clientId"/>
        <payloadFactory media-type="json">
            <format>
                {
                "refresh_token": "$1",
                "client_secret": "$2",
                "client_id": "$3"
                }
            </format>
            <args>
                <arg expression="$ctx:uri.var.refreshToken"/>
                <arg expression="$ctx:uri.var.clientSecret"/>
                <arg expression="$ctx:uri.var.clientId"/>
            </args>
        </payloadFactory>
        <property name="Accept-Encoding" scope="transport" action="remove"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.hostName}/services/oauth2/token?grant_type=refresh_token&amp;client_id={uri.var.clientId}&amp;client_secret={uri.var.clientSecret}&amp;refresh_token={uri.var.refreshToken}&amp;format=json"/>
            </endpoint>
        </call>
        <!-- Setting the new access token to the property. -->
        <property name="uri.var.accessToken" expression="json-eval($.access_token)"/>
        <property name="uri.var.apiUrl" expression="json-eval($.instance_url)"/>
        <property name="systemTime" expression="$ctx:SYSTEM_TIME"
                  scope="default"/>
        <script language="js">
            <![CDATA[
             importPackage(Packages.org.apache.synapse.config);
             var newAccessToken = mc.getProperty('uri.var.accessToken');
             var newSystemTime = mc.getProperty('systemTime');
             var newAccessRegistryPath = mc.getProperty('uri.var.accessTokenRegistryPath');
             var newTimeRegistryPath = mc.getProperty('uri.var.timeRegistryPath');
             if(newAccessToken != null && newAccessToken != ''){
                var existingAccessToken = mc.getConfiguration().getRegistry().getResource(newAccessRegistryPath);
                var existingTime = mc.getConfiguration().getRegistry().getResource(newTimeRegistryPath);
                if(existingAccessToken == null){
                  // Create the registry entry if no such entry exists.
                  mc.getConfiguration().getRegistry().newResource(newAccessRegistryPath, false);
                  mc.getConfiguration().getRegistry().updateResource(newAccessRegistryPath, newAccessToken);
                  mc.getConfiguration().getRegistry().newResource(newTimeRegistryPath, false);
                  mc.getConfiguration().getRegistry().updateResource(newTimeRegistryPath, newSystemTime);
                } else {
                  // Update the registry entry if it already exists.
                  mc.getConfiguration().getRegistry().updateResource(newAccessRegistryPath, newAccessToken);
                  mc.getConfiguration().getRegistry().updateResource(newTimeRegistryPath, newSystemTime);
                }
             }
         ]]>
        </script>
        <!-- Remove custom Headers from the API Response -->
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Pragma" action="remove" scope="transport"/>
    </sequence>
</template>