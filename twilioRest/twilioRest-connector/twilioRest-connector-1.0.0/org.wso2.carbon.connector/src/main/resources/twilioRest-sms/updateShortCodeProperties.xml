<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Documentation URL -  https://www.twilio.com/docs/api/rest/short-codes#instance-post   -->
<template name="updateShortCodeProperties" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="shortCodeSid" description="The 34-character string that uniquely identifies this short code."/>
    <parameter name="friendlyName" description=" The human-readable description of this short code." />
    <parameter name="apiVersion" description=""/>
    <parameter name="smsUrl" description="The URL that Twilio should request when somebody sends an SMS to this phone number." />
    <parameter name="smsMethod" description="The HTTP method, either GET or POST, that should be used to request the SMS URL. Defaults to POST." />
    <parameter name="smsFallbackUrl" description="The URL that Twilio will request if an error occurs when requests are made to the SMS URL."/>
    <parameter name="smsFallbackMethod" description=" The HTTP method, either GET or POST, that should be used to request the SMS fallback URL. Defaults to POST." />

    <sequence>
        <property name="uri.var.shortCodeSid" expression="$func:shortCodeSid" />
        <property name="uri.var.friendlyName" expression="$func:friendlyName" />
        <property name="uri.var.apiVersion" expression="$func:apiVersion" />
        <property name="uri.var.smsUrl" expression="$func:smsUrl" />
        <property name="uri.var.smsMethod" expression="$func:smsMethod" />
        <property name="uri.var.smsFallbackUrl" expression="$func:smsFallbackUrl" />
        <property name="uri.var.smsFallbackMethod" expression="$func:smsFallbackMethod" />
        <property name="uri.var.optionalParameters" value=""/>

        <filter xpath="(not(get-property('uri.var.friendlyName') = '' or (not(string(get-property('uri.var.friendlyName'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'&amp;FriendlyName=',get-property('uri.var.friendlyName'))"/>
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.apiVersion') = '' or (not(string(get-property('uri.var.apiVersion'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'&amp;ApiVersion=',get-property('uri.var.apiVersion'))"/>
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.smsUrl') = '' or (not(string(get-property('uri.var.smsUrl'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'&amp;SmsUrl=',get-property('uri.var.smsUrl'))"/>
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.smsMethod') = '' or (not(string(get-property('uri.var.smsMethod'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'&amp;SmsMethod=',get-property('uri.var.smsMethod'))"/>
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.smsFallbackUrl') = '' or (not(string(get-property('uri.var.smsFallbackUrl'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'&amp;SmsFallbackUrl=',get-property('uri.var.smsFallbackUrl'))"/>
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.smsFallbackMethod') = '' or (not(string(get-property('uri.var.smsFallbackMethod'))))))">
            <then>
                <property name="uri.var.optionalParameters"
                          expression="fn:concat(get-property('uri.var.optionalParameters'),'&amp;SmsFallbackMethod=',get-property('uri.var.smsFallbackMethod'))"/>
            </then>
        </filter>

        <header name="Content-Type" value="application/x-www-form-urlencoded" scope="transport"/>

        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/Accounts/{uri.var.accountSid}/SMS/ShortCodes/{uri.var.shortCodeSid}.json" />
            </endpoint>
        </call>
        <!--Removing custom headers from the Response. -->
        <header name="X-Frame-Options" action="remove" scope="transport" />
        <header name="Vary" action="remove" scope="transport" />
        <header name="X-XSS-Protection" action="remove" scope="transport" />
        <header name="X-Content-Type-Options" action="remove" scope="transport" />
        <header name="Strict-Transport-Security" action="remove" scope="transport" />
        <header name="X-RateLimit-Remaining" action="remove" scope="transport" />
        <header name="X-RateLimit-Limit" action="remove" scope="transport" />
        <header name="X-RateLimit-Reset" action="remove" scope="transport" />
    </sequence>
</template>