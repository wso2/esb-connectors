<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~      http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="tw_updateEvent"
       transports="https http"
       startOnLoad="true"
       trace="disable">
   <description/>
   <target>
      <inSequence>
         <property name="apiUrl" expression="json-eval($.apiUrl)"/>
         <property name="apiKey" expression="json-eval($.apiKey)"/>
         <property name="eventId" expression="json-eval($.eventId)"/>
         <property name="start" expression="json-eval($.start)"/>
         <property name="end" expression="json-eval($.end)"/>
         <property name="allDay" expression="json-eval($.allDay)"/>
         <property name="title" expression="json-eval($.title)"/>
         <property name="description" expression="json-eval($.description)"/>
         <property name="where" expression="json-eval($.where)"/>
         <property name="type" expression="json-eval($.type)"/>
         <property name="projectId" expression="json-eval($.projectId)"/>
         <property name="showAsBusy" expression="json-eval($.showAsBusy)"/>
         <property name="id" expression="json-eval($.id)"/>
         <property name="attendingUserIds" expression="json-eval($.attendingUserIds)"/>
         <property name="notifyUserIds" expression="json-eval($.notifyUserIds)"/>
         <property name="attendeesCanEdit" expression="json-eval($.attendeesCanEdit)"/>
         <property name="projectUsersCanEdit"
                   expression="json-eval($.projectUsersCanEdit)"/>
         <property name="reminderType" expression="json-eval($.reminderType)"/>
         <property name="period" expression="json-eval($.period)"/>
         <property name="before" expression="json-eval($.before)"/>
         <teamwork.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <apiKey>{$ctx:apiKey}</apiKey>
         </teamwork.init>
         <teamwork.updateEvent>
            <eventId>{$ctx:eventId}</eventId>
            <start>{$ctx:start}</start>
            <end>{$ctx:end}</end>
            <allDay>{$ctx:allDay}</allDay>
            <title>{$ctx:title}</title>
            <description>{$ctx:description}</description>
            <where>{$ctx:where}</where>
            <type>{$ctx:type}</type>
            <projectId>{$ctx:projectId}</projectId>
            <showAsBusy>{$ctx:showAsBusy}</showAsBusy>
            <id>{$ctx:id}</id>
            <attendingUserIds>{$ctx:attendingUserIds}</attendingUserIds>
            <notifyUserIds>{$ctx:notifyUserIds}</notifyUserIds>
            <attendeesCanEdit>{$ctx:attendeesCanEdit}</attendeesCanEdit>
            <projectUsersCanEdit>{$ctx:projectUsersCanEdit}</projectUsersCanEdit>
            <reminderType>{$ctx:reminderType}</reminderType>
            <period>{$ctx:period}</period>
            <before>{$ctx:before}</before>
         </teamwork.updateEvent>
         <respond/>
      </inSequence>
      <outSequence/>
      <faultSequence/>
   </target>
</proxy>
