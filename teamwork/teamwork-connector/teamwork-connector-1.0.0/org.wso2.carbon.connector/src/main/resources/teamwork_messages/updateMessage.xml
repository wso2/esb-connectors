<?xml version="1.0" encoding="UTF-8"?>
<!--
*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
*
*  WSO2 Inc. licenses this file to you under the Apache License,
*  Version 2.0 (the "License"); you may not use this file except
*  in compliance with the License.
*  You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="updateMessage">
    <parameter name="messageId" description="The id of the message"/>
    <parameter name="title" description="The name of the title"/>
    <parameter name="categoryId" description="The category id of the message"/>
    <parameter name="notify" description="The ids of people who get notified by the message"/>
    <parameter name="private" description="The private status of the message"/>
    <parameter name="messageBody" description="The body of the message"/>
    <parameter name="attachments" description="The attachments of the message"/>
    <parameter name="pendingFileAttachments" description="The pending file attachments of the message"/>
    <sequence>
        <property name="uri.var.messageId" expression="$func:messageId"/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.categoryId" expression="$func:categoryId"/>
        <property name="uri.var.notify" expression="$func:notify"/>
        <property name="uri.var.private" expression="$func:private"/>
        <property name="uri.var.messageBody" expression="$func:messageBody"/>
        <property name="uri.var.attachments" expression="$func:attachments"/>
        <property name="uri.var.pendingFileAttachments" expression="$func:pendingFileAttachments"/>
        <payloadFactory media-type="json">
            <format>
                {
                "post": {
                    "title": "$1",
                    "category-id": "$2",
                    "notify": ["$3"],
                    "private": "$4",
                    "body": "$5",
                    "attachments": "$6",
                    "pendingFileAttachments": "$7"
                }
                }
            </format>
            <args>
                <arg evaluator="xml" expression="$func:title"/>
                <arg evaluator="xml" expression="$func:categoryId"/>
                <arg evaluator="xml" expression="$func:notify"/>
                <arg evaluator="xml" expression="$func:private"/>
                <arg evaluator="xml" expression="$func:messageBody"/>
                <arg evaluator="xml" expression="$func:attachments"/>
                <arg evaluator="xml" expression="$func:pendingFileAttachments"/>
            </args>
        </payloadFactory>
        <script language="js"><![CDATA[
            //request body param variables
            var notify=mc.getProperty('uri.var.notify');
            var attachments=mc.getProperty('uri.var.attachments');
            var pendingFileAttachments=mc.getProperty('uri.var.pendingFileAttachments');
            //Get the existing payload
            var payload = mc.getPayloadJSON();
            if (!notify  || notify == "") {
					delete payload.post.notify;
            }
            if (!attachments  || attachments == "") {
					delete payload.post.attachments;
            }
            if (!pendingFileAttachments  || pendingFileAttachments == "") {
					delete payload.post.pendingFileAttachments;
            }
            //Set the newly constructed payload
		    mc.setPayloadJSON(payload);
        ]]>
        </script>
        <property name="POST_TO_URI" value="true" scope="axis2" type="STRING"/>
        <property name="FORCE_HTTP_1.0" value="true" scope="axis2"/>
        <property name="DISABLE_CHUNKING" value="true" scope="axis2"/>
        <call>
            <endpoint>
                <http method="PUT"
                      uri-template="{uri.var.teamwork.apiUrl}/posts/{uri.var.messageId}.json"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="Access-Control-Allow-Headers" scope="transport" action="remove" />
        <header name="Access-Control-Allow-Methods" scope="transport" action="remove" />
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove" />
        <header name="ETag" scope="transport" action="remove" />
        <header name="P3P" scope="transport" action="remove" />
        <header name="X-RateLimit-Remaining" scope="transport" action="remove" />
        <header name="X-lastUpdated" scope="transport" action="remove" />
        <header name="twserver" scope="transport" action="remove" />
        <header name="X-RateLimit-Limit" scope="transport" action="remove" />
    </sequence>
</template>