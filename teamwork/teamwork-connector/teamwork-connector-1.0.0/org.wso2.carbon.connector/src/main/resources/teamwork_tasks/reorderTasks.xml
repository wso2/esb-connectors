<?xml version="1.0" encoding="UTF-8"?>
<!--
*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
*
*  WSO2 Inc. licenses this file to you under the Apache License,
*  Version 2.0 (the "License"); you may not use this file except
*  in compliance with the License.
*  You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="reorderTasks">
    <parameter name="taskListId" description="The id of the taskList"/>
    <parameter name="tasks" description="The list of the tasks in order"/>
    <sequence>
        <property name="uri.var.taskListId" expression="$func:taskListId"/>
        <property name="uri.var.tasks" expression="$func:tasks"/>
        <script language="js"><![CDATA[
            //request body param variables
            var tasks=''+mc.getProperty('uri.var.tasks');
            var tasksObj = eval ("(" + tasks + ")");
            var query = '';
            if (mc.getProperty('uri.var.tasks') != null && mc.getProperty('uri.var.tasks') != "") {
                query = '[';
                var added = 0;
                for(var i in tasksObj) {
                    var temp = tasksObj[i].id;
                    if(added == 0) {
                        query = query + '{\"todo-item\":{\"id\":\"'+temp +'\"}}';
                        added = 1;
                    }else {
                        query = query + ',{\"todo-item\":{\"id\":\"'+temp +'\"}}';
                    }
                }
                query = query + ']';
            }
             if (query != '') {
                var tasksId = '"todo-items":' + query;
            }
            mc.setProperty('uri.var.temp.tasks', tasksId);
        ]]>
        </script>
        <payloadFactory media-type="json">
            <format>
                {
                $1
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.temp.tasks')" />
            </args>
        </payloadFactory>
        <property name="POST_TO_URI" value="true" scope="axis2" type="STRING"></property>
        <property name="FORCE_HTTP_1.0" value="true" scope="axis2"></property>
        <property name="DISABLE_CHUNKING" value="true" scope="axis2"></property>
        <call>
            <endpoint>
                <http method="PUT"
                      uri-template="{uri.var.teamwork.apiUrl}/tasklists/{uri.var.taskListId}/tasks/reorder.json"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="Access-Control-Allow-Headers" scope="transport" action="remove" />
        <header name="Access-Control-Allow-Methods" scope="transport" action="remove" />
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove" />
        <header name="ETag" scope="transport" action="remove" />
        <header name="P3P" scope="transport" action="remove" />
        <header name="X-RateLimit-Remaining" scope="transport" action="remove" />
        <header name="X-lastUpdated" scope="transport" action="remove" />
        <header name="twserver" scope="transport" action="remove" />
        <header name="X-RateLimit-Limit" scope="transport" action="remove" />
    </sequence>
</template>