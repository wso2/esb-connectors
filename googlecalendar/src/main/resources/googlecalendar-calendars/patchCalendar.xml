<template name="patchCalendar" xmlns="http://ws.apache.org/ns/synapse">

	<!-- Required parameters -->
	<parameter name="calendarId" description="Calendar identifier." />
	
	<!-- Optional parameters -->
	<parameter name="fields" description="Selector specifying which fields to include in a partial response." />
	<parameter name="description" description="Description of the calendar." />
	<parameter name="etag" description="ETag of the resource." />
	<parameter name="id" description="Identifier of the calendar." />
	<parameter name="kind" description="Type of the resource ('calendar#calendar')." />
	<parameter name="location" description="Geographic location of the calendar as free-form text." />
	<parameter name="summary" description="Title of the calendar." />
	<parameter name="timeZone" description="The time zone of the calendar." />
	
	<sequence>
		
		<property name="uri.var.calendarId" expression="$func:calendarId" />
		<property name="uri.var.fields" expression="$func:fields" />
		<property name="uri.var.description" expression="$func:description" />
		<property name="uri.var.etag" expression="$func:etag" />
		<property name="uri.var.id" expression="$func:id" />
		<property name="uri.var.kind" expression="$func:kind" />
		<property name="uri.var.location" expression="$func:location" />
		<property name="uri.var.summary" expression="$func:summary" />
		<property name="uri.var.timeZone" expression="$func:timeZone" />
		
		<!-- Building request with mandatory params -->
		<payloadFactory media-type="json">
			<format>
				{}
			</format>
		</payloadFactory>
		
		<script language="js">
        	<![CDATA[
        		
        		//encoding url param variables
				var fields = mc.getProperty('uri.var.fields');
				var calendarId = encodeURIComponent(mc.getProperty("uri.var.calendarId"));			
	  			
	  			//url param processing start
		       	mc.setProperty('uri.var.calendarId', calendarId);
		        var urlParamString = '';
		           
				if (fields != null && fields != "") {
					urlParamString = '?fields=' + encodeURIComponent(fields);
				}
				
				mc.setProperty('uri.var.urlParamString', urlParamString);
				//url param processing end
        		
        		//request body param variables
		        var description = mc.getProperty("uri.var.description");
		        var etag = mc.getProperty("uri.var.etag");
		        var id = mc.getProperty("uri.var.id");
		        var kind = mc.getProperty("uri.var.kind");
		        var location = mc.getProperty("uri.var.location");
		        var summary = mc.getProperty("uri.var.summary");
		        var timeZone = mc.getProperty("uri.var.timeZone");
        		
        		//request body param processing start
				payload = mc.getPayloadJSON();
				
				if (description != null) {
                	if (description == " ") {
                    	payload.description = "";
                    } else if (description != "") {
                    	payload.description = description;
                    }
                }
				
				if (etag != null && etag != "") {
					payload.etag = etag;
				}
				
				if (id != null && id != "") {
					payload.id = id;
				}
				
				if (kind != null && kind != "") {
					payload.kind = kind;
				}
				
				if (location != null) {
                	if (location == " ") {
                    	payload.location = "";
                    } else if (location != "") {
                    	payload.location = location;
                    }
                }
				
				if (summary != null && summary != "") {
					payload.summary = summary;
				}
				
				if (timeZone != null) {
                	if (timeZone == " ") {
                    	payload.timeZone = "";
                    } else if (timeZone != "") {
                    	payload.timeZone = timeZone;
                    }
                }
				
				mc.setPayloadJSON(payload);
				//request body param processing end
        		
			]]>
		</script>
		
		<call>
			<endpoint>
				<http method="patch"
					uri-template="{uri.var.apiUrl}/calendar/v3/calendars/{uri.var.calendarId}{uri.var.urlParamString}" />
			</endpoint>
		</call>
		
		<!-- Remove response custom header information -->
		<header name="X-Frame-Options" scope="transport" action="remove" />
        <header name="X-XSS-Protection" scope="transport" action="remove" />
        <header name="Alternate-Protocol" scope="transport" action="remove" />
        <header name="X-Content-Type-Options" scope="transport" action="remove" />
		
	</sequence>
	
</template>