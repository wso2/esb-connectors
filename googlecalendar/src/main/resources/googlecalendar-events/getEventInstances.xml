<template name="getEventInstances" xmlns="http://ws.apache.org/ns/synapse">

	<!-- Required parameters -->
	<parameter name="calendarId" description="Calendar identifier." />
	<parameter name="eventId" description="Recurring event identifier." />

	<!-- Optional parameters -->
	<parameter name="alwaysIncludeEmail"
		description="Whether to always include a value in the 'email' field for the organizer, 
  creator and attendees, even if no real email is available. The default is False" />
	<parameter name="maxAttendees"
		description="The maximum number of attendees to include in the response." />
	<parameter name="maxResults"
		description="Maximum number of events returned on one result page." />
	<parameter name="originalStart"
		description="The original start time of the instance in the result." />
	<parameter name="pageToken"
		description="	Token specifying which result page to return." />
	<parameter name="showDeleted"
		description="Whether to include deleted events in the result." />
	<parameter name="timeMax"
		description="Upper bound (exclusive) for an event's start time to filter by." />
	<parameter name="timeMin"
		description="Lower bound (inclusive) for an event's end time to filter by." />
	<parameter name="timeZone" description="Time zone used in the response." />
	<parameter name="fields"
		description="Selector specifying which fields to include in a partial response." />

	<sequence>

		<property name="uri.var.calendarId" expression="$func:calendarId" />
		<property name="uri.var.eventId" expression="$func:eventId" />
		<property name="uri.var.alwaysIncludeEmail" expression="$func:alwaysIncludeEmail" />
		<property name="uri.var.maxAttendees" expression="$func:maxAttendees"/>
		<property name="uri.var.maxResults" expression="$func:maxResults"/>
		<property name="uri.var.originalStart" expression="$func:originalStart" />
		<property name="uri.var.pageToken" expression="$func:pageToken" />
		<property name="uri.var.showDeleted" expression="$func:showDeleted" />
		<property name="uri.var.timeMax" expression="$func:timeMax" />
		<property name="uri.var.timeMin" expression="$func:timeMin" />
		<property name="uri.var.timeZone" expression="$func:timeZone" />
		<property name="uri.var.fields" expression="$func:fields" />

		<script language="js"><![CDATA[ 
			
			//url param variables
			var calendarId = encodeURIComponent(mc.getProperty("uri.var.calendarId"));
	        var eventId = encodeURIComponent(mc.getProperty("uri.var.eventId"));
    		var alwaysIncludeEmail = mc.getProperty("uri.var.alwaysIncludeEmail");
	        var maxAttendees = mc.getProperty("uri.var.maxAttendees");
	        var maxResults = mc.getProperty("uri.var.maxResults");
	        var originalStart = mc.getProperty("uri.var.originalStart");
	        var pageToken = mc.getProperty("uri.var.pageToken");
	        var showDeleted = mc.getProperty("uri.var.showDeleted");
	        var timeMax = mc.getProperty("uri.var.timeMax");
	        var timeMin = mc.getProperty("uri.var.timeMin");
	        var timeZone = mc.getProperty("uri.var.timeZone");
	        var fields = mc.getProperty("uri.var.fields");
	        
	        //url param processing start	
			mc.setProperty("uri.var.calendarId", calendarId);
			mc.setProperty("uri.var.eventId", eventId);
	        var urlParamString = '';
	           
	        if (alwaysIncludeEmail != null && alwaysIncludeEmail != "") {
				urlParamString = '&alwaysIncludeEmail=' + encodeURIComponent(alwaysIncludeEmail);
			}
			
			if (maxAttendees != null && maxAttendees != "") {
				urlParamString += '&maxAttendees=' + maxAttendees;
			}
			
			if (maxResults != null && maxResults != "") {
				urlParamString += '&maxResults=' + maxResults;
			}
			
			if (originalStart != null && originalStart != "") {
				urlParamString += '&originalStart=' + encodeURIComponent(originalStart);
			}
			
			if (pageToken != null && pageToken != "") {
				urlParamString += '&pageToken=' + encodeURIComponent(pageToken);
			}
			
			if (showDeleted != null && showDeleted != "") {
				urlParamString += '&showDeleted=' + encodeURIComponent(showDeleted);
			}
			
			if (timeMax != null && timeMax != "") {
				urlParamString += '&timeMax=' + encodeURIComponent(timeMax);
			}
			
			if (timeMin != null && timeMin != "") {
				urlParamString += '&timeMin=' + encodeURIComponent(timeMin);
			}
			
			if (timeZone != null && timeZone != "") {
				urlParamString += '&timeZone=' + encodeURIComponent(timeZone);
			}
			
			if (fields != null && fields != "") {
				urlParamString += '&fields=' + encodeURIComponent(fields);
			}
			
			if(urlParamString != '') {
				urlParamString = '?' + urlParamString.substring(1);
			}
			
			mc.setProperty('uri.var.urlParamString', urlParamString);
			//url param processing end
			
		]]></script>

		<call>
			<endpoint>
				<http method="get"
					uri-template="{uri.var.apiUrl}/calendar/v3/calendars/{uri.var.calendarId}/events/{uri.var.eventId}/instances{uri.var.urlParamString}" />
			</endpoint>
		</call>
		
		<!-- Remove response custom header information -->
		<header name="X-Frame-Options" scope="transport" action="remove" />
        <header name="X-XSS-Protection" scope="transport" action="remove" />
        <header name="Alternate-Protocol" scope="transport" action="remove" />
        <header name="X-Content-Type-Options" scope="transport" action="remove" />

	</sequence>

</template>