<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~   WSO2 Inc. licenses this file to you under the Apache License,
  ~   Version 2.0 (the "License"); you may not use this file except
  ~   in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->
<template name="updateLabels" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="id" description="The ID of the label to update"/>
    <parameter name="name" description="Specifies the type of contact to create the record type.company/person"/>
    <parameter name="messageListVisibility"
               description=" Describes a dictionary organized in the same structure as a contact listing response"/>
    <parameter name="labelListVisibility" description="Specifies whether tags should be included in the results"/>
    <parameter name="type" description="Avatar url to be added"/>
    <parameter name="messagesTotal" description="Avatar url to be added"/>
    <parameter name="messagesUnread" description="Avatar url to be added"/>
    <parameter name="threadsTotal" description="Avatar url to be added"/>
    <parameter name="threadsUnread" description="Avatar url to be added"/>
    <sequence>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.messageListVisibility" expression="$func:messageListVisibility"/>
        <property name="uri.var.labelListVisibility" expression="$func:labelListVisibility"/>
        <property name="uri.var.type" expression="$func:type"/>
        <property name="uri.var.messagesTotal" expression="$func:messagesTotal"/>
        <property name="uri.var.messagesUnread" expression="$func:messagesUnread"/>
        <property name="uri.var.threadsTotal" expression="$func:threadsTotal"/>
        <property name="uri.var.threadsUnread" expression="$func:threadsUnread"/>
        <property name="uri.var.id" expression="$func:id"/>
        <payloadFactory media-type="json">
            <format>
                {
                "name":"$1",
                "messageListVisibility":"$2",
                "labelListVisibility":"$3",
                "type":"$4",
                "messagesTotal":"$5",
                "messagesUnread":"$6",
                "threadsTotal":"$7",
                "threadsUnread":"$8"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.name')"/>
                <arg expression="get-property('uri.var.messageListVisibility')"/>
                <arg expression="get-property('uri.var.labelListVisibility')"/>
                <arg expression="get-property('uri.var.type')"/>
                <arg expression="get-property('uri.var.messagesTotal')"/>
                <arg expression="get-property('uri.var.messagesUnread')"/>
                <arg expression="get-property('uri.var.threadsTotal')"/>
                <arg expression="get-property('uri.var.threadsUnread')"/>
            </args>
        </payloadFactory>
        <filter xpath="get-property('uri.var.type') = '' or (not(string(get-property('uri.var.type'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
                    delete payload["type"];
                    mc.setPayloadJSON(payload);
                    ]]>
                </script>
            </then>
        </filter>
        <filter xpath="get-property('uri.var.messagesTotal') = '' or (not(string(get-property('uri.var.messagesTotal'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
                    delete payload["messagesTotal"];
                    mc.setPayloadJSON(payload);
                    ]]>
                </script>
            </then>
        </filter>
        <filter xpath="get-property('uri.var.messagesUnread') = '' or (not(string(get-property('uri.var.messagesUnread'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
                    delete payload["messagesUnread"];
                    mc.setPayloadJSON(payload);
                    ]]>
                </script>
            </then>
        </filter>
        <filter xpath="get-property('uri.var.threadsTotal') = '' or (not(string(get-property('uri.var.threadsTotal'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
                    delete payload["threadsTotal"];
                    mc.setPayloadJSON(payload);
                    ]]>
                </script>
            </then>
        </filter>
        <filter xpath="get-property('uri.var.threadsUnread') = '' or (not(string(get-property('uri.var.threadsUnread'))))">
            <then>
                <script language="js"><![CDATA[
                    var payload = mc.getPayloadJSON();
                    delete payload["threadsUnread"];
                    mc.setPayloadJSON(payload);
                    ]]>
                </script>
            </then>
        </filter>
        <property name="messageType" value="application/json"
                  scope="axis2"/>
        <header name="Content-Type" value="application/json" scope="transport"/>
        <call>
            <endpoint>
                <http method="put"
                      uri-template="{+uri.var.apiUrl}/{+uri.var.apiVersion}/users/{+uri.var.userId}/labels/{+uri.var.id}"/>
            </endpoint>
        </call>
    </sequence>
</template>