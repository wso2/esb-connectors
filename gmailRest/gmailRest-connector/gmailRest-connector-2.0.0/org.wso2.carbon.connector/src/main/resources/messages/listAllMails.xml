<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

    WSO2 Inc. licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file except
    in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<template name="listAllMails" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="includeSpamTrash"
               description="Include messages from SPAM and TRASH in the results. (Default: false)"/>
    <parameter name="labelIds"
               description="Only return messages with labels that match all of the specified label IDs"/>
    <parameter name="maxResults" description="Maximum number of messages to return"/>
    <parameter name="pageToken" description="Page token to retrieve a specific page of results in the list"/>
    <parameter name="q"
               description="Only return messages matching the specified query. Supports the same query format as the
               Gmail search box"/>
    <sequence>
        <property name="uri.var.includeSpamTrash" expression="$func:includeSpamTrash"/>
        <property name="uri.var.labelIds" expression="$func:labelIds"/>
        <property name="uri.var.maxResults" expression="$func:maxResults"/>
        <property name="uri.var.pageToken" expression="$func:pageToken"/>
        <property name="uri.var.q" expression="$func:q"/>
        <property name="gmailParameters" value=""/>
        <script language="js">
            <![CDATA[
                   var query = mc.getProperty('uri.var.q');
					var encodedQuery = encodeURIComponent(query);
					mc.setProperty('uri.var.q', encodedQuery);
            ]]>
        </script>
        <filter
                xpath="get-property('uri.var.includeSpamTrash') = '' or  not(string(get-property('uri.var.includeSpamTrash')))">
            <then>
                <property name="uri.var.includeSpamTrash" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               '&amp;includeSpamTrash=', get-property('uri.var.includeSpamTrash'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.labelIds') = '' or  not(string(get-property('uri.var.labelIds')))">
            <then>
                <property name="uri.var.labelIds" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               '&amp;labelIds=', get-property('uri.var.labelIds'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.maxResults') = '' or  not(string(get-property('uri.var.maxResults')))">
            <then>
                <property name="uri.var.maxResults" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               '&amp;maxResults=', get-property('uri.var.maxResults'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.pageToken') = '' or  not(string(get-property('uri.var.pageToken')))">
            <then>
                <property name="uri.var.pageToken" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               '&amp;pageToken=', get-property('uri.var.pageToken'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.q') = '' or  not(string(get-property('uri.var.q')))">
            <then>
                <property name="uri.var.q" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               '&amp;q=', get-property('uri.var.q'))"/>
            </else>
        </filter>
        <property name="uri.var.parameters" expression="get-property('gmailParameters')"/>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}/{+uri.var.apiVersion}/users/{+uri.var.userId}/messages?{+uri.var.parameters}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="x-li-format" scope="transport" action="remove"/>
        <header name="X-LI-UUID" scope="transport" action="remove"/>
        <header name="X-Li-Pop" scope="transport" action="remove"/>
        <header name="X-Li-Fabric" scope="transport" action="remove"/>
        <header name="x-li-request-id" scope="transport" action="remove"/>
    </sequence>
</template>