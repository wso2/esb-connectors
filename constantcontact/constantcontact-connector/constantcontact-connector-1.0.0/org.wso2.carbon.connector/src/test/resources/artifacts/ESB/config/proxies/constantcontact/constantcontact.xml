<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="constantcontact"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiToken" expression="json-eval($.apiToken)"/>
            <property name="apiKey" expression="json-eval($.apiKey)"/>
            <property name="contactId" expression="json-eval($.contactId)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="status" expression="json-eval($.status)"/>
            <property name="listId" expression="json-eval($.listId)"/>
            <property name="modifiedSince" expression="json-eval($.modifiedSince)"/>
            <property name="limit" expression="json-eval($.limit)"/>
            <property name="campaignId" expression="json-eval($.campaignId)"/>
            <property name="scheduledDate" expression="json-eval($.scheduledDate)"/>
            <property name="createdSince" expression="json-eval($.createdSince)"/>
            <property name="firstName" expression="json-eval($.firstName)"/>
            <property name="middleName" expression="json-eval($.middleName)"/>
            <property name="lastName" expression="json-eval($.lastName)"/>
            <property name="fax" expression="json-eval($.fax)"/>
            <property name="customFields" expression="json-eval($.customFields)"/>
            <property name="cellPhone" expression="json-eval($.cellPhone)"/>
            <property name="actionBy" expression="json-eval($.actionBy)"/>
            <property name="companyName" expression="json-eval($.companyName)"/>
            <property name="homePhone" expression="json-eval($.homePhone)"/>
            <property name="prefixName" expression="json-eval($.prefixName)"/>
            <property name="workPhone" expression="json-eval($.workPhone)"/>
            <property name="notes" expression="json-eval($.notes)"/>
            <property name="addresses" expression="json-eval($.addresses)"/>
            <property name="lists" expression="json-eval($.lists)"/>
            <property name="emailAddresses" expression="json-eval($.emailAddresses)"/>
            <property name="jobTitle" expression="json-eval($.jobTitle)"/>
            <property name="textContent" expression="json-eval($.textContent)"/>
            <property name="greetingName" expression="json-eval($.greetingName)"/>
            <property name="viewAsWebPageLinkText"
                      expression="json-eval($.viewAsWebPageLinkText)"/>
            <property name="subject" expression="json-eval($.subject)"/>
            <property name="emailContentFormat" expression="json-eval($.emailContentFormat)"/>
            <property name="styleSheet" expression="json-eval($.styleSheet)"/>
            <property name="permissionReminderText"
                      expression="json-eval($.permissionReminderText)"/>
            <property name="greetingSalutations"
                      expression="json-eval($.greetingSalutations)"/>
            <property name="messageFooter" expression="json-eval($.messageFooter)"/>
            <property name="isPermissionReminderEnabled"
                      expression="json-eval($.isPermissionReminderEnabled)"/>
            <property name="emailContent" expression="json-eval($.emailContent)"/>
            <property name="viewAsWebPageText" expression="json-eval($.viewAsWebPageText)"/>
            <property name="sentToContactLists" expression="json-eval($.sentToContactLists)"/>
            <property name="fromEmail" expression="json-eval($.fromEmail)"/>
            <property name="fromName" expression="json-eval($.fromName)"/>
            <property name="greetingString" expression="json-eval($.greetingString)"/>
            <property name="replyToEmail" expression="json-eval($.replyToEmail)"/>
            <property name="isViewAsWebpageEnabled"
                      expression="json-eval($.isViewAsWebpageEnabled)"/>
            <property name="updateSummary" expression="json-eval($.updateSummary)"/>
            <constantcontact.init>
                <apiToken>{$ctx:apiToken}</apiToken>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiKey>{$ctx:apiKey}</apiKey>
            </constantcontact.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:getContactById">
                    <constantcontact.getContactById>
                        <contactId>{$ctx:contactId}</contactId>
                    </constantcontact.getContactById>
                </case>
                <case regex="urn:createContactList">
                    <constantcontact.createContactList>
                        <status>{$ctx:status}</status>
                        <name>{$ctx:name}</name>
                    </constantcontact.createContactList>
                </case>
                <case regex="urn:getContactListById">
                    <constantcontact.getContactListById>
                        <listId>{$ctx:listId}</listId>
                    </constantcontact.getContactListById>
                </case>
                <case regex="urn:listContactLists">
                    <constantcontact.listContactLists>
                        <modifiedSince>{$ctx:modifiedSince}</modifiedSince>
                    </constantcontact.listContactLists>
                </case>
                <case regex="urn:listContactsInaList">
                    <constantcontact.listContactsInaList>
                        <limit>{$ctx:limit}</limit>
                        <listId>{$ctx:listId}</listId>
                        <modifiedSince>{$ctx:modifiedSince}</modifiedSince>
                    </constantcontact.listContactsInaList>
                </case>
                <case regex="urn:createSchedule">
                    <constantcontact.createSchedule>
                        <campaignId>{$ctx:campaignId}</campaignId>
                        <scheduledDate>{$ctx:scheduledDate}</scheduledDate>
                    </constantcontact.createSchedule>
                </case>
                <case regex="urn:getSchedule">
                    <constantcontact.getSchedule>
                        <campaignId>{$ctx:campaignId}</campaignId>
                    </constantcontact.getSchedule>
                </case>
                <case regex="urn:listCampaignClicks">
                    <constantcontact.listCampaignClicks>
                        <limit>{$ctx:limit}</limit>
                        <campaignId>{$ctx:campaignId}</campaignId>
                        <createdSince>{$ctx:createdSince}</createdSince>
                    </constantcontact.listCampaignClicks>
                </case>
                <case regex="urn:listCampaignOpeners">
                    <constantcontact.listCampaignOpeners>
                        <limit>{$ctx:limit}</limit>
                        <campaignId>{$ctx:campaignId}</campaignId>
                        <createdSince>{$ctx:createdSince}</createdSince>
                    </constantcontact.listCampaignOpeners>
                </case>
                <case regex="urn:createContact">
                    <constantcontact.createContact>
                        <lastName>{$ctx:lastName}</lastName>
                        <middleName>{$ctx:middleName}</middleName>
                        <fax>{$ctx:fax}</fax>
                        <customFields>{$ctx:customFields}</customFields>
                        <cellPhone>{$ctx:cellPhone}</cellPhone>
                        <actionBy>{$ctx:actionBy}</actionBy>
                        <companyName>{$ctx:companyName}</companyName>
                        <homePhone>{$ctx:homePhone}</homePhone>
                        <prefixName>{$ctx:prefixName}</prefixName>
                        <workPhone>{$ctx:workPhone}</workPhone>
                        <notes>{$ctx:notes}</notes>
                        <addresses>{$ctx:addresses}</addresses>
                        <firstName>{$ctx:firstName}</firstName>
                        <lists>{$ctx:lists}</lists>
                        <emailAddresses>{$ctx:emailAddresses}</emailAddresses>
                        <jobTitle>{$ctx:jobTitle}</jobTitle>
                    </constantcontact.createContact>
                </case>
                <case regex="urn:updateContact">
                    <constantcontact.updateContact>
                        <middleName>{$ctx:middleName}</middleName>
                        <lastName>{$ctx:lastName}</lastName>
                        <fax>{$ctx:fax}</fax>
                        <customFields>{$ctx:customFields}</customFields>
                        <cellPhone>{$ctx:cellPhone}</cellPhone>
                        <actionBy>{$ctx:actionBy}</actionBy>
                        <companyName>{$ctx:companyName}</companyName>
                        <homePhone>{$ctx:homePhone}</homePhone>
                        <prefixName>{$ctx:prefixName}</prefixName>
                        <contactId>{$ctx:contactId}</contactId>
                        <workPhone>{$ctx:workPhone}</workPhone>
                        <notes>{$ctx:notes}</notes>
                        <addresses>{$ctx:addresses}</addresses>
                        <firstName>{$ctx:firstName}</firstName>
                        <lists>{$ctx:lists}</lists>
                        <jobTitle>{$ctx:jobTitle}</jobTitle>
                        <emailAddresses>{$ctx:emailAddresses}</emailAddresses>
                    </constantcontact.updateContact>
                </case>
                <case regex="urn:createCampaign">
                    <constantcontact.createCampaign>
                        <textContent>{$ctx:textContent}</textContent>
                        <greetingName>{$ctx:greetingName}</greetingName>
                        <viewAsWebPageLinkText>{$ctx:viewAsWebPageLinkText}</viewAsWebPageLinkText>
                        <subject>{$ctx:subject}</subject>
                        <emailContentFormat>{$ctx:emailContentFormat}</emailContentFormat>
                        <styleSheet>{$ctx:styleSheet}</styleSheet>
                        <permissionReminderText>{$ctx:permissionReminderText}</permissionReminderText>
                        <greetingSalutations>{$ctx:greetingSalutations}</greetingSalutations>
                        <messageFooter>{$ctx:messageFooter}</messageFooter>
                        <isPermissionReminderEnabled>{$ctx:isPermissionReminderEnabled}</isPermissionReminderEnabled>
                        <emailContent>{$ctx:emailContent}</emailContent>
                        <name>{$ctx:name}</name>
                        <viewAsWebPageText>{$ctx:viewAsWebPageText}</viewAsWebPageText>
                        <sentToContactLists>{$ctx:sentToContactLists}</sentToContactLists>
                        <fromEmail>{$ctx:fromEmail}</fromEmail>
                        <fromName>{$ctx:fromName}</fromName>
                        <greetingString>{$ctx:greetingString}</greetingString>
                        <replyToEmail>{$ctx:replyToEmail}</replyToEmail>
                        <isViewAsWebpageEnabled>{$ctx:isViewAsWebpageEnabled}</isViewAsWebpageEnabled>
                    </constantcontact.createCampaign>
                </case>
                <case regex="urn:getCampaignById">
                    <constantcontact.getCampaignById>
                        <campaignId>{$ctx:campaignId}</campaignId>
                        <updateSummary>{$ctx:updateSummary}</updateSummary>
                    </constantcontact.getCampaignById>
                </case>
                <case regex="urn:listCampaigns">
                    <constantcontact.listCampaigns>
                        <limit>{$ctx:limit}</limit>
                        <status>{$ctx:status}</status>
                        <modifiedSince>{$ctx:modifiedSince}</modifiedSince>
                    </constantcontact.listCampaigns>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>                  