<template name="createPost" xmlns="http://ws.apache.org/ns/synapse">
	<parameter name="message" description="The main body of the post" />
	<parameter name="link" description="The URL of a link to attach to the post" />
	<parameter name="picture"
		description="Determines the preview image associated with the link" />
	<parameter name="name" description="Overwrites the title of the link preview" />
	<parameter name="caption"
		description="Overwrites the caption under the title in the link preview" />
	<parameter name="description"
		description="Overwrites the description in the link preview" />
	<parameter name="actions" description="The action links attached to the post" />
	<parameter name="place"
		description="Page ID of a location associated with this post" />
	<parameter name="tags"
		description="List of user IDs of people tagged in this post" />
	<parameter name="privacy" description="Determines the privacy settings of the post" />
	<parameter name="objectAttachment"
		description="Facebook ID for an existing picture in the person's photo albums to use as the thumbnail image" />
	<sequence>
		<property name="uri.var.message" expression="$func:message" />
		<property name="uri.var.link" expression="$func:link" />
		<property name="uri.var.picture" expression="$func:picture" />
		<property name="uri.var.name" expression="$func:name" />
		<property name="uri.var.caption" expression="$func:caption" />
		<property name="uri.var.description" expression="$func:description" />
		<property name="uri.var.actions" expression="$func:actions" />
		<property name="uri.var.place" expression="$func:place" />
		<property name="uri.var.tags" expression="$func:tags" />
		<property name="uri.var.privacy" expression="$func:privacy" />
		<property name="uri.var.objectAttachment" expression="$func:objectAttachment" />
		<payloadFactory media-type="json">
			<format>
				{
				"access_token":"$1"
				}
			</format>
			<args>
				<arg expression="get-property('uri.var.accessToken')" />
			</args>
		</payloadFactory>
		<script language="js"><![CDATA[
		
			var message=mc.getProperty('uri.var.message');
			var link=mc.getProperty('uri.var.link');
			var picture=mc.getProperty('uri.var.picture');
			var name=mc.getProperty('uri.var.name');
			var caption=mc.getProperty('uri.var.caption');
			var description=mc.getProperty('uri.var.description');
			var actions=mc.getProperty('uri.var.actions');
			var place=mc.getProperty('uri.var.place');
			var tags=mc.getProperty('uri.var.tags');
			var privacy=mc.getProperty('uri.var.privacy');
			var objectAttachment=mc.getProperty('uri.var.objectAttachment');
			
			
			payload = mc.getPayloadJSON();
			
			if(message != null && message != ""){
				payload.message=message;
			}
			
			if(link != null && link != ""){
				
				payload.link=link;
				}
				
				if(picture != null && picture != ""){
					payload.picture=picture;
				}
				
				if(name != null && name != ""){
					payload.name=name;
				}
				
				if(caption != null && caption != ""){
					payload.caption=caption;
				}
				
				if(description != null && description != ""){
					payload.description=description;
				}
			
			
			if(actions !=null && actions != ""){
				payload.actions=actions;
			}
			
			if(place !=null && place != ""){
				payload.place=place;
			}
			
			if(tags !=null && tags != ""){
				payload.tags=tags;
			}
			
			if(privacy !=null && privacy != ""){
				payload.privacy=privacy;
			}
			
			if(objectAttachment !=null && objectAttachment != ""){
				payload.object_attachment=objectAttachment;
			}
			
           mc.setPayloadJSON(payload);
         ]]></script>
		<property name="messageType" value="application/x-www-form-urlencoded"
			scope="axis2" />
		<call>
			<endpoint>
				<http method="post" uri-template="{uri.var.apiUrl}/me/feed" />
			</endpoint>
		</call>
		<!-- Remove response custom header information -->
		<header name="X-FB-Debug" scope="transport" action="remove" />
		<header name="X-FB-Rev" scope="transport" action="remove" />
		<header name="WWW-Authenticate" scope="transport" action="remove" />
	</sequence>
</template>