<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="editComment" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="commentId" description="id of the comment to edit"/>
    <parameter name="comment" description="comment text"/>
    <parameter name="format" description="response format expected"/>
    <sequence>
        <property name="NO_ENTITY_BODY" scope="axis2" action="remove"/>
        <property name="POST_TO_URI" value="true" scope="axis2"/>
        <property name="flickr.method" value="flickr.photos.comments.editComment"/>
        <property name="flickr.commentId" expression="$func:commentId"/>
        <property name="flickr.comment" expression="$func:comment"/>
        <property name="flickr.httpMethod" value="POST"/>
        <property name="flickr.format" expression="$func:format"/>
        <!--use the encorder class to encode the user inputs-->
        <property name="flickr.unencoded" expression="get-property('flickr.comment')"/>
        <class name="org.wso2.carbon.connector.flickr.Encoder"/>
        <property name="flickr.comment" expression="get-property('flickr.encoded')"/>
        <property name="flickr.parameters" expression="fn:concat(
        'comment_id=',get-property('flickr.commentId'),
        '&amp;comment_text=',get-property('flickr.comment'),
        '&amp;method=', get-property('flickr.method'),
        '&amp;oauth_consumer_key=', get-property('flickr.oauth.consumerKey'),
        '&amp;oauth_nonce=', get-property('flickr.oauth.nonce'),
        '&amp;oauth_signature_method=HMAC-SHA1',
        '&amp;oauth_timestamp=', get-property('flickr.oauth.timestamp'),
        '&amp;oauth_token=', get-property('flickr.oauth.accessToken'),
        '&amp;oauth_version=1.0',
        )"/>
        <!--Adding optional parameters.-->
        <filter
                xpath="(not(get-property('flickr.format') = '' or  (not(string(get-property('flickr.format'))))))">
            <then>
                <!--
                default flickr response for json format is a json callback function.
                But the ESB expect raw json. To get that we additionally set the
                nojsoncallback=1 parameter.
                -->
                <filter xpath="(get-property('flickr.format') = 'json')">
                    <then>
                        <script language="js"><![CDATA[
                        var query = mc.getProperty("flickr.parameters");
                        query = query.replace("oauth_consumer_key", "nojsoncallback=1&oauth_consumer_key");
                        mc.setProperty("flickr.parameters",query);
                        ]]></script>
                    </then>
                </filter>
                <script language="js"><![CDATA[
                var query = mc.getProperty("flickr.parameters");
                query = query.replace("method="+mc.getProperty("flickr.method"),
                "format=" + mc.getProperty("flickr.format") + "&method="+mc.getProperty("flickr.method"));
                mc.setProperty("flickr.parameters",query);
                ]]></script>
            </then>
        </filter>
        <class name="org.wso2.carbon.connector.flickr.GenerateSignature"/>
        <property name="uri.var.signature" expression="get-property('flickr.oauth.signature')"/>
        <property name="uri.var.parameters" expression="get-property('flickr.parameters')"/>
        <property name="uri.var.apiUri" expression="get-property('flickr.apiUri')"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="legacy-encoding:{uri.var.apiUri}?{uri.var.parameters}&amp;oauth_signature={uri.var.signature}"/>
            </endpoint>
        </call>
        <header name="P3P" action="remove" scope="transport"/>
    </sequence>
</template>